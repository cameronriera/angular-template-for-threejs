var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractServerActor.html",[0,0.099,1,2.145]],["body/classes/AbstractServerActor.html",[0,0.111,1,3.165,2,4.378,3,0.166,4,0.166,5,0.129,6,4.051,7,6.759,8,1.495,9,3.796,10,1.199,11,1.093,12,0.516,13,1.844,14,2.531,15,0.714,16,2.764,17,3.986,18,3.986,19,3.986,20,1.247,21,3.75,22,3.99,23,3.99,24,3.165,25,3.75,26,2.892,27,3.54,28,0.82,29,0.015,30,1.345,31,1.152,32,1.106,33,3.185,34,0.912,35,4.378,36,4.378,37,0.761,38,1.631,39,4.378,40,4.378,41,3.223,42,4.378,43,1.998,44,4.378,45,4.378,46,3.878,47,4.378,48,4.378,49,4.378,50,0.194,51,1.604,52,5.346,53,0.147,54,4.378,55,0.166,56,0.946,57,1.237,58,4.378,59,5.595,60,4.378,61,4.378,62,4.378,63,4.378,64,0.008,65,0.011,66,0.008]],["title/injectables/AnimationService.html",[67,2.032,68,1.93]],["body/injectables/AnimationService.html",[0,0.104,3,0.155,4,0.155,5,0.121,12,0.483,13,1.763,15,0.683,16,2.727,26,3.125,28,0.459,29,0.015,31,1.102,32,1.058,34,0.846,37,0.736,38,1.577,43,1.418,46,3.243,50,0.186,53,0.138,55,0.155,57,1.058,64,0.008,65,0.01,66,0.008,67,2.868,68,2.724,69,2.711,70,3.551,71,2.711,72,5.103,73,6.678,74,5.518,75,5.434,76,3.881,77,4.302,78,4.785,79,1.181,80,5.518,81,3.941,82,4.785,83,5.518,84,5.518,85,6.678,86,6.678,87,6.241,88,2.312,89,4.865,90,6.678,91,7.181,92,7.181,93,1.016,94,1.035,95,1.434,96,5.518,97,0.665,98,0.532,99,0.665,100,4.096,101,4.096,102,4.302,103,4.096,104,5.518,105,4.096,106,4.785,107,1.229,108,5.518,109,5.518,110,5.518,111,5.518,112,5.518,113,5.518,114,5.518,115,4.865,116,2.933,117,1.076,118,5.518,119,4.096,120,6.044,121,4.096,122,4.096,123,2.128,124,4.096,125,4.096,126,4.096,127,0.754,128,4.096,129,4.096,130,2.925]],["title/modules/AtftAnimationModule.html",[131,0.635,132,2.588]],["body/modules/AtftAnimationModule.html",[0,0.147,3,0.22,4,0.22,5,0.171,29,0.015,50,0.232,53,0.195,55,0.22,64,0.011,65,0.013,66,0.011,68,3.878,131,0.942,132,5.2,133,1.854,134,1.854,135,0.523,136,2.009,137,2.009,138,0.781,139,2.009,140,5.031,141,5.031,142,2.289,143,2.009,144,1.93,145,5.803,146,5.803,147,2.483,148,5.803]],["title/modules/AtftCameraModule.html",[131,0.635,149,2.588]],["body/modules/AtftCameraModule.html",[0,0.141,3,0.211,4,0.211,5,0.164,29,0.015,50,0.243,53,0.187,55,0.211,64,0.01,65,0.013,66,0.01,131,0.904,133,1.778,134,1.778,135,0.502,136,2.496,137,1.927,138,0.592,139,2.496,142,2.232,143,1.927,144,1.851,147,2.421,149,5.21,150,4.825,151,4.825,152,4.825,153,1.432,154,5.565,155,5.565,156,2.633,157,2.093,158,1.111,159,5.565,160,2.008]],["title/modules/AtftConnectorModule.html",[131,0.635,161,2.588]],["body/modules/AtftConnectorModule.html",[0,0.136,3,0.203,4,0.203,5,0.158,29,0.015,50,0.249,53,0.18,55,0.203,64,0.01,65,0.012,66,0.01,131,0.868,133,1.708,134,1.708,135,0.482,136,2.452,137,1.851,138,0.569,139,2.452,142,2.178,143,1.851,144,1.778,147,2.363,156,2.57,157,2.01,160,1.929,161,5.289,162,4.636,163,4.636,164,4.636,165,1.425,166,1.425,167,5.346,168,5.346,169,1.067,170,1.256,171,6.55]],["title/modules/AtftControlModule.html",[131,0.635,172,2.588]],["body/modules/AtftControlModule.html",[0,0.136,3,0.203,4,0.203,5,0.158,29,0.015,50,0.249,53,0.18,55,0.203,64,0.01,65,0.012,66,0.01,131,0.87,133,1.712,134,1.712,135,0.483,136,2.454,137,1.855,138,0.57,139,2.454,142,2.181,143,1.855,144,1.781,147,2.366,156,2.573,157,2.014,160,1.932,172,5.29,173,4.644,174,4.644,175,4.644,176,1.425,177,1.425,178,5.356,179,5.356,180,1.069,181,6.558,182,1.069]],["title/modules/AtftDataCenterActorModule.html",[131,0.635,183,2.792]],["body/modules/AtftDataCenterActorModule.html",[0,0.114,3,0.171,4,0.171,5,0.133,6,2.344,29,0.015,50,0.26,53,0.152,55,0.171,64,0.008,65,0.011,66,0.008,131,0.732,133,1.441,134,1.441,135,0.407,136,2.267,137,1.562,138,0.48,139,2.267,142,1.956,143,1.562,144,1.5,147,2.122,156,2.308,157,1.696,160,2.122,183,5.825,184,3.91,185,3.91,186,3.91,187,3.91,188,1.392,189,1.392,190,1.392,191,1.392,192,1.392,193,1.392,194,4.563,195,4.51,196,3.516,197,2.985,198,4.51,199,4.51,200,7.379,201,4.51,202,6.938,203,0.865,204,0.865,205,0.865,206,0.865,207,4.51]],["title/modules/AtftEffectModule.html",[131,0.635,208,2.588]],["body/modules/AtftEffectModule.html",[0,0.141,3,0.211,4,0.211,5,0.164,29,0.015,50,0.243,53,0.187,55,0.211,64,0.01,65,0.013,66,0.01,131,0.904,133,1.778,134,1.778,135,0.502,136,2.496,137,1.927,138,0.592,139,2.496,142,2.232,143,1.927,144,1.851,147,2.421,156,2.633,157,2.093,160,2.008,208,5.21,209,4.825,210,4.825,211,4.825,212,1.373,213,5.565,214,5.565,215,1.067,216,5.565]],["title/modules/AtftHelperModule.html",[131,0.635,217,2.588]],["body/modules/AtftHelperModule.html",[0,0.131,3,0.196,4,0.196,5,0.153,11,1.361,29,0.015,50,0.253,53,0.174,55,0.196,64,0.01,65,0.012,66,0.01,131,0.84,133,1.653,134,1.653,135,0.466,136,2.416,137,1.791,138,0.55,139,2.416,142,2.134,143,1.791,144,1.72,147,2.315,156,2.518,157,1.945,160,1.866,217,5.336,218,4.484,219,4.484,220,4.484,221,1.419,222,1.419,223,5.172,224,5.172,225,1.033,226,6.418,227,5.172,228,0.992]],["title/modules/AtftLightModule.html",[131,0.635,229,2.588]],["body/modules/AtftLightModule.html",[0,0.131,3,0.196,4,0.196,5,0.152,29,0.015,50,0.253,53,0.174,55,0.196,64,0.01,65,0.012,66,0.01,131,0.838,133,1.65,134,1.65,135,0.465,136,2.414,137,1.788,138,0.549,139,2.414,142,2.132,143,1.788,144,1.717,147,2.312,156,2.515,157,1.941,160,1.862,229,5.335,230,4.476,231,4.476,232,4.476,233,1.418,234,1.418,235,1.418,236,5.162,237,5.162,238,1.031,239,6.972,240,1.031,241,1.031]],["title/modules/AtftLoaderModule.html",[131,0.635,242,2.588]],["body/modules/AtftLoaderModule.html",[0,0.131,3,0.196,4,0.196,5,0.152,29,0.015,50,0.253,53,0.174,55,0.196,64,0.01,65,0.012,66,0.01,131,0.838,133,1.65,134,1.65,135,0.465,136,2.414,137,1.788,138,0.549,139,2.414,142,2.132,143,1.788,144,1.717,147,2.312,156,2.515,157,1.941,160,1.862,242,5.335,243,4.476,244,4.476,245,4.476,246,1.418,247,1.418,248,1.418,249,5.162,250,5.162,251,0.875,252,6.972,253,0.99,254,0.99]],["title/modules/AtftMeshModule.html",[131,0.635,255,2.588]],["body/modules/AtftMeshModule.html",[0,0.111,3,0.166,4,0.166,5,0.129,29,0.015,50,0.26,53,0.147,55,0.166,64,0.008,65,0.011,66,0.008,107,0.804,131,0.709,133,1.395,134,1.395,135,0.394,136,2.231,137,1.511,138,0.465,139,2.231,142,1.915,143,1.511,144,1.452,147,2.077,156,2.259,157,1.641,160,1.575,228,0.837,255,5.415,256,3.785,257,3.785,258,3.785,259,1.386,260,1.329,261,1.386,262,1.386,263,1.386,264,1.386,265,1.386,266,1.386,267,4.365,268,4.365,269,0.837,270,6.562,271,0.871,272,0.837,273,0.871,274,0.871,275,0.871,276,0.837]],["title/modules/AtftModule.html",[131,0.635,194,2.418]],["body/modules/AtftModule.html",[0,0.109,3,0.163,4,0.163,5,0.127,29,0.015,32,0.824,50,0.262,53,0.145,55,0.163,64,0.008,65,0.011,66,0.008,81,3.07,131,0.926,132,5.179,133,1.374,134,1.374,135,0.388,136,1.489,137,1.489,138,0.458,139,2.214,142,1.896,143,1.489,144,1.43,147,2.056,149,5.179,160,2.307,172,5.179,194,5.06,208,5.179,277,3.728,278,3.728,279,3.728,280,5.179,281,5.179,282,5.179,283,5.179,284,4.299,285,4.299,286,4.299,287,4.299,288,4.299,289,4.299,290,4.299,291,4.233,292,4.299,293,4.299,294,4.299,295,4.299,296,4.299,297,4.299,298,4.299,299,4.299,300,4.299,301,4.299,302,4.299,303,3.728,304,4.299,305,3.728,306,2.846,307,4.299,308,3.728,309,4.299]],["title/modules/AtftObjectModule.html",[131,0.635,280,2.588]],["body/modules/AtftObjectModule.html",[0,0.114,3,0.171,4,0.171,5,0.133,29,0.015,50,0.26,53,0.152,55,0.171,64,0.008,65,0.011,66,0.008,131,0.731,133,1.439,134,1.439,135,0.406,136,2.265,137,1.559,138,0.479,139,2.265,142,1.954,143,1.559,144,1.497,147,2.12,156,2.305,157,1.693,160,2.12,161,5.215,217,5.215,229,5.215,242,5.215,255,5.215,280,5.406,310,3.904,311,3.904,312,3.904,313,3.904,314,1.28,315,5.215,316,4.503,317,4.503,318,4.503,319,4.503,320,4.503,321,4.503,322,4.503,323,4.503,324,4.503,325,4.503,326,4.503,327,4.503,328,4.503,329,4.503,330,4.503]],["title/modules/AtftPipeModule.html",[131,0.635,291,2.588]],["body/modules/AtftPipeModule.html",[0,0.136,3,0.204,4,0.204,5,0.159,29,0.015,50,0.249,53,0.181,55,0.204,64,0.01,65,0.012,66,0.01,131,0.873,133,1.718,134,1.718,135,0.485,136,2.458,137,1.862,138,0.572,139,2.458,142,2.186,143,1.862,144,1.788,147,2.371,156,2.579,157,2.022,160,1.939,291,5.293,331,4.662,332,4.662,333,4.662,334,5.341,335,5.341,336,5.376,337,5.376,338,5.376,339,5.376]],["title/modules/AtftRaycasterModule.html",[131,0.635,281,2.588]],["body/modules/AtftRaycasterModule.html",[0,0.127,3,0.19,4,0.19,5,0.148,29,0.015,50,0.256,53,0.169,55,0.19,64,0.009,65,0.012,66,0.009,131,0.815,133,1.603,134,1.603,135,0.452,136,2.383,137,1.737,138,0.733,139,2.383,142,2.094,143,1.737,144,1.669,147,2.272,156,2.471,157,1.887,160,1.81,281,5.352,340,4.35,341,4.35,342,4.35,343,4.35,344,1.355,345,1.355,346,1.355,347,3.566,348,5.017,349,5.017,350,1.118,351,5.017,352,3.583,353,5.017,354,5.017]],["title/modules/AtftRendererModule.html",[131,0.635,282,2.588]],["body/modules/AtftRendererModule.html",[0,0.137,3,0.205,4,0.205,5,0.159,29,0.015,50,0.249,53,0.182,55,0.205,64,0.01,65,0.012,66,0.01,95,1.542,127,0.994,131,0.876,133,1.725,134,1.725,135,0.487,136,2.462,137,1.869,138,0.757,139,2.462,142,2.191,143,1.869,144,1.795,147,2.377,156,2.585,157,2.029,160,1.947,282,5.265,355,4.679,356,4.679,357,4.679,358,4.679,359,1.426,360,5.397,361,5.397,362,5.397,363,4.679]],["title/modules/AtftStatsModule.html",[131,0.635,283,2.588]],["body/modules/AtftStatsModule.html",[0,0.137,3,0.205,4,0.205,5,0.159,29,0.015,50,0.249,53,0.182,55,0.205,64,0.01,65,0.012,66,0.01,131,0.876,133,1.725,134,1.725,135,0.487,136,2.462,137,1.869,138,0.757,139,2.462,142,2.191,143,1.869,144,1.795,147,2.377,156,2.585,157,2.029,160,1.947,283,5.265,364,4.679,365,4.679,366,4.679,367,4.679,368,1.368,369,4.49,370,5.397,371,4.679,372,0.994,373,0.994,374,5.397]],["title/modules/AtftTextModule.html",[131,0.635,315,2.588]],["body/modules/AtftTextModule.html",[0,0.141,3,0.211,4,0.211,5,0.164,29,0.015,50,0.243,53,0.187,55,0.211,64,0.01,65,0.013,66,0.01,131,0.904,133,1.778,134,1.778,135,0.502,136,2.496,137,1.927,138,0.592,139,2.496,142,2.232,143,1.927,144,1.851,147,2.421,156,2.633,157,2.093,160,2.008,270,4.825,315,5.21,375,4.825,376,4.825,377,4.825,378,1.432,379,5.565,380,5.565,381,1.111]],["title/components/AxesHelperComponent.html",[221,0.691,382,0.083]],["body/components/AxesHelperComponent.html",[0,0.092,3,0.137,4,0.137,5,0.106,8,1.214,10,1.051,11,0.611,12,0.425,15,0.626,20,1.094,28,0.567,29,0.015,30,1.554,34,0.688,37,0.425,50,0.213,51,1.183,53,0.122,55,0.137,56,0.78,57,0.692,64,0.007,65,0.009,66,0.007,79,0.857,93,0.931,94,0.912,95,1.379,97,0.586,98,0.822,99,0.949,107,0.664,117,0.948,127,0.664,135,0.325,138,0.538,153,0.638,158,0.72,165,0.638,166,0.638,169,0.72,170,0.97,176,0.638,177,0.638,180,0.72,182,0.72,188,0.638,189,0.638,190,0.638,191,0.638,192,0.638,193,0.638,203,0.692,204,0.692,205,0.692,206,0.692,212,0.611,215,0.692,221,1.221,222,0.638,225,1.166,228,0.97,233,0.638,234,0.638,235,0.638,238,0.72,240,0.72,241,0.72,246,0.638,247,0.638,248,0.638,251,0.857,253,0.692,254,0.692,259,0.638,260,0.611,261,0.638,262,0.638,263,0.638,264,0.638,265,0.638,266,0.638,269,0.692,271,0.72,272,0.692,273,0.72,274,0.72,275,0.72,276,0.692,314,0.586,344,0.611,345,0.611,346,0.611,350,0.949,359,0.638,368,0.611,372,0.664,373,0.664,378,0.638,381,0.72,382,0.124,383,0.75,384,0.75,385,5.488,386,2.813,387,1.565,388,0.561,389,1.183,390,1.183,391,1.366,392,1.384,393,1.27,394,4.386,395,1.01,396,1.441,397,2.023,398,3.866,399,1.869,400,4.386,401,3.609,402,4.386,403,1.554,404,1.279,405,0.75,406,0.986,407,3.609,408,0.844,409,3.609,410,1.01,411,1.051,412,0.447,413,1.315,414,0.75,415,1.051,416,1.529,417,1.214,418,0.75,419,0.75,420,1.385,421,1.051,422,1.051,423,1.214,424,0.75,425,0.75,426,0.75,427,0.75,428,0.72,429,0.561,430,0.75,431,0.75,432,0.75,433,0.75,434,0.72,435,0.75]],["title/components/BoxMeshComponent.html",[259,0.691,382,0.083]],["body/components/BoxMeshComponent.html",[0,0.072,3,0.107,4,0.107,5,0.083,8,1.082,10,0.88,11,0.478,12,0.333,15,0.524,20,0.915,28,0.316,29,0.015,30,1.949,31,1.267,32,1.217,34,0.798,37,0.333,50,0.204,51,1.539,53,0.095,55,0.107,56,0.915,57,0.812,64,0.005,65,0.008,66,0.005,79,0.717,93,0.779,94,0.714,95,1.267,97,0.459,98,0.733,99,1.212,107,0.52,117,0.742,127,0.52,135,0.255,138,0.451,153,0.499,158,0.564,165,0.499,166,0.499,169,1.267,170,0.812,176,0.499,177,0.499,180,0.564,182,0.564,188,0.499,189,0.499,190,0.499,191,0.499,192,0.499,193,0.499,203,0.541,204,0.541,205,0.541,206,0.541,212,0.478,215,0.541,221,0.499,222,0.499,225,0.564,228,0.812,233,0.499,234,0.499,235,0.499,238,0.564,240,0.564,241,0.564,246,0.499,247,0.499,248,0.499,251,0.717,253,0.541,254,0.541,259,1.121,260,0.478,261,0.499,262,0.499,263,0.499,264,0.499,265,0.499,266,0.499,269,0.974,271,0.564,272,0.541,273,0.564,274,0.564,275,0.564,276,0.541,314,0.459,344,0.478,345,0.478,346,0.478,350,0.825,359,0.499,368,0.478,372,0.52,373,0.52,378,0.499,381,0.564,382,0.108,383,0.587,384,0.587,387,1.372,388,0.439,389,0.99,390,0.99,391,1.187,392,1.361,393,1.25,395,0.845,396,1.307,397,1.803,399,1.666,403,1.3,404,1.07,405,0.88,406,0.771,408,0.66,410,0.845,411,0.88,412,0.35,413,1.172,414,0.587,415,0.88,416,1.438,417,1.055,418,0.587,419,0.587,420,1.256,421,0.88,422,0.88,423,1.055,424,0.587,425,0.587,426,0.587,427,0.587,428,0.564,429,0.439,430,0.587,431,0.587,432,0.587,433,0.587,434,0.564,435,0.587,436,6.001,437,1.394,438,2.952,439,5.705,440,5.078,441,3.824,442,3.959,443,4.699,444,3.959,445,4.233,446,4.2,447,2.201,448,5.502,449,4.946,450,5.502,451,4.233,452,5.502,453,6.286,454,2.636,455,5.502,456,5.502,457,5.502,458,5.502,459,5.502,460,2.201,461,3.023,462,2.823,463,2.016,464,3.023,465,2.448,466,2.823,467,2.823,468,1.56,469,1.394,470,2.823,471,2.016,472,2.823,473,2.201,474,2.201,475,2.823,476,1.898,477,1.641,478,1.641,479,1.746]],["title/components/Css3dVideoMeshComponent.html",[260,0.662,382,0.083]],["body/components/Css3dVideoMeshComponent.html",[0,0.081,3,0.121,4,0.206,5,0.094,8,1.145,10,0.959,11,0.538,12,0.374,13,1.475,15,0.571,20,0.998,28,0.356,29,0.015,31,0.634,32,0.609,34,0.748,37,0.544,38,0.803,43,1.599,50,0.214,51,1.079,53,0.107,55,0.121,56,0.998,57,0.609,64,0.006,65,0.009,66,0.006,79,0.782,93,0.85,94,0.803,95,1.322,97,0.516,98,0.775,99,0.883,107,0.585,116,1.492,117,0.834,127,0.585,135,0.286,138,0.491,153,0.561,158,0.634,165,0.561,166,0.561,169,1.192,170,0.885,176,0.561,177,0.561,180,0.634,182,0.634,188,0.561,189,0.561,190,0.561,191,0.561,192,0.561,193,0.561,203,0.609,204,0.609,205,0.609,206,0.609,212,0.538,215,0.609,221,0.561,222,0.561,225,0.634,228,0.885,233,0.561,234,0.561,235,0.561,238,0.634,240,0.634,241,0.634,246,0.561,247,0.561,248,0.561,251,1.012,253,0.609,254,0.609,259,0.561,260,1.122,261,0.561,262,0.561,263,0.561,264,0.561,265,0.561,266,0.561,269,0.609,271,0.634,272,0.609,273,0.634,274,0.634,275,1.192,276,1.437,314,0.516,344,0.538,345,0.538,346,0.538,350,0.883,359,0.561,368,0.538,372,0.585,373,0.585,378,0.561,381,0.634,382,0.116,383,0.66,384,0.66,387,1.431,388,0.494,389,1.079,390,1.079,391,1.272,392,1.373,393,1.26,395,0.922,396,1.372,399,1.764,403,1.418,405,0.66,406,0.867,408,0.742,410,0.922,411,0.959,412,0.393,413,1.241,414,0.66,415,0.959,416,1.483,417,1.13,418,0.66,419,0.66,420,1.318,421,0.959,422,0.959,423,1.13,424,0.66,425,0.66,426,0.66,427,0.66,428,0.634,429,0.494,430,0.66,431,0.66,432,0.66,433,0.66,434,0.634,435,0.66,437,1.567,454,1.099,468,1.671,480,5.74,481,4.717,482,1.811,483,2.984,484,5.972,485,3.471,486,4.717,487,3.297,488,2.102,489,2.753,490,5.972,491,3.175,492,4.617,493,2.753,494,4.717,495,4.617,496,3.175,497,3.175,498,3.175,499,4.617,500,3.175,501,3.175,502,3.175,503,3.175,504,3.175,505,3.175,506,1.423,507,3.175,508,3.175,509,3.175,510,3.175,511,3.175,512,3.175,513,3.175,514,3.175,515,3.175,516,3.175,517,3.056,518,3.175,519,3.175,520,3.175,521,3.175,522,3.175,523,3.175,524,3.175,525,3.175,526,3.175]],["title/components/CylinderMeshComponent.html",[261,0.691,382,0.083]],["body/components/CylinderMeshComponent.html",[0,0.079,3,0.118,4,0.118,5,0.092,8,1.136,10,0.947,11,0.529,12,0.368,15,0.564,20,0.985,28,0.35,29,0.015,31,1.391,32,1.336,34,0.851,37,0.368,50,0.212,51,1.661,53,0.105,55,0.118,56,0.985,57,0.874,64,0.006,65,0.009,66,0.006,79,0.772,93,0.839,94,0.789,95,1.314,97,0.507,98,0.769,99,0.875,107,0.574,116,2.142,117,0.82,127,0.574,135,0.281,138,0.485,153,0.551,158,0.623,165,0.551,166,0.551,169,1.314,170,0.874,176,0.551,177,0.551,180,0.623,182,0.623,188,0.551,189,0.551,190,0.551,191,0.551,192,0.551,193,0.551,203,0.598,204,0.598,205,0.598,206,0.598,212,0.529,215,0.598,221,0.551,222,0.551,225,0.623,228,0.874,233,0.551,234,0.551,235,0.551,238,0.623,240,0.623,241,0.623,246,0.551,247,0.551,248,0.551,251,0.772,253,0.598,254,0.598,259,0.551,260,0.529,261,1.162,262,0.551,263,0.551,264,0.551,265,0.551,266,0.551,269,0.598,271,1.075,272,0.598,273,0.623,274,0.623,275,0.623,276,0.598,314,0.507,344,0.529,345,0.529,346,0.529,350,0.875,359,0.551,368,0.529,372,0.574,373,0.574,378,0.551,381,0.623,382,0.115,383,0.648,384,0.648,387,1.422,388,0.485,389,1.066,390,1.066,391,1.259,392,1.371,393,1.259,395,0.91,396,1.362,397,1.893,399,1.749,403,1.4,404,1.152,405,0.947,406,0.852,408,0.729,410,0.91,411,0.947,412,0.386,413,1.231,414,0.648,415,0.947,416,1.476,417,1.119,418,0.648,419,0.648,420,1.309,421,0.947,422,0.947,423,1.119,424,0.648,425,0.648,426,0.648,427,0.648,428,0.623,429,0.485,430,0.648,431,0.648,432,0.648,433,0.648,434,0.623,435,0.648,437,1.54,438,3.13,441,3.13,442,4.198,446,4.355,454,1.578,468,1.654,469,1.54,471,2.228,474,2.432,476,2.043,477,1.813,478,1.813,479,1.929,487,2.228,488,2.065,506,2.043,527,6.344,528,5.385,529,4.669,530,5.385,531,5.385,532,5.385,533,5.385,534,3.952,535,3.12,536,2.705,537,2.705,538,3.255,539,2.432,540,3.017,541,4.558,542,2.705,543,3.12,544,2.5,545,3.12,546,3.12,547,3.12,548,3.12,549,2.705,550,3.12,551,3.12,552,3.12]],["title/directives/DashedDrawDirective.html",[212,0.662,412,0.484]],["body/directives/DashedDrawDirective.html",[0,0.108,3,0.162,4,0.162,5,0.126,12,0.502,13,1.811,15,0.701,28,0.635,29,0.015,34,0.8,37,0.668,38,1.609,43,1.962,50,0.229,53,0.144,55,0.162,57,1.355,64,0.008,65,0.011,66,0.008,68,3.349,72,4.214,75,5.289,88,2.607,93,1.043,97,0.692,98,0.553,99,0.692,116,2.002,123,2.214,212,0.96,215,1.087,251,0.96,387,1.467,388,0.663,392,0.722,393,0.881,404,1.432,405,0.885,412,0.527,429,0.663,449,4.962,454,1.475,468,2.084,476,1.91,482,2.223,483,3.493,485,3.943,506,1.91,538,3.043,544,2.338,553,6.125,554,3.694,555,6.366,556,3.321,557,5.666,558,3.293,559,4.261,560,4.261,561,2.214,562,3.321,563,2.82,564,4.261,565,4.261,566,3.694,567,2.103,568,4.261,569,3.694,570,4.261,571,4.261,572,4.261,573,5.666,574,4.261,575,4.261,576,4.261,577,4.261,578,4.261,579,5.666,580,4.261,581,4.261,582,4.261,583,4.261,584,4.261,585,6.366,586,5.666,587,4.261,588,4.261,589,3.321,590,4.261,591,4.261,592,4.261,593,4.261,594,6.366,595,4.261,596,4.261,597,4.261,598,4.261,599,4.261,600,4.261,601,4.261,602,3.694,603,3.694,604,4.261,605,4.261,606,4.261,607,4.261,608,4.261,609,4.261]],["title/pipes/Deg2RadPipe.html",[334,2.588,610,2.588]],["body/pipes/Deg2RadPipe.html",[0,0.142,3,0.213,4,0.213,5,0.165,15,0.694,28,0.629,29,0.015,30,2.358,34,0.661,37,0.661,50,0.189,53,0.189,55,0.213,64,0.01,65,0.013,66,0.01,97,0.911,98,0.939,99,0.911,334,4.464,388,0.873,408,1.311,482,2.2,540,3.713,610,4.464,611,4.372,612,4.863,613,6.744,614,4.863,615,6.744,616,5.609,617,5.847,618,6.655,619,5.847,620,5.847,621,4.863,622,5.609,623,4.863]],["title/components/DirectionalLightComponent.html",[233,0.691,382,0.083]],["body/components/DirectionalLightComponent.html",[0,0.082,3,0.123,4,0.123,5,0.096,8,1.157,10,0.974,11,0.55,12,0.382,14,2.366,15,0.58,20,1.014,28,0.364,29,0.015,31,1.278,32,1.157,33,2.315,34,0.786,37,0.382,43,1.907,50,0.216,51,1.496,53,0.109,55,0.123,56,0.701,57,1.056,64,0.006,65,0.009,66,0.006,79,0.794,93,0.863,94,0.82,95,1.331,97,0.527,98,0.783,99,0.894,107,0.597,117,0.852,127,0.597,135,0.292,138,0.499,153,0.573,158,0.648,165,0.573,166,0.573,169,0.648,170,0.899,176,0.573,177,0.573,180,0.648,182,0.648,188,0.573,189,0.573,190,0.573,191,0.573,192,0.573,193,0.573,203,0.622,204,0.622,205,0.622,206,0.622,212,0.55,215,0.622,221,0.573,222,0.573,225,0.648,228,0.899,233,1.178,234,0.573,235,0.573,238,0.648,240,0.648,241,1.099,246,0.573,247,0.573,248,0.573,251,0.794,253,0.622,254,0.622,259,0.573,260,0.55,261,0.573,262,0.573,263,0.573,264,0.573,265,0.573,266,0.573,269,0.622,271,0.648,272,0.622,273,0.648,274,0.648,275,0.648,276,0.622,314,0.527,344,0.55,345,0.55,346,0.55,350,0.894,359,0.573,368,0.55,372,0.597,373,0.597,378,0.573,381,0.648,382,0.117,383,0.674,384,0.674,387,1.522,388,0.505,389,1.096,390,1.096,391,1.287,392,1.374,393,1.262,395,0.936,396,1.383,397,1.928,399,1.781,403,1.44,404,1.185,405,0.674,406,0.886,408,0.758,410,0.936,411,0.974,412,0.402,413,1.253,414,0.674,415,0.974,416,1.491,417,1.144,418,0.674,419,0.674,420,1.33,421,0.974,422,0.974,423,1.144,424,0.674,425,0.674,426,0.674,427,0.674,428,0.648,429,0.505,430,0.674,431,0.674,432,0.674,433,0.674,434,0.648,435,0.674,454,1.624,468,0.996,517,3.993,567,2.315,624,5.962,625,2.316,626,4.308,627,4.292,628,4.292,629,6.032,630,4.689,631,2.529,632,2.529,633,2.813,634,3.244,635,1.686,636,2.147,637,3.244,638,3.244,639,3.244,640,2.813,641,3.244,642,3.244,643,3.655,644,2.813,645,1.78,646,2.316,647,3.244,648,3.244,649,3.244,650,3.244,651,2.813,652,2.316,653,2.813,654,2.529,655,3.244,656,2.813,657,2.813,658,2.813]],["title/components/EmptyComponent.html",[11,0.662,382,0.083]],["body/components/EmptyComponent.html",[0,0.093,3,0.14,4,0.14,5,0.109,8,1.225,10,1.066,11,1.178,12,0.434,15,0.635,28,0.413,29,0.015,34,0.605,37,0.434,50,0.215,53,0.124,55,0.14,56,0.796,57,0.706,64,0.007,65,0.01,66,0.007,79,0.869,93,0.945,94,0.931,95,1.388,97,0.598,98,0.829,99,0.959,107,0.678,117,0.968,127,0.678,135,0.332,138,0.546,153,0.651,158,0.735,165,0.651,166,0.651,169,0.735,170,0.984,176,0.651,177,0.651,180,0.735,182,0.735,188,0.651,189,0.651,190,0.651,191,0.651,192,0.651,193,0.651,203,0.706,204,0.706,205,0.706,206,0.706,212,0.624,215,0.706,221,0.651,222,0.651,225,0.735,228,0.984,233,0.651,234,0.651,235,0.651,238,0.735,240,0.735,241,0.735,246,0.651,247,0.651,248,0.651,251,0.869,253,0.706,254,0.706,259,0.651,260,0.624,261,0.651,262,0.651,263,0.651,264,0.651,265,0.651,266,0.651,269,0.706,271,0.735,272,0.706,273,0.735,274,0.735,275,0.735,276,0.706,314,0.598,344,0.624,345,0.624,346,0.624,350,0.959,359,0.651,368,0.624,372,0.678,373,0.678,378,0.651,381,0.735,382,0.126,383,0.765,384,0.765,387,1.573,388,0.573,389,1.2,390,1.2,391,1.381,392,1.385,393,1.272,395,1.024,396,1.452,397,2.041,399,1.886,403,1.576,404,1.297,405,0.765,406,1.006,408,0.861,410,1.024,411,1.066,412,0.456,413,1.327,414,0.765,415,1.066,416,1.536,417,1.227,418,0.765,419,0.765,420,1.395,421,1.066,422,1.066,423,1.227,424,0.765,425,0.765,426,0.765,427,0.765,428,0.735,429,0.573,430,0.765,431,0.765,432,0.765,433,0.765,434,0.735,435,0.765,482,2.013,483,3.24,567,2.915,659,3.194,660,5.131,661,3.683,662,3.683]],["title/components/FrameMeshComponent.html",[262,0.691,382,0.083]],["body/components/FrameMeshComponent.html",[0,0.08,3,0.12,4,0.12,5,0.094,8,1.145,10,0.958,11,0.537,12,0.374,15,0.571,20,0.997,28,0.356,29,0.015,31,1.085,32,1.042,34,0.748,37,0.374,50,0.214,51,1.396,53,0.107,55,0.12,56,0.997,57,1.042,64,0.006,65,0.009,66,0.006,79,0.782,93,0.849,94,0.802,95,1.321,97,0.515,98,0.775,99,0.883,107,1.001,117,0.833,127,0.584,135,0.286,138,0.491,153,0.56,158,0.633,165,0.56,166,0.56,169,1.321,170,0.885,176,0.56,177,0.56,180,0.633,182,0.633,188,0.56,189,0.56,190,0.56,191,0.56,192,0.56,193,0.56,203,0.608,204,0.608,205,0.608,206,0.608,212,0.537,215,0.608,221,0.56,222,0.56,225,0.633,228,0.885,233,0.56,234,0.56,235,0.56,238,0.633,240,0.633,241,0.633,246,0.56,247,0.56,248,0.56,251,0.782,253,0.608,254,0.608,259,0.56,260,0.537,261,0.56,262,1.169,263,0.56,264,0.56,265,0.56,266,0.56,269,0.608,271,0.633,272,0.608,273,0.633,274,0.633,275,0.633,276,0.608,314,0.515,344,0.537,345,0.537,346,0.537,350,0.883,359,0.56,368,0.537,372,0.584,373,0.584,378,0.56,381,0.633,382,0.116,383,0.659,384,0.659,387,1.431,388,0.493,389,1.079,390,1.079,391,1.271,392,1.372,393,1.26,395,0.921,396,1.371,397,1.907,399,1.763,403,1.417,404,1.166,405,0.958,406,0.866,408,0.742,410,0.921,411,0.958,412,0.393,413,1.24,414,0.659,415,0.958,416,1.482,417,1.13,418,0.659,419,0.659,420,1.318,421,0.958,422,0.958,423,1.13,424,0.659,425,0.659,426,0.659,427,0.659,428,0.633,429,0.493,430,0.659,431,0.659,432,0.659,433,0.659,434,0.633,435,0.659,437,1.566,438,3.16,447,2.472,463,2.265,468,2.098,469,1.566,476,2.068,477,1.843,478,1.843,479,1.961,488,2.099,506,2.068,539,3.596,544,2.531,663,5.738,664,5.436,665,5.436,666,5.436,667,5.176,668,6.998,669,3.172,670,4.613,671,7.424,672,3.172,673,7.343,674,3.172,675,3.172,676,3.172,677,3.172,678,6.618,679,5.969,680,3.172]],["title/components/GridHelperComponent.html",[222,0.691,382,0.083]],["body/components/GridHelperComponent.html",[0,0.09,3,0.135,4,0.135,5,0.105,8,1.206,10,1.04,11,0.602,12,0.419,15,0.62,20,1.082,28,0.649,29,0.015,30,1.931,34,0.741,37,0.419,50,0.212,51,1.355,53,0.12,55,0.135,56,0.768,57,0.682,64,0.007,65,0.009,66,0.007,79,0.848,93,0.922,94,0.899,95,1.373,97,0.577,98,0.816,99,0.941,107,0.654,117,0.934,127,0.654,135,0.321,138,0.533,153,0.628,158,0.71,165,0.628,166,0.628,169,0.71,170,0.96,176,0.628,177,0.628,180,0.71,182,0.71,188,0.628,189,0.628,190,0.628,191,0.628,192,0.628,193,0.628,203,0.682,204,0.682,205,0.682,206,0.682,212,0.602,215,0.682,221,0.628,222,1.215,225,0.71,228,1.206,233,0.628,234,0.628,235,0.628,238,0.71,240,0.71,241,0.71,246,0.628,247,0.628,248,0.628,251,0.848,253,0.682,254,0.682,259,0.628,260,0.602,261,0.628,262,0.628,263,0.628,264,0.628,265,0.628,266,0.628,269,0.682,271,0.71,272,0.682,273,0.71,274,0.71,275,0.71,276,0.682,314,0.577,344,0.602,345,0.602,346,0.602,350,0.941,359,0.628,368,0.602,372,0.654,373,0.654,378,0.628,381,0.71,382,0.123,383,0.739,384,0.739,386,2.771,387,1.559,388,0.553,389,1.17,390,1.17,391,1.355,392,1.382,393,1.269,394,4.34,395,0.999,396,1.433,397,2.009,398,3.834,399,1.857,400,3.082,402,4.34,403,1.537,404,1.265,405,0.739,406,0.971,408,0.831,410,0.999,411,1.04,412,0.44,413,1.307,414,0.739,415,1.04,416,1.523,417,1.204,418,0.739,419,0.739,420,1.377,421,1.04,422,1.04,423,1.204,424,0.739,425,0.739,426,0.739,427,0.739,428,0.71,429,0.553,430,0.739,431,0.739,432,0.739,433,0.739,434,0.71,435,0.739,681,5.747,682,5.793,683,5.005,684,3.555,685,3.555,686,3.555,687,3.555]],["title/components/GridMeshComponent.html",[263,0.691,382,0.083]],["body/components/GridMeshComponent.html",[0,0.082,3,0.122,4,0.122,5,0.095,8,1.153,10,0.969,11,0.546,12,0.38,15,0.578,20,1.009,28,0.361,29,0.015,31,1.2,32,1.153,34,0.784,37,0.38,50,0.215,51,1.492,53,0.109,55,0.122,56,1.009,57,0.618,64,0.006,65,0.009,66,0.006,79,0.791,88,1.116,93,0.859,94,0.814,95,1.328,97,0.523,98,0.781,99,0.891,107,0.593,117,0.847,123,1.674,127,0.593,135,0.291,138,0.497,153,0.569,158,0.643,165,0.569,166,0.569,169,1.2,170,0.895,176,0.569,177,0.569,180,0.643,182,0.643,188,0.569,189,0.569,190,0.569,191,0.569,192,0.569,193,0.569,203,0.618,204,0.618,205,0.618,206,0.618,212,0.546,215,0.618,221,0.569,222,0.569,225,0.643,228,1.224,233,0.569,234,0.569,235,0.569,238,0.643,240,0.643,241,0.643,246,0.569,247,0.569,248,0.569,251,0.791,253,0.618,254,0.618,259,0.569,260,0.546,261,0.569,262,0.569,263,1.176,264,0.569,265,0.569,266,0.569,269,0.618,271,0.643,272,0.618,273,0.643,274,0.643,275,0.643,276,0.618,314,0.523,344,0.546,345,0.546,346,0.546,350,0.891,359,0.569,368,0.546,372,0.593,373,0.593,378,0.569,381,0.643,382,0.117,383,0.669,384,0.669,387,1.438,388,0.501,389,1.091,390,1.091,391,1.283,392,1.374,393,1.261,395,0.931,396,1.38,397,1.922,398,3.631,399,1.776,403,1.433,404,1.179,405,0.969,406,0.88,410,0.931,411,0.969,412,0.399,413,1.249,414,0.669,415,0.969,416,1.488,417,1.14,418,0.669,419,0.669,420,1.326,421,0.969,422,0.969,423,1.14,424,0.669,425,0.669,426,0.669,427,0.669,428,0.643,429,0.501,430,0.669,431,0.669,432,0.669,433,0.669,434,0.643,435,0.669,437,1.59,438,3.188,460,3.637,461,2.301,463,2.301,464,2.301,468,1.96,469,1.59,488,2.133,506,2.459,539,2.511,544,2.56,688,5.95,689,5.485,690,5.485,691,6.013,692,6.013,693,4.666,694,4.045,695,3.222,696,3.222,697,3.222,698,5.485,699,2.511,700,3.222,701,5.485,702,2.794,703,3.222,704,3.222,705,3.222,706,3.222,707,3.222,708,5.485,709,3.222,710,3.222,711,3.222]],["title/components/HemisphereLightComponent.html",[234,0.691,382,0.083]],["body/components/HemisphereLightComponent.html",[0,0.088,3,0.131,4,0.131,5,0.102,8,1.19,10,1.019,11,0.585,12,0.407,14,1.354,15,0.607,20,1.06,28,0.387,29,0.015,31,1.138,32,1.093,33,2.42,34,0.773,37,0.407,50,0.221,51,1.451,53,0.116,55,0.131,56,0.746,57,0.662,64,0.006,65,0.009,66,0.006,79,0.831,93,0.903,94,0.872,95,1.36,97,0.561,98,0.806,99,0.926,107,0.635,117,0.907,127,0.635,135,0.311,138,0.522,153,0.61,158,0.689,165,0.61,166,0.61,169,0.689,170,0.94,176,0.61,177,0.61,180,0.689,182,0.689,188,0.61,189,0.61,190,0.61,191,0.61,192,0.61,193,0.61,203,0.662,204,0.662,205,0.662,206,0.662,212,0.585,215,0.662,221,0.61,222,0.61,225,0.689,228,0.94,233,0.61,234,1.203,235,0.61,238,0.689,240,1.138,241,0.689,246,0.61,247,0.61,248,0.61,251,0.831,253,0.662,254,0.662,259,0.61,260,0.585,261,0.61,262,0.61,263,0.61,264,0.61,265,0.61,266,0.61,269,0.662,271,0.689,272,0.662,273,0.689,274,0.689,275,0.689,276,0.662,314,0.561,344,0.585,345,0.585,346,0.585,350,0.926,359,0.61,368,0.585,372,0.635,373,0.635,378,0.61,381,0.689,382,0.121,383,0.717,384,0.717,387,1.547,388,0.537,389,1.146,390,1.146,391,1.333,392,1.38,393,1.267,395,0.979,396,1.417,397,1.983,399,1.833,403,1.506,404,1.239,405,0.717,406,0.943,408,0.807,410,0.979,411,1.019,412,0.427,413,1.289,414,0.717,415,1.019,416,1.513,417,1.184,418,0.717,419,0.717,420,1.362,421,1.019,422,1.019,423,1.184,424,0.717,425,0.717,426,0.717,427,0.717,428,0.689,429,0.537,430,0.717,431,0.717,432,0.717,433,0.717,434,0.689,435,0.717,454,1.697,468,1.06,625,2.465,626,4.432,628,4.444,631,2.691,632,2.691,635,1.794,636,2.285,712,5.904,713,5.7,714,5.7,715,4.25,716,4.902,717,3.452,718,3.452,719,3.452,720,3.452,721,3.452]],["title/components/LayerActorComponent.html",[188,0.691,382,0.083]],["body/components/LayerActorComponent.html",[0,0.075,3,0.113,4,0.113,5,0.088,6,3.913,8,1.11,10,0.914,11,1.047,12,0.35,13,1.406,14,2.054,15,0.545,16,2.531,17,3.364,18,3.364,19,3.364,20,0.951,24,2.414,25,3.044,26,2.348,27,2.873,28,0.8,29,0.015,30,2.251,31,0.594,32,0.57,34,0.888,37,0.728,38,1.463,41,2.068,46,3.478,50,0.176,51,1.353,52,4.511,53,0.1,55,0.113,57,1.004,59,4.541,64,0.006,65,0.008,66,0.006,79,0.745,88,1.813,97,0.483,98,0.869,99,0.483,107,0.547,127,0.547,135,0.268,138,0.468,153,0.525,158,0.594,165,0.525,166,0.525,169,0.594,170,0.844,176,0.525,177,0.525,180,0.594,182,0.594,188,1.143,189,0.525,190,0.525,191,0.525,192,0.525,193,0.525,203,0.57,204,0.57,205,0.57,206,0.57,212,0.504,215,0.57,221,0.525,222,0.525,225,0.594,228,0.844,233,0.525,234,0.525,235,0.525,238,0.594,240,0.594,241,0.594,246,0.525,247,0.525,248,0.525,251,0.745,253,0.57,254,0.57,259,0.525,260,0.504,261,0.525,262,0.525,263,0.525,264,0.525,265,0.525,266,0.525,269,0.57,271,0.594,272,0.57,273,0.594,274,0.594,275,0.594,276,0.57,314,0.483,344,0.504,345,0.504,346,0.504,350,0.851,359,0.525,368,0.504,372,0.547,373,0.547,378,0.525,381,0.594,382,0.112,383,0.618,384,0.618,387,1.132,388,0.463,389,1.029,390,1.029,391,1.224,392,1.366,393,1.254,395,0.878,396,0.951,397,1.673,405,0.618,408,0.695,410,0.878,411,0.914,412,0.368,413,1.203,414,0.618,415,0.914,416,1.458,417,1.088,418,0.618,419,1.088,420,1.283,421,0.914,422,0.914,423,1.088,424,0.618,425,0.618,426,0.618,427,0.618,428,1.046,429,0.463,430,0.618,431,0.618,432,0.618,433,0.618,434,0.594,435,0.618,441,3.044,443,4.779,506,1.333,561,1.545,567,1.468,722,6.529,723,1.728,724,5.237,725,5.237,726,2.721,727,2.973,728,2.973,729,4.4,730,2.973,731,2.973,732,2.973,733,2.973,734,2.973,735,2.973,736,1.839,737,1.839,738,2.973,739,5.018,740,2.973,741,2.973,742,2.973,743,2.973,744,2.973,745,2.973,746,1.839,747,2.973,748,5.237,749,2.973,750,2.123,751,2.973]],["title/components/LineConnectorComponent.html",[165,0.691,382,0.083]],["body/components/LineConnectorComponent.html",[0,0.082,3,0.122,4,0.122,5,0.095,8,1.152,10,0.969,11,0.545,12,0.379,13,1.49,14,1.829,15,0.577,16,1.977,20,1.008,28,0.614,29,0.015,31,0.642,32,0.894,34,0.784,37,0.55,38,1.178,50,0.224,51,1.09,53,0.108,55,0.122,56,1.185,57,0.894,64,0.006,65,0.009,66,0.006,79,0.79,81,2.298,88,2.303,93,0.858,94,0.813,95,1.328,97,0.523,98,0.78,99,0.89,107,0.592,117,0.846,127,0.858,130,2.298,135,0.29,138,0.496,153,0.569,158,0.642,165,1.175,166,0.569,169,0.642,170,1.315,176,0.569,177,0.569,180,0.642,182,0.642,188,0.569,189,0.569,190,0.569,191,0.569,192,0.569,193,0.569,203,0.617,204,0.617,205,0.617,206,0.617,212,0.545,215,0.617,221,0.569,222,0.569,225,0.642,228,0.894,233,0.569,234,0.569,235,0.569,238,0.642,240,0.642,241,0.642,246,0.569,247,0.569,248,0.569,251,0.79,253,0.617,254,0.617,259,0.569,260,0.545,261,0.569,262,0.569,263,0.569,264,0.569,265,0.569,266,0.569,269,0.617,271,0.642,272,0.617,273,0.642,274,0.642,275,0.642,276,0.617,314,0.523,344,0.545,345,0.545,346,0.545,350,0.89,359,0.569,368,0.545,372,0.592,373,0.592,378,0.569,381,0.642,382,0.117,383,0.669,384,0.669,387,1.438,388,0.501,389,1.09,390,1.09,391,1.282,392,1.374,393,1.261,395,0.931,396,1.008,399,1.775,403,1.432,404,1.178,405,0.669,406,0.879,408,0.752,410,0.931,411,0.969,412,0.398,413,1.249,414,0.669,415,0.969,416,1.488,417,1.139,418,0.669,419,0.669,420,1.325,421,0.969,422,0.969,423,1.139,424,0.669,425,0.669,426,0.669,427,0.669,428,0.642,429,0.501,430,0.669,431,0.669,432,0.669,433,0.669,434,0.642,435,0.669,454,1.614,468,0.988,469,2.706,476,2.09,635,1.672,636,2.13,645,1.766,699,3.634,746,1.99,752,5.948,753,2.509,754,4.753,755,4.273,756,5.211,757,5.211,758,3.914,759,4.042,760,4.042,761,3.218,762,2.79,763,6.01,764,3.218,765,3.218,766,2.79,767,4.753,768,4.042,769,3.218,770,2.79,771,3.218,772,2.79,773,3.218,774,3.218,775,2.79,776,3.218,777,2.79,778,3.218,779,4.042,780,2.509,781,3.218,782,4.042,783,3.218,784,3.218]],["title/components/MapControlsComponent.html",[176,0.691,382,0.083]],["body/components/MapControlsComponent.html",[0,0.069,3,0.103,4,0.103,5,0.08,8,1.061,10,0.854,11,0.46,12,0.32,15,0.509,20,0.889,28,0.556,29,0.015,30,1.263,31,1.416,32,1.36,34,0.866,37,0.485,38,1.039,50,0.211,51,1.681,53,0.091,55,0.103,56,0.587,57,0.521,64,0.005,65,0.008,66,0.005,68,3.206,72,2.721,79,0.697,89,2.117,93,0.757,94,0.686,95,1.248,97,0.668,98,0.772,99,0.668,102,2.117,107,0.5,116,2.939,117,0.714,127,0.5,130,2.936,135,0.245,153,0.48,158,0.542,165,0.48,166,0.48,169,0.542,170,0.788,176,0.977,177,0.48,180,0.821,182,0.99,188,0.48,189,0.48,190,0.48,191,0.48,192,0.48,193,0.48,203,0.521,204,0.521,205,0.521,206,0.521,212,0.46,215,0.521,221,0.48,222,0.48,225,0.542,228,0.788,233,0.48,234,0.48,235,0.48,238,0.542,240,0.542,241,0.542,246,0.48,247,0.48,248,0.48,251,0.46,253,0.521,254,0.521,259,0.48,260,0.46,261,0.48,262,0.48,263,0.48,264,0.48,265,0.48,266,0.48,269,0.521,271,0.542,272,0.521,273,0.542,274,0.542,275,0.542,276,0.521,314,0.441,344,0.46,345,0.46,346,0.46,347,3.143,350,0.806,359,0.48,368,0.46,372,0.5,373,0.757,378,0.48,381,0.542,382,0.106,383,0.564,384,0.564,388,0.422,392,1.357,393,1.246,395,0.821,396,1.352,406,0.742,408,0.635,410,0.821,411,0.854,412,0.336,413,1.149,414,0.564,415,0.854,416,1.423,417,1.031,418,0.564,419,0.564,420,1.235,421,0.854,422,0.854,423,1.031,424,0.564,425,0.564,426,0.564,427,0.564,428,0.542,429,0.422,430,0.564,431,0.564,432,0.564,433,0.564,434,0.542,435,0.564,446,2.721,454,0.94,482,1.613,506,1.843,540,2.721,558,1.578,562,2.117,645,1.49,652,3.951,667,3.565,785,2.117,786,6.426,787,2.117,788,4.301,789,4.301,790,4.301,791,3.205,792,4.301,793,3.565,794,4.797,795,4.961,796,4.961,797,4.961,798,4.961,799,4.961,800,4.961,801,4.961,802,4.961,803,4.301,804,4.961,805,4.301,806,4.111,807,2.716,808,2.936,809,2.716,810,2.716,811,2.716,812,4.111,813,2.716,814,2.355,815,2.716,816,4.797,817,2.355,818,2.716,819,2.716,820,3.565,821,4.797,822,2.716,823,2.117,824,2.716,825,4.111,826,2.117,827,2.355,828,2.355,829,3.565,830,2.355,831,2.355,832,3.565,833,3.565,834,2.355,835,3.565,836,3.565,837,2.716,838,2.716,839,2.355,840,2.355,841,2.355,842,2.716,843,2.716,844,2.716,845,4.111,846,2.716,847,2.716,848,2.716,849,4.111,850,2.716,851,2.716,852,2.716,853,2.716,854,2.716,855,2.716,856,2.716,857,2.716,858,2.716,859,2.716,860,2.716,861,2.716,862,2.716,863,4.111,864,2.716,865,2.716,866,2.716,867,2.716,868,1.939,869,2.936]],["title/components/MeshLineConnectorComponent.html",[166,0.691,382,0.083]],["body/components/MeshLineConnectorComponent.html",[0,0.067,3,0.101,4,0.101,5,0.078,8,1.048,10,0.839,11,0.449,12,0.313,13,1.291,14,1.918,15,0.5,20,0.873,28,0.613,29,0.015,31,1.326,32,1.273,34,0.87,37,0.576,38,1.236,43,2.146,50,0.224,51,1.59,53,0.089,55,0.101,56,0.873,57,1.048,64,0.005,65,0.008,66,0.005,68,3.18,75,4.261,78,4.24,79,0.684,88,2.476,93,0.744,94,0.671,95,1.237,97,0.431,98,0.71,99,0.794,107,0.488,116,1.898,117,0.697,127,0.488,130,1.894,135,0.239,138,0.43,153,0.469,158,0.53,165,0.469,166,1.095,169,1.174,170,1.481,176,0.469,177,0.469,180,0.53,182,0.53,188,0.469,189,0.469,190,0.469,191,0.469,192,0.469,193,0.469,203,0.509,204,0.509,205,0.509,206,0.509,212,0.449,215,0.509,221,0.469,222,0.469,225,0.53,228,0.774,233,0.469,234,0.469,235,0.469,238,0.53,240,0.53,241,0.53,246,0.469,247,0.469,248,0.469,251,0.684,253,0.509,254,0.509,259,0.469,260,0.449,261,0.469,262,0.469,263,0.469,264,0.469,265,0.469,266,0.469,269,0.509,271,0.53,272,0.509,273,0.53,274,0.53,275,0.53,276,0.509,314,0.431,344,0.449,345,0.449,346,0.449,350,0.794,359,0.469,368,0.449,372,0.488,373,0.488,378,0.469,381,0.53,382,0.104,383,0.551,384,0.551,387,1.339,388,0.413,389,0.944,390,0.944,391,1.143,392,1.355,393,1.244,395,0.806,396,1.057,399,1.614,403,1.24,404,1.021,405,0.551,406,0.725,408,0.62,410,0.806,411,0.839,412,0.328,413,1.136,414,0.551,415,0.839,416,1.413,417,1.016,418,0.551,419,0.551,420,1.222,421,0.839,422,0.839,423,1.016,424,0.551,425,0.551,426,0.551,427,0.551,428,0.53,429,0.413,430,0.551,431,0.551,432,0.551,433,0.551,434,0.53,435,0.551,468,1.24,469,2.414,544,2.216,562,2.068,602,2.3,603,2.3,635,1.379,636,1.756,645,1.455,646,1.894,652,2.884,699,3.148,753,2.068,754,4.24,755,3.812,756,4.739,757,4.739,758,3.492,759,2.3,760,3.502,762,2.3,767,3.502,768,3.502,770,3.502,779,5.1,782,2.3,808,3.903,870,6.449,871,4.89,872,4.89,873,5.882,874,4.2,875,5.882,876,5.882,877,4.038,878,2.653,879,4.038,880,2.653,881,2.653,882,2.653,883,2.653,884,2.653,885,2.653,886,2.653,887,2.653,888,2.653,889,5.466,890,2.653,891,5.882,892,2.068,893,2.653,894,2.653,895,2.653,896,4.038,897,4.038,898,4.038,899,4.038,900,4.038,901,3.502,902,4.038,903,4.038,904,4.038,905,4.038,906,4.038,907,2.653,908,2.653,909,2.653,910,2.653,911,2.653,912,2.653,913,2.653,914,2.653,915,2.653,916,2.653,917,2.653,918,2.653]],["title/components/ObjLoaderComponent.html",[246,0.691,382,0.083]],["body/components/ObjLoaderComponent.html",[0,0.07,3,0.105,4,0.105,5,0.186,8,1.07,10,0.865,11,0.468,12,0.326,13,1.331,15,0.516,16,0.997,20,0.9,28,0.671,29,0.015,31,0.832,32,0.799,34,0.793,37,0.491,38,0.698,41,3.16,50,0.22,51,1.305,53,0.093,55,0.105,56,0.9,57,1.207,64,0.005,65,0.008,66,0.005,71,1.829,79,0.706,88,2.179,93,0.767,94,0.698,95,1.257,97,0.676,98,0.777,99,0.906,107,0.509,117,0.726,127,0.509,135,0.249,138,0.443,153,0.488,158,0.552,165,0.488,166,0.488,169,0.552,170,0.799,176,0.488,177,0.488,180,0.552,182,0.552,188,0.488,189,0.488,190,0.488,191,0.488,192,0.488,193,0.488,203,0.53,204,0.53,205,0.53,206,0.53,212,0.468,215,0.53,221,0.488,222,0.488,225,0.552,228,0.799,233,0.488,234,0.488,235,0.488,238,0.552,240,0.552,241,0.552,246,1.112,247,0.488,248,0.488,251,0.706,253,1.344,254,0.53,259,0.488,260,0.468,261,0.488,262,0.488,263,0.488,264,0.488,265,0.488,266,0.488,269,0.53,271,0.552,272,0.53,273,0.552,274,0.552,275,0.552,276,0.53,306,3.318,314,0.449,344,0.468,345,0.468,346,0.468,350,0.814,359,0.488,368,0.468,372,0.509,373,0.509,378,0.488,381,0.552,382,0.128,383,0.574,384,0.574,387,1.361,388,0.43,389,0.974,390,0.974,391,1.172,392,1.359,393,1.248,395,0.832,396,1.294,399,1.648,403,1.279,404,1.053,405,0.574,406,0.755,408,0.974,410,0.832,411,0.865,412,0.342,413,1.16,414,0.574,415,0.865,416,1.43,417,1.042,418,0.574,419,0.574,420,1.244,421,0.865,422,0.865,423,1.042,424,0.574,425,0.574,426,0.574,427,0.574,428,0.552,429,0.43,430,0.574,431,0.574,432,0.574,433,0.574,434,0.552,435,0.574,454,0.957,468,0.849,476,2.502,645,1.516,726,2.576,746,1.709,919,5.966,920,1.973,921,4.165,922,4.165,923,5.013,924,4.165,925,2.396,926,3.908,927,4.495,928,6.532,929,3.58,930,3.985,931,4.839,932,4.839,933,4.165,934,2.763,935,5.988,936,5.988,937,5.988,938,5.192,939,5.988,940,6.079,941,4.165,942,2.763,943,4.347,944,2.763,945,2.763,946,2.763,947,4.165,948,3.908,949,2.763,950,2.763,951,2.763,952,2.763,953,2.763,954,1.973,955,2.763,956,2.763,957,5.013,958,2.396,959,2.763,960,3.247,961,4.35,962,2.396,963,2.763,964,4.165,965,2.763,966,2.396,967,2.154,968,2.154,969,2.396,970,2.396,971,2.763,972,2.763,973,2.763,974,2.763,975,2.763,976,2.763,977,2.763,978,2.763,979,2.763,980,2.763,981,2.154,982,2.396]],["title/components/ObjectLoaderComponent.html",[247,0.691,382,0.083]],["body/components/ObjectLoaderComponent.html",[0,0.087,3,0.131,4,0.131,5,0.102,8,1.189,10,1.018,11,0.584,12,0.406,13,1.565,15,0.606,26,1.545,28,0.386,29,0.015,31,0.688,32,0.661,34,0.672,37,0.406,50,0.221,53,0.116,55,0.131,56,1.059,57,1.092,64,0.006,65,0.009,66,0.006,79,0.83,88,1.973,93,0.902,94,0.871,95,1.359,97,0.56,98,0.805,99,0.925,107,0.635,117,0.906,127,0.635,135,0.311,138,0.521,153,0.609,158,0.688,165,0.609,166,0.609,169,0.688,170,0.939,176,0.609,177,0.609,180,0.688,182,0.688,188,0.609,189,0.609,190,0.609,191,0.609,192,0.609,193,0.609,203,0.661,204,0.661,205,0.661,206,0.661,212,0.584,215,0.661,221,0.609,222,0.609,225,0.688,228,0.939,233,0.609,234,0.609,235,0.609,238,0.688,240,0.688,241,0.688,246,0.609,247,1.203,248,0.609,251,1.051,253,0.661,254,0.661,259,0.609,260,0.584,261,0.609,262,0.609,263,0.609,264,0.609,265,0.609,266,0.609,269,0.661,271,0.688,272,0.661,273,0.688,274,0.688,275,0.688,276,0.661,306,2.282,314,0.56,344,0.584,345,0.584,346,0.584,350,0.925,359,0.609,368,0.584,372,0.635,373,0.635,378,0.609,381,0.688,382,0.121,383,0.716,384,0.716,387,1.471,388,0.536,389,1.145,390,1.145,391,1.332,392,1.38,393,1.267,395,0.978,396,1.416,399,1.832,403,1.504,404,1.238,405,0.716,406,0.942,408,0.806,410,0.978,411,1.018,412,0.427,413,1.289,414,0.716,415,1.018,416,1.513,417,1.184,418,0.716,419,0.716,420,1.361,421,1.018,422,1.018,423,1.184,424,0.716,425,0.716,426,0.716,427,0.716,428,0.688,429,0.536,430,0.716,431,0.716,432,0.716,433,0.716,434,0.688,435,0.716,920,2.462,926,4.441,927,4.861,929,4.068,930,4.429,938,2.989,940,2.989,948,4.441,960,2.687,961,3.818,981,2.687,982,2.989,983,5.378,984,4.898,985,3.447,986,4.898,987,2.989,988,3.447,989,3.447,990,3.447,991,2.989,992,3.447,993,3.447,994,3.447]],["title/components/OrbitControlsComponent.html",[177,0.691,382,0.083]],["body/components/OrbitControlsComponent.html",[0,0.085,3,0.127,4,0.127,5,0.099,8,1.174,10,0.997,11,0.568,12,0.395,15,0.594,20,1.037,28,0.538,29,0.015,31,0.958,32,0.92,34,0.764,37,0.566,38,1.213,50,0.218,51,1.311,53,0.113,55,0.127,56,0.724,57,0.642,64,0.006,65,0.009,66,0.006,79,0.813,93,0.884,94,0.847,95,1.346,97,0.779,98,0.841,99,0.779,107,0.617,117,0.88,127,0.617,135,0.302,153,0.592,158,0.669,165,0.592,166,0.592,169,0.669,170,0.92,176,0.592,177,1.082,180,1.222,182,0.669,188,0.592,189,0.592,190,0.592,191,0.592,192,0.592,193,0.592,203,0.642,204,0.642,205,0.642,206,0.642,212,0.568,215,0.642,221,0.592,222,0.592,225,0.669,228,0.92,233,0.592,234,0.592,235,0.592,238,0.669,240,0.669,241,0.669,246,0.592,247,0.592,248,0.592,251,0.568,253,0.642,254,0.642,259,0.592,260,0.568,261,0.592,262,0.592,263,0.592,264,0.592,265,0.592,266,0.592,269,0.642,271,0.669,272,0.642,273,0.669,274,0.669,275,0.669,276,0.642,314,0.544,344,0.568,345,0.568,346,0.568,347,3.338,350,0.911,359,0.592,368,0.568,372,0.617,373,0.617,378,0.592,381,0.669,382,0.119,383,0.696,384,0.696,388,0.521,392,1.377,393,1.265,395,0.958,396,1.401,406,0.915,408,0.783,410,0.958,411,0.997,412,0.415,413,1.272,414,0.696,415,0.997,416,1.502,417,1.165,418,0.696,419,0.696,420,1.346,421,0.997,422,0.997,423,1.165,424,0.696,425,0.696,426,0.696,427,0.696,428,0.669,429,0.521,430,0.696,431,0.696,432,0.696,433,0.696,434,0.669,435,0.696,446,3.177,454,1.16,482,1.883,558,1.947,785,2.612,787,2.612,788,4.862,789,4.862,790,4.862,791,3.741,792,4.862,793,4.161,794,5.309,803,4.862,805,4.862,814,2.905,816,4.161,817,4.161,820,4.161,821,5.309,823,2.612,826,3.741,827,2.905,828,2.905,829,4.161,830,2.905,831,2.905,832,4.161,833,4.161,834,2.905,835,4.161,836,4.161,839,2.905,840,2.905,841,2.905,868,2.393,869,3.427,995,5.846,996,3.35,997,3.35]],["title/components/PerspectiveCameraComponent.html",[153,0.691,382,0.083]],["body/components/PerspectiveCameraComponent.html",[0,0.086,3,0.128,4,0.128,5,0.1,8,1.179,10,1.004,11,0.573,12,0.399,15,0.598,16,2.033,20,1.044,28,0.729,29,0.015,30,2.226,34,0.797,37,0.57,38,1.425,50,0.207,51,1.438,53,0.114,55,0.128,56,0.731,57,0.649,64,0.006,65,0.009,66,0.006,79,0.819,93,0.89,94,0.855,95,1.35,97,0.785,98,0.844,99,0.785,107,0.623,115,2.636,117,0.889,127,0.623,135,0.305,138,0.514,153,1.195,158,1.125,165,0.598,166,0.598,169,0.675,170,0.927,176,0.598,177,0.598,180,0.675,182,0.675,188,0.598,189,0.598,190,0.598,191,0.598,192,0.598,193,0.598,203,0.649,204,0.649,205,0.649,206,0.649,212,0.573,215,0.649,221,0.598,222,0.598,225,0.675,228,0.927,233,0.598,234,0.598,235,0.598,238,0.675,240,0.675,241,0.675,246,0.598,247,0.598,248,0.598,251,0.573,253,0.649,254,0.649,259,0.598,260,0.573,261,0.598,262,0.598,263,0.598,264,0.598,265,0.598,266,0.598,269,0.649,271,0.675,272,0.649,273,0.675,274,0.675,275,0.675,276,0.649,306,3.198,314,0.549,344,0.573,345,0.573,346,0.573,350,0.915,359,0.598,368,0.573,372,0.623,373,0.623,378,0.598,381,0.675,382,0.12,383,0.703,384,0.703,388,0.526,389,1.13,390,1.13,391,1.318,392,1.378,393,1.265,395,0.965,396,1.329,404,1.221,406,0.924,410,0.965,411,1.004,412,0.419,413,1.278,414,0.703,415,1.004,416,1.506,417,1.171,418,0.703,419,0.703,420,1.351,421,1.004,422,1.004,423,1.171,424,0.703,425,0.703,426,0.703,427,0.703,428,0.675,429,0.526,430,0.703,431,0.703,432,0.703,433,0.703,434,0.675,435,0.703,998,6.037,999,2.933,1000,4.645,1001,3.486,1002,6.149,1003,4.831,1004,5.637,1005,5.637,1006,5.637,1007,4.831,1008,3.382,1009,3.382,1010,3.382,1011,4.831,1012,3.382,1013,4.887,1014,3.382,1015,3.382,1016,3.382,1017,2.636,1018,3.382,1019,3.382,1020,3.382,1021,3.382,1022,3.382,1023,3.382,1024,3.382]],["title/components/PlaneMeshComponent.html",[264,0.691,382,0.083]],["body/components/PlaneMeshComponent.html",[0,0.077,3,0.115,4,0.115,5,0.089,8,1.121,10,0.928,11,0.514,12,0.358,15,0.553,20,0.965,28,0.34,29,0.015,30,1.795,31,1.167,32,1.121,34,0.768,37,0.358,50,0.21,51,1.456,53,0.102,55,0.115,56,0.965,57,0.856,64,0.006,65,0.008,66,0.006,79,0.757,93,0.822,94,0.767,95,1.301,97,0.493,98,0.759,99,1.181,107,0.558,117,0.797,127,0.558,135,0.274,138,0.475,153,0.536,158,0.606,165,0.536,166,0.536,169,1.301,170,0.856,176,0.536,177,0.536,180,0.606,182,0.606,188,0.536,189,0.536,190,0.536,191,0.536,192,0.536,193,0.536,203,0.582,204,0.582,205,0.582,206,0.582,212,0.514,215,0.582,221,0.536,222,0.536,225,0.606,228,0.856,233,0.536,234,0.536,235,0.536,238,0.606,240,0.606,241,0.606,246,0.536,247,0.536,248,0.536,251,0.757,253,0.582,254,0.582,259,0.536,260,0.514,261,0.536,262,0.536,263,0.536,264,1.151,265,0.536,266,0.536,269,0.582,271,0.606,272,1.016,273,0.606,274,0.606,275,0.606,276,0.582,314,0.493,344,0.514,345,0.514,346,0.514,350,0.861,359,0.536,368,0.514,372,0.558,373,0.558,378,0.536,381,0.606,382,0.113,383,0.63,384,0.63,387,1.408,388,0.472,389,1.044,390,1.044,391,1.239,392,1.368,393,1.256,395,0.891,396,1.346,397,1.867,399,1.726,403,1.371,404,1.129,405,0.928,406,0.829,408,0.709,410,0.891,411,0.928,412,0.376,413,1.214,414,0.63,415,0.928,416,1.466,417,1.101,418,0.63,419,0.63,420,1.294,421,0.928,422,0.928,423,1.101,424,0.63,425,0.63,426,0.63,427,0.63,428,0.606,429,0.472,430,0.63,431,0.63,432,0.63,433,0.63,434,0.606,435,0.63,437,1.497,438,3.079,441,3.914,442,4.13,443,4.81,444,4.13,446,3.868,447,2.365,448,5.067,449,4.555,450,5.067,452,5.067,453,5.992,454,2.548,455,5.067,456,5.067,457,5.067,458,5.067,459,5.067,460,2.365,461,3.189,463,2.166,464,3.189,465,3.871,468,1.627,469,1.497,471,2.166,473,2.365,474,2.365,476,2.002,477,1.763,478,1.763,479,1.876,544,2.45,1025,5.84,1026,3.033,1027,3.033]],["title/components/PointLightComponent.html",[235,0.691,382,0.083]],["body/components/PointLightComponent.html",[0,0.084,3,0.125,4,0.125,5,0.097,8,1.167,10,0.987,11,0.56,12,0.389,14,2.183,15,0.588,20,1.027,28,0.37,29,0.015,31,1.215,32,1.167,33,2.345,34,0.791,37,0.389,43,1.144,50,0.217,51,1.507,53,0.111,55,0.125,56,0.714,57,0.634,64,0.006,65,0.009,66,0.006,79,0.805,93,0.875,94,0.835,95,1.34,97,0.537,98,0.79,99,0.904,107,0.608,116,2.233,117,0.868,127,0.608,135,0.298,138,0.506,153,0.584,158,0.66,165,0.584,166,0.584,169,0.66,170,0.911,176,0.584,177,0.584,180,0.66,182,0.66,188,0.584,189,0.584,190,0.584,191,0.584,192,0.584,193,0.584,203,0.634,204,0.634,205,0.634,206,0.634,212,0.56,215,0.634,221,0.584,222,0.584,225,0.66,228,0.911,233,0.584,234,0.584,235,1.186,238,1.111,240,0.66,241,0.66,246,0.584,247,0.584,248,0.584,251,0.805,253,0.634,254,0.634,259,0.584,260,0.56,261,0.584,262,0.584,263,0.584,264,0.584,265,0.584,266,0.584,269,0.634,271,0.66,272,0.634,273,0.66,274,0.66,275,0.66,276,0.634,314,0.537,344,0.56,345,0.56,346,0.56,350,0.904,359,0.584,368,0.56,372,0.608,373,0.608,378,0.584,381,0.66,382,0.118,383,0.686,384,0.686,387,1.53,388,0.514,389,1.111,390,1.111,391,1.301,392,1.376,393,1.263,395,0.949,396,1.393,397,1.944,399,1.797,403,1.459,404,1.201,405,0.686,406,0.903,408,0.773,410,0.949,411,0.987,412,0.409,413,1.264,414,0.686,415,0.987,416,1.497,417,1.156,418,0.686,419,0.686,420,1.339,421,0.987,422,0.987,423,1.156,424,0.686,425,0.686,426,0.686,427,0.686,428,0.66,429,0.514,430,0.686,431,0.686,432,0.686,433,0.686,434,0.66,435,0.686,454,1.926,468,1.015,625,2.359,626,4.344,627,4.337,628,4.337,631,2.575,632,2.575,633,4.12,635,1.717,640,2.865,643,3.704,644,2.865,645,1.813,646,2.359,651,2.865,653,2.865,654,4.337,656,4.12,657,2.865,658,2.865,715,2.865,808,2.359,1028,5.996,1029,4.824,1030,3.304,1031,2.575,1032,3.304,1033,3.304,1034,3.304,1035,3.304,1036,3.304]],["title/pipes/Rad2DegPipe.html",[335,2.588,610,2.588]],["body/pipes/Rad2DegPipe.html",[0,0.142,3,0.212,4,0.212,5,0.165,15,0.692,28,0.626,29,0.015,30,2.355,34,0.659,37,0.659,50,0.188,53,0.188,55,0.212,64,0.01,65,0.013,66,0.01,71,3.698,97,0.907,98,0.937,99,0.907,335,4.453,388,0.869,408,1.306,482,2.192,540,3.698,610,4.453,611,4.355,614,4.844,617,5.834,618,5.834,619,6.83,620,5.834,621,4.844,623,4.844,1037,4.844,1038,6.728,1039,6.728,1040,5.587]],["title/directives/RaycasterCameraDirective.html",[344,0.662,412,0.484]],["body/directives/RaycasterCameraDirective.html",[0,0.138,3,0.206,4,0.206,5,0.16,12,0.641,15,0.819,28,0.61,29,0.015,34,0.78,37,0.641,38,1.673,50,0.24,53,0.183,55,0.206,64,0.01,65,0.012,66,0.01,88,2.292,93,1.219,97,0.883,98,0.706,99,0.883,344,1.122,347,3.682,350,1.075,352,3.883,388,0.846,392,0.921,393,1.03,412,0.673,429,0.846,482,2.597,483,3.915,485,4.315,556,4.239,558,3.847,563,3.599,1000,5.302,1001,4.413,1041,4.723,1042,4.715,1043,5.438,1044,5.438,1045,4.239,1046,5.438]],["title/directives/RaycasterEnableDirective.html",[345,0.662,412,0.484]],["body/directives/RaycasterEnableDirective.html",[0,0.141,3,0.211,4,0.211,5,0.164,12,0.655,15,0.83,28,0.623,29,0.015,34,0.79,37,0.655,38,1.695,50,0.226,53,0.187,55,0.211,64,0.01,65,0.013,66,0.01,88,1.923,93,1.234,97,0.902,98,0.721,99,0.902,345,1.136,347,3.655,350,1.089,352,3.966,388,0.864,392,0.941,393,1.043,412,0.688,429,0.864,482,2.63,483,3.951,485,4.346,563,3.676,1041,4.767,1047,4.816,1048,4.788,1049,5.554,1050,5.554,1051,5.554,1052,5.554]],["title/directives/RaycasterGroupDirective.html",[346,0.662,412,0.484]],["body/directives/RaycasterGroupDirective.html",[0,0.098,3,0.147,4,0.147,5,0.114,12,0.456,15,0.657,24,2.912,28,0.731,29,0.015,34,0.9,37,0.852,38,1.888,46,3.757,50,0.22,52,5.084,53,0.13,55,0.147,57,1.162,64,0.007,65,0.01,66,0.007,71,2.56,76,2.248,79,1.105,81,3.79,88,2.737,93,0.977,97,0.628,98,0.502,99,0.628,251,0.655,253,1.162,346,0.899,347,3.398,350,1.213,352,2.762,387,1.41,388,0.602,392,0.655,393,1.014,405,0.804,412,0.479,429,0.602,468,1.63,482,2.082,483,3.324,485,3.79,556,3.015,558,3.085,561,2.01,563,2.56,566,4.602,1041,5.093,1053,3.354,1054,5.308,1055,4.317,1056,4.602,1057,4.602,1058,5.308,1059,5.308,1060,5.308,1061,5.308,1062,5.308,1063,4.327,1064,4.657,1065,5.655,1066,6.521,1067,6.521,1068,6.521,1069,6.521,1070,4.724,1071,5.254,1072,5.254,1073,5.308,1074,3.868,1075,3.868,1076,3.868,1077,3.868,1078,3.868,1079,3.868,1080,3.868,1081,3.868,1082,3.868,1083,3.015,1084,6.06,1085,3.868,1086,6.06,1087,3.868,1088,5.254,1089,3.354,1090,3.868,1091,3.868,1092,3.868,1093,3.868,1094,3.868,1095,3.868,1096,3.868,1097,3.868,1098,3.868,1099,3.868,1100,3.868,1101,3.868]],["title/injectables/RaycasterService.html",[67,2.032,347,1.837]],["body/injectables/RaycasterService.html",[0,0.07,3,0.105,4,0.105,5,0.081,12,0.325,13,1.33,15,0.515,16,2.736,27,2.749,28,0.732,29,0.016,31,1.114,32,1.07,34,0.911,37,0.869,38,1.824,43,1.441,50,0.202,53,0.093,55,0.105,57,0.961,64,0.005,65,0.008,66,0.005,67,2.163,69,1.827,76,3.242,88,2.781,89,3.905,93,0.922,97,1.061,98,0.848,99,1.061,102,2.152,106,4.837,116,2.957,120,4.837,123,2.604,251,0.468,347,1.956,350,1.022,387,1.206,404,1.052,405,0.574,408,1.572,454,1.441,461,4.493,464,3.578,468,1.713,482,1.083,506,1.866,561,1.435,567,2.955,726,2.574,808,1.971,1000,4.493,1001,4.157,1017,3.244,1029,3.609,1045,2.152,1048,3.984,1055,3.692,1063,2.972,1064,3.984,1065,3.609,1070,3.244,1083,2.152,1088,4.344,1089,2.394,1102,2.394,1103,5.578,1104,5.01,1105,4.162,1106,4.837,1107,4.162,1108,4.162,1109,4.162,1110,4.162,1111,5.578,1112,5.578,1113,3.609,1114,5.578,1115,5.01,1116,4.162,1117,4.162,1118,2.761,1119,2.761,1120,2.761,1121,4.162,1122,2.761,1123,4.162,1124,4.348,1125,2.761,1126,4.162,1127,2.394,1128,2.761,1129,4.162,1130,2.761,1131,4.162,1132,2.761,1133,4.162,1134,5.01,1135,2.761,1136,2.761,1137,2.761,1138,3.609,1139,2.761,1140,2.761,1141,2.761,1142,2.761,1143,2.761,1144,4.162,1145,2.761,1146,4.162,1147,2.761,1148,2.761,1149,2.761,1150,2.761,1151,5.01,1152,2.761,1153,5.01,1154,2.761,1155,2.761,1156,2.761,1157,2.761,1158,2.761,1159,2.761,1160,2.761,1161,2.761,1162,2.761,1163,2.761,1164,2.761,1165,5.01,1166,2.761,1167,2.761,1168,2.761,1169,2.761,1170,4.162,1171,5.01,1172,4.162,1173,4.162,1174,5.985,1175,4.162,1176,2.761,1177,2.394,1178,2.761,1179,2.761,1180,4.162,1181,2.761,1182,2.761,1183,2.761,1184,3.609,1185,2.761,1186,2.761,1187,2.761,1188,2.394,1189,2.761,1190,2.761,1191,2.761,1192,2.761,1193,2.394,1194,4.162,1195,5.01,1196,2.761,1197,5.578,1198,4.162,1199,2.761,1200,2.761,1201,2.761]],["title/components/RendererCanvasComponent.html",[359,0.691,382,0.083]],["body/components/RendererCanvasComponent.html",[0,0.075,3,0.113,4,0.113,5,0.088,8,1.11,11,0.504,12,0.35,13,1.406,15,0.545,16,1.587,20,0.951,26,1.972,28,0.493,29,0.015,31,0.878,32,0.844,34,0.81,37,0.519,38,0.752,43,2.24,50,0.148,51,1.224,53,0.1,55,0.113,64,0.006,65,0.008,66,0.006,76,3.364,77,4.511,79,0.745,88,2.139,93,0.81,94,0.752,95,1.291,97,0.483,98,0.751,99,0.483,107,0.547,127,1.314,135,0.268,142,1.463,153,0.525,158,0.594,165,0.525,166,0.525,169,0.594,170,0.844,176,0.525,177,0.525,180,1.046,182,0.594,188,0.525,189,0.525,190,0.525,191,0.525,192,0.525,193,0.525,203,0.57,204,0.57,205,0.57,206,0.57,212,0.504,215,0.57,221,0.525,222,0.525,225,0.594,228,0.844,233,0.525,234,0.525,235,0.525,238,0.594,240,0.594,241,0.594,246,0.525,247,0.525,248,0.525,251,0.504,253,0.57,254,0.57,259,0.525,260,0.504,261,0.525,262,0.525,263,0.525,264,0.525,265,0.525,266,0.525,269,0.57,271,0.594,272,0.57,273,0.594,274,0.594,275,0.594,276,0.57,305,2.578,314,0.483,344,0.504,345,0.504,346,0.504,350,0.851,359,1.022,363,2.578,368,0.504,372,0.547,373,0.547,378,0.525,381,0.594,382,0.112,383,0.618,384,0.618,388,0.463,392,1.366,393,1.254,395,0.594,408,1.029,410,0.878,411,1.203,412,0.368,413,1.203,414,0.618,415,0.914,416,1.458,417,1.088,418,0.618,419,0.618,420,1.283,421,0.914,422,0.914,423,1.088,424,0.618,425,0.618,426,0.618,427,0.618,428,0.594,429,0.463,430,0.618,431,0.618,432,0.618,433,0.618,434,0.594,435,0.618,454,1.523,482,1.726,483,2.873,485,3.364,517,3.831,558,1.728,726,2.721,766,3.815,777,3.815,780,3.43,785,2.318,791,3.43,868,2.123,869,4.133,1057,3.815,1202,6.085,1203,2.578,1204,5.356,1205,5.237,1206,4.4,1207,4.4,1208,5.237,1209,4.541,1210,4.541,1211,4.4,1212,4.4,1213,5.237,1214,4.4,1215,2.973,1216,2.973,1217,2.973,1218,2.973,1219,2.973,1220,6.692,1221,2.973,1222,4.4,1223,4.4,1224,2.973,1225,2.973,1226,2.973,1227,5.787,1228,2.912,1229,4.4,1230,4.4,1231,4.4,1232,5.787,1233,4.4,1234,3.815,1235,4.4,1236,4.4,1237,4.4,1238,4.4,1239,4.4,1240,3.815,1241,3.815,1242,2.973,1243,2.973,1244,2.973,1245,2.973,1246,2.973,1247,2.973,1248,2.973,1249,2.973,1250,2.973,1251,2.578,1252,2.578,1253,2.973,1254,2.578,1255,2.973,1256,2.973,1257,2.973,1258,2.973,1259,2.973,1260,2.973,1261,2.973,1262,2.973,1263,2.973,1264,2.973,1265,2.973,1266,4.4,1267,2.973,1268,2.973,1269,2.578]],["title/injectables/RendererService.html",[67,2.032,95,0.781]],["body/injectables/RendererService.html",[0,0.077,3,0.115,4,0.115,5,0.09,12,0.358,13,1.428,15,0.553,16,2.726,26,2.621,28,0.841,29,0.015,30,1.628,31,0.606,32,0.582,34,0.902,37,0.815,38,1.703,41,2.492,43,2.257,50,0.22,53,0.102,55,0.115,57,0.857,64,0.006,65,0.008,66,0.006,67,2.322,69,2.01,88,2.768,93,0.823,95,0.892,97,1.094,98,0.875,99,1.094,116,2.748,123,3.039,314,1.058,369,3.788,398,4.124,404,1.129,408,0.71,441,3.622,443,2.169,454,1.051,468,1.628,482,1.191,493,2.633,506,1.361,645,2.909,646,2.169,1000,4.654,1001,4.03,1013,4.597,1017,4.133,1045,2.367,1063,3.191,1064,4.175,1113,3.874,1124,5.593,1138,3.874,1184,3.874,1188,2.633,1204,5.08,1209,5.994,1210,5.994,1228,4.124,1251,4.597,1252,4.597,1254,6.382,1269,2.633,1270,2.633,1271,5.842,1272,5.302,1273,4.597,1274,4.468,1275,4.468,1276,4.468,1277,4.468,1278,4.468,1279,2.633,1280,4.468,1281,4.468,1282,3.037,1283,4.468,1284,3.037,1285,3.037,1286,3.037,1287,4.468,1288,3.037,1289,3.037,1290,4.468,1291,3.037,1292,4.468,1293,3.037,1294,3.037,1295,3.037,1296,3.037,1297,3.037,1298,3.037,1299,3.037,1300,5.302,1301,3.037,1302,3.037,1303,3.037,1304,4.468,1305,4.468,1306,4.468,1307,3.037,1308,3.037,1309,3.037,1310,3.037,1311,3.037,1312,2.633,1313,2.633,1314,3.037,1315,3.037,1316,3.037,1317,3.037,1318,3.037,1319,5.847,1320,3.037,1321,3.037,1322,3.037,1323,3.037,1324,3.037,1325,3.037,1326,3.037,1327,3.037,1328,3.037,1329,3.037,1330,3.037,1331,3.037,1332,3.037,1333,3.037,1334,3.037,1335,4.468,1336,4.468,1337,3.037,1338,3.037,1339,3.037,1340,4.468,1341,3.037,1342,3.037,1343,3.037,1344,3.037]],["title/components/SVGLoaderComponent.html",[248,0.691,382,0.083]],["body/components/SVGLoaderComponent.html",[0,0.076,3,0.113,4,0.113,5,0.088,8,1.111,10,0.916,11,0.505,12,0.351,13,1.408,15,0.545,20,0.953,28,0.726,29,0.015,30,2.225,31,1.234,32,1.284,34,0.854,37,0.519,38,0.753,43,2.006,50,0.237,51,1.566,53,0.1,55,0.113,56,0.953,57,1.111,64,0.006,65,0.008,66,0.006,79,0.747,88,2.241,93,0.811,94,0.753,95,1.292,97,0.716,98,0.803,99,0.941,107,0.549,117,0.783,123,1.548,127,0.549,135,0.269,138,0.469,153,0.526,158,0.595,165,0.526,166,0.526,169,0.595,170,0.845,176,0.526,177,0.526,180,0.595,182,0.595,188,0.526,189,0.526,190,0.526,191,0.526,192,0.526,193,0.526,196,2.323,197,1.972,203,0.571,204,0.571,205,0.571,206,0.571,212,0.505,215,0.571,221,0.526,222,0.526,225,0.595,228,0.845,233,0.526,234,0.526,235,0.526,238,0.595,240,0.595,241,0.595,246,0.526,247,0.526,248,1.144,251,0.747,253,0.571,254,1.005,259,0.526,260,0.505,261,0.526,262,0.526,263,0.526,264,0.526,265,0.526,266,0.526,269,0.571,271,0.595,272,0.571,273,0.595,274,0.595,275,0.595,276,0.571,306,2.917,314,0.484,344,0.505,345,0.505,346,0.505,350,0.852,359,0.526,368,0.505,372,0.549,373,0.549,378,0.526,381,0.595,382,0.112,383,0.619,384,0.619,387,1.399,388,0.464,389,1.03,390,1.03,391,1.226,392,1.367,393,1.255,395,0.88,396,1.337,399,1.711,403,1.353,404,1.114,405,0.619,406,0.814,408,1.03,410,0.88,411,0.916,412,0.369,413,1.204,414,0.619,415,0.916,416,1.459,417,1.089,418,0.619,419,0.619,420,1.285,421,0.916,422,0.916,423,1.089,424,0.619,425,0.619,426,0.619,427,0.619,428,0.595,429,0.464,430,0.619,431,0.619,432,0.619,433,0.619,434,0.595,435,0.619,468,1.353,476,2.35,569,2.584,635,1.548,726,2.725,746,1.843,874,3.744,920,2.128,926,4.087,927,4.622,929,3.744,930,4.137,948,2.323,960,2.323,961,2.323,981,2.323,987,2.584,1031,2.323,1055,1.972,1345,6.357,1346,5.243,1347,4.546,1348,5.243,1349,5.243,1350,6.183,1351,4.406,1352,2.98,1353,2.98,1354,3.435,1355,2.98,1356,2.98,1357,2.98,1358,2.98,1359,2.98,1360,2.98,1361,5.243,1362,2.98,1363,2.98,1364,2.98,1365,2.128,1366,2.128,1367,2.584,1368,2.323,1369,2.98,1370,2.584,1371,4.406,1372,2.98,1373,2.584,1374,2.98,1375,2.98]],["title/components/SceneComponent.html",[314,0.635,382,0.083]],["body/components/SceneComponent.html",[0,0.084,3,0.126,4,0.126,5,0.098,8,1.168,10,0.99,11,0.562,12,0.391,14,1.301,15,0.59,20,1.03,28,0.372,29,0.015,31,1.288,32,1.238,33,2.351,34,0.816,37,0.391,43,1.148,50,0.226,51,1.571,53,0.112,55,0.126,56,0.717,57,1.069,64,0.006,65,0.009,66,0.006,68,1.637,72,2.194,79,0.807,93,0.877,94,0.838,95,1.341,97,0.538,98,0.791,99,0.905,107,0.61,116,2.238,117,0.871,127,0.61,135,0.299,138,0.507,153,0.586,158,0.662,165,0.586,166,0.586,169,0.662,170,0.913,176,0.586,177,0.586,180,0.662,182,0.662,188,0.586,189,0.586,190,0.586,191,0.586,192,0.586,193,0.586,203,0.636,204,0.636,205,0.636,206,0.636,212,0.562,215,0.636,221,0.586,222,0.586,225,0.662,228,0.913,233,0.586,234,0.586,235,0.586,238,0.662,240,0.662,241,0.662,246,0.586,247,0.586,248,0.586,251,0.807,253,0.636,254,0.636,259,0.586,260,0.562,261,0.586,262,0.586,263,0.586,264,0.586,265,0.586,266,0.586,269,0.636,271,0.662,272,0.636,273,0.662,274,0.662,275,0.662,276,0.636,314,1.091,344,0.562,345,0.562,346,0.562,350,0.905,359,0.586,368,0.562,372,0.61,373,0.61,378,0.586,381,0.662,382,0.119,383,0.689,384,0.689,387,1.531,388,0.516,389,1.114,390,1.114,391,1.303,392,1.376,393,1.264,395,0.951,396,1.395,397,1.947,399,1.8,403,1.463,404,1.204,405,0.689,406,0.906,408,0.775,410,0.951,411,0.99,412,0.59,413,1.266,414,0.689,415,0.99,416,1.499,417,1.158,418,0.689,419,0.689,420,1.341,421,0.99,422,0.99,423,1.158,424,0.689,425,0.689,426,0.689,427,0.689,428,0.662,429,0.516,430,0.689,431,0.689,432,0.689,433,0.689,434,0.662,435,0.689,468,1.018,635,1.723,636,2.194,645,1.819,654,3.713,739,4.13,750,3.401,1228,4.033,1376,2.875,1377,5.574,1378,5.574,1379,5.574,1380,5.574,1381,5.574,1382,4.763,1383,3.315,1384,3.315,1385,3.315,1386,3.315,1387,3.315,1388,5.574,1389,3.315,1390,3.315,1391,3.315,1392,3.315,1393,3.315,1394,3.315,1395,3.315,1396,3.315]],["title/components/ServerBarrelActorComponent.html",[189,0.691,382,0.083]],["body/components/ServerBarrelActorComponent.html",[0,0.085,1,4.156,3,0.128,4,0.128,5,0.099,6,1.751,8,1.334,10,1.001,11,0.817,12,0.397,13,1.54,14,1.891,15,0.597,16,2.437,17,3.27,18,3.27,19,3.27,20,1.042,21,2.801,22,2.98,23,2.98,24,2.644,25,2.801,26,2.16,27,2.644,28,0.757,29,0.015,30,1.035,31,0.962,32,0.924,33,1.664,34,0.876,37,0.724,38,1.422,41,2.265,43,1.167,46,2.924,50,0.19,53,0.114,55,0.128,56,0.729,64,0.006,65,0.009,66,0.006,79,0.817,98,0.73,107,0.62,127,0.62,135,0.304,138,0.513,153,0.595,158,0.673,165,0.595,166,0.595,169,0.673,170,0.924,176,0.595,177,0.595,180,0.673,182,0.673,188,0.595,189,1.194,190,0.595,191,0.595,192,0.595,193,0.595,203,1.177,204,0.646,205,0.646,206,0.646,212,0.571,215,0.646,221,0.595,222,0.595,225,0.673,228,0.924,233,0.595,234,0.595,235,0.595,238,0.673,240,0.673,241,0.673,246,0.595,247,0.595,248,0.595,251,0.817,253,0.646,254,0.646,259,0.595,260,0.571,261,0.595,262,0.595,263,0.595,264,0.595,265,0.595,266,0.595,269,0.646,271,0.673,272,0.646,273,0.673,274,0.673,275,0.673,276,0.646,314,0.547,344,0.571,345,0.571,346,0.571,350,0.914,359,0.595,368,0.571,372,0.62,373,0.62,378,0.595,381,0.673,382,0.12,383,0.7,384,0.7,387,1.216,388,0.524,389,1.127,390,1.127,391,1.315,392,1.378,393,1.265,395,0.962,396,1.042,397,1.798,405,0.7,410,0.962,411,1.001,412,0.417,413,1.276,414,0.7,415,1.001,416,1.505,417,1.169,418,0.7,419,0.7,420,1.35,421,1.001,422,1.001,423,1.169,424,0.7,425,0.7,426,0.7,427,0.7,428,1.226,429,0.524,430,0.7,431,0.7,432,0.7,433,0.7,434,0.673,435,0.7,561,1.751,567,1.664,723,1.959,736,4.598,737,2.084,1397,2.231,1398,2.231,1399,2.231,1400,2.231,1401,2.231,1402,2.231,1403,2.231,1404,2.231,1405,2.231,1406,2.231,1407,2.231]],["title/components/ServerCompactActorComponent.html",[190,0.691,382,0.083]],["body/components/ServerCompactActorComponent.html",[0,0.085,1,4.156,3,0.128,4,0.128,5,0.099,6,1.751,8,1.334,10,1.001,11,0.817,12,0.397,13,1.54,14,1.891,15,0.597,16,2.437,17,3.27,18,3.27,19,3.27,20,1.042,21,2.801,22,2.98,23,2.98,24,2.644,25,2.801,26,2.16,27,2.644,28,0.757,29,0.015,30,1.035,31,0.962,32,0.924,33,1.664,34,0.876,37,0.724,38,1.422,41,2.265,43,1.167,46,2.924,50,0.19,53,0.114,55,0.128,56,0.729,64,0.006,65,0.009,66,0.006,79,0.817,98,0.73,107,0.62,127,0.62,135,0.304,138,0.513,153,0.595,158,0.673,165,0.595,166,0.595,169,0.673,170,0.924,176,0.595,177,0.595,180,0.673,182,0.673,188,0.595,189,0.595,190,1.194,191,0.595,192,0.595,193,0.595,203,0.646,204,0.646,205,1.177,206,0.646,212,0.571,215,0.646,221,0.595,222,0.595,225,0.673,228,0.924,233,0.595,234,0.595,235,0.595,238,0.673,240,0.673,241,0.673,246,0.595,247,0.595,248,0.595,251,0.817,253,0.646,254,0.646,259,0.595,260,0.571,261,0.595,262,0.595,263,0.595,264,0.595,265,0.595,266,0.595,269,0.646,271,0.673,272,0.646,273,0.673,274,0.673,275,0.673,276,0.646,314,0.547,344,0.571,345,0.571,346,0.571,350,0.914,359,0.595,368,0.571,372,0.62,373,0.62,378,0.595,381,0.673,382,0.12,383,0.7,384,0.7,387,1.216,388,0.524,389,1.127,390,1.127,391,1.315,392,1.378,393,1.265,395,0.962,396,1.042,397,1.798,405,0.7,410,0.962,411,1.001,412,0.417,413,1.276,414,0.7,415,1.001,416,1.505,417,1.169,418,0.7,419,0.7,420,1.35,421,1.001,422,1.001,423,1.169,424,0.7,425,0.7,426,0.7,427,0.7,428,1.226,429,0.524,430,0.7,431,0.7,432,0.7,433,0.7,434,0.673,435,0.7,561,1.751,567,1.664,723,1.959,736,4.598,737,2.084,1397,2.231,1398,2.231,1399,2.231,1400,2.231,1401,2.231,1402,2.231,1403,2.231,1404,2.231,1405,2.231,1406,2.231,1407,2.231]],["title/components/ServerIconActorComponent.html",[191,0.691,382,0.083]],["body/components/ServerIconActorComponent.html",[0,0.085,1,4.156,3,0.128,4,0.128,5,0.099,6,1.751,8,1.334,10,1.001,11,0.817,12,0.397,13,1.54,14,1.891,15,0.597,16,2.437,17,3.27,18,3.27,19,3.27,20,1.042,21,2.801,22,2.98,23,2.98,24,2.644,25,2.801,26,2.16,27,2.644,28,0.757,29,0.015,30,1.035,31,0.962,32,0.924,33,1.664,34,0.876,37,0.724,38,1.422,41,2.265,43,1.167,46,2.924,50,0.19,53,0.114,55,0.128,56,0.729,64,0.006,65,0.009,66,0.006,79,0.817,98,0.73,107,0.62,127,0.62,135,0.304,138,0.513,153,0.595,158,0.673,165,0.595,166,0.595,169,0.673,170,0.924,176,0.595,177,0.595,180,0.673,182,0.673,188,0.595,189,0.595,190,0.595,191,1.194,192,0.595,193,0.595,203,0.646,204,0.646,205,0.646,206,1.177,212,0.571,215,0.646,221,0.595,222,0.595,225,0.673,228,0.924,233,0.595,234,0.595,235,0.595,238,0.673,240,0.673,241,0.673,246,0.595,247,0.595,248,0.595,251,0.817,253,0.646,254,0.646,259,0.595,260,0.571,261,0.595,262,0.595,263,0.595,264,0.595,265,0.595,266,0.595,269,0.646,271,0.673,272,0.646,273,0.673,274,0.673,275,0.673,276,0.646,314,0.547,344,0.571,345,0.571,346,0.571,350,0.914,359,0.595,368,0.571,372,0.62,373,0.62,378,0.595,381,0.673,382,0.12,383,0.7,384,0.7,387,1.216,388,0.524,389,1.127,390,1.127,391,1.315,392,1.378,393,1.265,395,0.962,396,1.042,397,1.798,405,0.7,410,0.962,411,1.001,412,0.417,413,1.276,414,0.7,415,1.001,416,1.505,417,1.169,418,0.7,419,0.7,420,1.35,421,1.001,422,1.001,423,1.169,424,0.7,425,0.7,426,0.7,427,0.7,428,1.226,429,0.524,430,0.7,431,0.7,432,0.7,433,0.7,434,0.673,435,0.7,561,1.751,567,1.664,723,1.959,736,4.598,737,2.084,1397,2.231,1398,2.231,1399,2.231,1400,2.231,1401,2.231,1402,2.231,1403,2.231,1404,2.231,1405,2.231,1406,2.231,1407,2.231]],["title/components/ServerStandActorComponent.html",[192,0.691,382,0.083]],["body/components/ServerStandActorComponent.html",[0,0.085,1,4.156,3,0.128,4,0.128,5,0.099,6,1.751,8,1.334,10,1.001,11,0.817,12,0.397,13,1.54,14,1.891,15,0.597,16,2.437,17,3.27,18,3.27,19,3.27,20,1.042,21,2.801,22,2.98,23,2.98,24,2.644,25,2.801,26,2.16,27,2.644,28,0.757,29,0.015,30,1.035,31,0.962,32,0.924,33,1.664,34,0.876,37,0.724,38,1.422,41,2.265,43,1.167,46,2.924,50,0.19,53,0.114,55,0.128,56,0.729,64,0.006,65,0.009,66,0.006,79,0.817,98,0.73,107,0.62,127,0.62,135,0.304,138,0.513,153,0.595,158,0.673,165,0.595,166,0.595,169,0.673,170,0.924,176,0.595,177,0.595,180,0.673,182,0.673,188,0.595,189,0.595,190,0.595,191,0.595,192,1.194,193,0.595,203,0.646,204,1.177,205,0.646,206,0.646,212,0.571,215,0.646,221,0.595,222,0.595,225,0.673,228,0.924,233,0.595,234,0.595,235,0.595,238,0.673,240,0.673,241,0.673,246,0.595,247,0.595,248,0.595,251,0.817,253,0.646,254,0.646,259,0.595,260,0.571,261,0.595,262,0.595,263,0.595,264,0.595,265,0.595,266,0.595,269,0.646,271,0.673,272,0.646,273,0.673,274,0.673,275,0.673,276,0.646,314,0.547,344,0.571,345,0.571,346,0.571,350,0.914,359,0.595,368,0.571,372,0.62,373,0.62,378,0.595,381,0.673,382,0.12,383,0.7,384,0.7,387,1.216,388,0.524,389,1.127,390,1.127,391,1.315,392,1.378,393,1.265,395,0.962,396,1.042,397,1.798,405,0.7,410,0.962,411,1.001,412,0.417,413,1.276,414,0.7,415,1.001,416,1.505,417,1.169,418,0.7,419,0.7,420,1.35,421,1.001,422,1.001,423,1.169,424,0.7,425,0.7,426,0.7,427,0.7,428,1.226,429,0.524,430,0.7,431,0.7,432,0.7,433,0.7,434,0.673,435,0.7,561,1.751,567,1.664,723,1.959,736,4.598,737,2.084,1397,2.231,1398,2.231,1399,2.231,1400,2.231,1401,2.231,1402,2.231,1403,2.231,1404,2.231,1405,2.231,1406,2.231,1407,2.231]],["title/components/SphereMeshComponent.html",[265,0.691,382,0.083]],["body/components/SphereMeshComponent.html",[0,0.087,3,0.13,4,0.13,5,0.101,8,1.185,10,1.012,11,0.579,12,0.403,15,0.603,20,1.052,28,0.693,29,0.015,30,2.085,34,0.77,37,0.403,50,0.22,51,1.445,53,0.115,55,0.13,56,1.052,57,0.934,64,0.006,65,0.009,66,0.006,79,0.825,93,0.896,94,0.864,95,1.355,97,0.555,98,0.802,99,0.921,107,0.629,117,0.898,127,0.629,135,0.308,138,0.518,153,0.604,158,0.683,165,0.604,166,0.604,169,1.355,170,0.934,176,0.604,177,0.604,180,0.683,182,0.683,188,0.604,189,0.604,190,0.604,191,0.604,192,0.604,193,0.604,203,0.656,204,0.656,205,0.656,206,0.656,212,0.579,215,0.656,221,0.604,222,0.604,225,0.683,228,0.934,233,0.604,234,0.604,235,0.604,238,0.683,240,0.683,241,0.683,246,0.604,247,0.604,248,0.604,251,0.825,253,0.656,254,0.656,259,0.604,260,0.579,261,0.604,262,0.604,263,0.604,264,0.604,265,1.199,266,0.604,269,0.656,271,0.683,272,0.656,273,1.132,274,0.683,275,0.683,276,0.656,314,0.555,344,0.579,345,0.579,346,0.579,350,0.921,359,0.604,368,0.579,372,0.629,373,0.629,378,0.604,381,0.683,382,0.121,383,0.71,384,0.71,387,1.467,388,0.532,389,1.138,390,1.138,391,1.326,392,1.379,393,1.266,395,0.972,396,1.412,397,1.975,399,1.825,403,1.495,404,1.231,405,1.012,406,0.934,408,0.799,410,0.972,411,1.012,412,0.423,413,1.284,414,0.71,415,1.012,416,1.51,417,1.178,418,0.71,419,0.71,420,1.357,421,1.012,422,1.012,423,1.178,424,0.71,425,0.71,426,0.71,427,0.71,428,0.683,429,0.532,430,0.71,431,0.71,432,0.71,433,0.71,434,0.683,435,0.71,437,1.688,438,3.296,444,4.42,468,1.742,469,1.688,473,2.665,476,2.183,477,1.987,478,1.987,479,2.114,488,2.263,537,2.964,544,2.671,1408,5.886,1409,5.67,1410,4.917,1411,4.869,1412,3.419,1413,3.419,1414,3.419,1415,3.419]],["title/directives/StatsAutoShowDirective.html",[368,0.662,412,0.484]],["body/directives/StatsAutoShowDirective.html",[0,0.139,3,0.209,4,0.209,5,0.162,12,0.648,15,0.825,28,0.617,29,0.015,34,0.786,37,0.648,38,1.685,50,0.225,53,0.185,55,0.209,64,0.01,65,0.012,66,0.01,88,1.905,93,1.227,97,0.893,98,0.714,99,0.893,368,1.129,369,4.51,371,4.77,372,1.227,373,1.406,388,0.856,392,0.932,393,1.037,412,0.681,429,0.856,434,1.331,482,2.615,483,3.934,485,4.332,563,3.641,1279,4.77,1416,6.218,1417,4.77,1418,5.501,1419,5.501,1420,5.501]],["title/injectables/StatsService.html",[67,2.032,369,2.272]],["body/injectables/StatsService.html",[0,0.121,3,0.181,4,0.181,5,0.141,12,0.563,13,1.95,15,0.755,16,2.866,28,0.535,29,0.015,34,0.898,37,0.863,38,1.894,50,0.206,53,0.161,55,0.181,64,0.009,65,0.011,66,0.009,67,3.171,69,3.16,76,2.775,88,2.329,93,1.238,369,3.547,372,1.402,482,1.873,494,6.146,970,6.146,1063,4.358,1064,5.062,1177,5.291,1421,4.139,1422,7.088,1423,7.088,1424,6.102,1425,4.774,1426,4.774,1427,4.774,1428,4.774,1429,4.774,1430,4.774,1431,4.774,1432,4.774,1433,4.774,1434,4.774,1435,4.774,1436,7.492,1437,4.774,1438,6.102,1439,4.774,1440,4.774,1441,4.774,1442,4.774]],["title/components/TextMeshComponent.html",[378,0.691,382,0.083]],["body/components/TextMeshComponent.html",[0,0.061,3,0.091,4,0.091,5,0.071,8,0.995,10,0.778,11,0.407,12,0.283,13,1.197,14,0.943,15,0.464,16,1.659,20,0.809,28,0.697,29,0.015,30,1.728,31,1.459,32,1.401,34,0.905,37,0.612,38,0.946,41,2.643,43,2.227,50,0.21,51,1.722,53,0.081,55,0.091,56,0.809,57,0.995,64,0.004,65,0.007,66,0.004,79,0.634,88,2.063,93,0.689,94,0.608,95,1.189,97,0.747,98,0.773,99,0.913,107,0.443,116,1.76,117,0.632,123,1.946,127,0.443,135,0.217,138,0.399,153,0.425,158,0.48,165,0.425,166,0.425,169,1.036,170,0.718,176,0.425,177,0.425,180,0.48,182,0.48,188,0.425,189,0.425,190,0.425,191,0.425,192,0.425,193,0.425,197,1.592,203,0.461,204,0.461,205,0.461,206,0.461,212,0.407,215,0.461,221,0.425,222,0.425,225,0.48,228,0.718,233,0.425,234,0.425,235,0.425,238,0.48,240,0.48,241,0.48,246,0.425,247,0.425,248,0.425,251,0.779,253,0.461,254,0.461,259,0.425,260,0.407,261,0.425,262,0.425,263,0.425,264,0.425,265,0.425,266,0.425,269,0.461,271,0.48,272,0.461,273,0.48,274,0.48,275,0.48,276,0.461,314,0.391,344,0.407,345,0.407,346,0.407,350,0.747,359,0.425,368,0.407,372,0.443,373,0.443,378,1.052,381,1.395,382,0.098,383,0.5,384,0.5,387,1.288,388,0.374,389,0.876,390,0.876,391,1.075,392,1.344,393,1.234,395,0.748,396,1.216,398,3.435,399,1.533,403,1.15,404,0.946,405,0.778,406,0.657,408,1.214,410,0.748,411,0.778,412,0.298,413,1.078,414,0.5,415,0.778,416,1.373,417,0.955,418,0.5,419,0.5,420,1.169,421,0.778,422,0.778,423,0.955,424,0.5,425,0.5,426,0.5,427,0.5,428,0.48,429,0.374,430,0.5,431,0.5,432,0.5,433,0.5,434,0.48,435,0.5,437,1.187,441,3.017,454,1.297,468,1.594,469,1.187,471,1.717,476,2.521,477,1.398,478,1.398,487,1.717,506,1.679,542,2.085,589,2.919,627,3.584,643,1.874,652,3.706,702,2.085,726,2.316,746,2.316,750,2.674,758,4.593,874,3.284,901,2.085,927,1.717,929,3.284,930,3.706,962,2.085,1031,1.874,1347,3.987,1354,2.919,1365,1.717,1366,1.717,1367,2.085,1373,3.247,1443,6.684,1444,4.598,1445,4.598,1446,4.598,1447,5.19,1448,5.19,1449,5.19,1450,5.19,1451,5.19,1452,5.19,1453,5.19,1454,4.598,1455,4.598,1456,3.744,1457,2.405,1458,2.405,1459,2.405,1460,2.405,1461,2.405,1462,2.405,1463,2.405,1464,2.405,1465,3.744,1466,2.405,1467,3.744,1468,2.405,1469,3.744,1470,2.405,1471,2.405,1472,3.744,1473,2.405,1474,2.405,1475,3.744,1476,3.744,1477,2.405,1478,2.405,1479,2.405,1480,2.405,1481,2.405,1482,2.405,1483,2.405,1484,2.405,1485,2.405,1486,2.405,1487,3.744,1488,2.405,1489,3.744,1490,2.405,1491,2.405,1492,2.405,1493,2.405,1494,2.405,1495,4.598,1496,2.405,1497,2.405,1498,2.405,1499,2.405,1500,2.405,1501,3.744,1502,2.405,1503,2.405,1504,2.405,1505,2.405,1506,2.405,1507,2.405]],["title/components/TorusMeshComponent.html",[266,0.691,382,0.083]],["body/components/TorusMeshComponent.html",[0,0.08,3,0.12,4,0.12,5,0.093,8,1.141,10,0.954,11,0.534,12,0.371,15,0.568,20,0.992,28,0.607,29,0.015,30,1.828,31,1.188,32,1.141,34,0.803,37,0.371,50,0.213,51,1.544,53,0.106,55,0.12,56,0.992,57,0.88,64,0.006,65,0.009,66,0.006,79,0.778,93,0.845,94,0.796,95,1.318,97,0.512,98,0.773,99,0.88,107,0.58,117,0.828,127,0.58,135,0.284,138,0.489,153,0.557,158,0.629,165,0.557,166,0.557,169,1.318,170,0.88,176,0.557,177,0.557,180,0.629,182,0.629,188,0.557,189,0.557,190,0.557,191,0.557,192,0.557,193,0.557,197,3.939,203,0.604,204,0.604,205,0.604,206,0.604,212,0.534,215,0.604,221,0.557,222,0.557,225,0.629,228,0.88,233,0.557,234,0.557,235,0.557,238,0.629,240,0.629,241,0.629,246,0.557,247,0.557,248,0.557,251,0.778,253,0.604,254,0.604,259,0.557,260,0.534,261,0.557,262,0.557,263,0.557,264,0.557,265,0.557,266,1.166,269,0.604,271,0.629,272,0.604,273,0.629,274,1.361,275,0.629,276,0.604,314,0.512,344,0.534,345,0.534,346,0.534,350,0.88,359,0.557,368,0.534,372,0.58,373,0.58,378,0.557,381,0.629,382,0.115,383,0.655,384,0.655,387,1.427,388,0.49,389,1.073,390,1.073,391,1.266,392,1.372,393,1.259,395,0.917,396,1.367,397,1.901,399,1.757,403,1.41,404,1.16,405,0.954,406,0.861,408,0.737,410,0.917,411,0.954,412,0.39,413,1.236,414,0.655,415,0.954,416,1.48,417,1.125,418,0.655,419,0.655,420,1.314,421,0.954,422,0.954,423,1.125,424,0.655,425,0.655,426,0.655,427,0.655,428,0.629,429,0.49,430,0.655,431,0.655,432,0.655,433,0.655,434,0.629,435,0.655,437,1.555,438,3.148,454,2.06,468,1.663,469,1.555,476,2.058,477,1.831,478,1.831,479,1.948,487,2.25,489,2.732,506,2.058,529,4.696,534,2.732,536,2.732,538,3.278,540,3.039,544,2.519,549,3.98,1410,5.91,1508,6.056,1509,5.416,1510,6.816,1511,5.416,1512,4.591,1513,4.591,1514,4.591,1515,3.151,1516,3.151,1517,4.591,1518,4.591,1519,3.151]],["title/components/WorkstationActorComponent.html",[193,0.691,382,0.083]],["body/components/WorkstationActorComponent.html",[0,0.085,1,4.151,3,0.127,4,0.127,5,0.099,6,2.492,8,1.242,10,0.996,11,0.812,12,0.394,13,1.532,14,1.881,15,0.594,16,2.431,17,3.257,18,3.257,19,3.257,20,1.037,21,2.787,22,2.965,23,2.965,24,2.631,25,2.787,26,2.15,27,2.631,28,0.756,29,0.015,30,1.028,31,0.957,32,0.919,33,1.652,34,0.884,37,0.721,38,1.416,41,2.254,43,1.159,46,2.912,50,0.189,51,1.121,53,0.113,55,0.127,56,0.723,64,0.006,65,0.009,66,0.006,79,0.812,98,0.728,107,0.616,127,0.616,135,0.302,138,0.51,153,0.591,158,0.668,165,0.591,166,0.591,169,0.668,170,0.919,176,0.591,177,0.591,180,0.668,182,0.668,188,0.591,189,0.591,190,0.591,191,0.591,192,0.591,193,1.191,203,0.642,204,0.642,205,0.642,206,0.642,212,0.567,215,0.642,221,0.591,222,0.591,225,0.668,228,0.919,233,0.591,234,0.591,235,0.591,238,0.668,240,0.668,241,0.668,246,0.591,247,0.591,248,0.591,251,0.812,253,0.642,254,0.642,259,0.591,260,0.567,261,0.591,262,0.591,263,0.591,264,0.591,265,0.591,266,0.591,269,0.642,271,0.668,272,0.642,273,0.668,274,0.668,275,0.668,276,0.642,314,0.543,344,0.567,345,0.567,346,0.567,350,0.91,359,0.591,368,0.567,372,0.616,373,0.616,378,0.591,381,0.668,382,0.119,383,0.695,384,0.695,387,1.211,388,0.521,389,1.121,390,1.121,391,1.31,392,1.377,393,1.264,395,0.957,396,1.037,397,1.791,405,0.695,410,0.957,411,0.996,412,0.414,413,1.271,414,0.695,415,0.996,416,1.502,417,1.164,418,0.695,419,0.695,420,1.346,421,0.996,422,0.996,423,1.164,424,0.695,425,0.695,426,0.695,427,1.164,428,1.222,429,0.521,430,0.695,431,0.695,432,0.695,433,0.695,434,0.668,435,0.695,486,4.859,561,1.739,567,1.652,723,1.945,736,4.592,737,2.07,1398,2.215,1399,2.215,1400,2.215,1401,2.215,1402,2.215,1403,2.215,1404,2.215,1405,2.215,1406,2.215,1407,2.215,1520,4.158,1521,3.346]],["title/changelog.html",[1522,2.541,1523,2.541,1524,2.826]],["body/changelog.html",[5,0.121,16,1.475,26,1.833,29,0.012,31,0.817,34,0.482,51,0.956,57,1.336,64,0.008,65,0.01,66,0.008,68,2.019,72,4.128,76,3.879,77,4.297,79,1.057,82,3.546,95,1.101,107,0.753,115,3.188,131,0.664,196,3.188,197,2.707,251,0.934,260,0.693,269,0.784,272,0.784,347,1.922,350,1.084,382,0.087,393,1.16,399,1.208,412,0.506,428,0.817,429,0.858,481,3.546,626,2.921,750,2.921,755,3.188,772,4.78,780,3.188,823,3.188,931,3.546,932,3.546,954,2.921,958,3.546,967,4.297,968,4.297,991,3.546,1001,2.529,1048,2.921,1055,4.128,1056,5.787,1106,3.546,1193,3.546,1228,2.707,1234,5.407,1240,3.546,1241,4.78,1271,3.546,1273,3.546,1312,5.407,1313,3.546,1524,5.407,1525,5.787,1526,4.09,1527,5.787,1528,4.09,1529,4.09,1530,4.09,1531,4.09,1532,4.09,1533,4.09,1534,4.09,1535,4.09,1536,4.09,1537,4.09,1538,5.513,1539,4.09,1540,3.546,1541,4.09,1542,5.513,1543,4.78,1544,5.407,1545,4.09,1546,4.09,1547,4.09,1548,6.967,1549,3.546,1550,4.09,1551,4.09,1552,4.09,1553,4.09,1554,4.09,1555,3.546,1556,4.09,1557,4.09,1558,5.513,1559,4.09,1560,4.09,1561,4.09,1562,6.967,1563,5.513,1564,4.09,1565,4.09,1566,5.513,1567,5.513,1568,6.674,1569,4.09,1570,4.09,1571,4.09,1572,5.513,1573,4.09,1574,4.09,1575,4.09,1576,4.09,1577,4.78,1578,3.546,1579,3.546,1580,5.513,1581,4.09,1582,4.09,1583,4.09,1584,3.546,1585,4.09,1586,4.09,1587,3.546,1588,4.09,1589,4.09,1590,4.09,1591,4.09,1592,4.09,1593,4.09,1594,4.09,1595,6.236,1596,5.513,1597,4.09,1598,6.236,1599,3.546,1600,4.09,1601,6.236,1602,4.09,1603,6.236,1604,4.09,1605,4.09,1606,4.09,1607,4.09,1608,4.09,1609,4.09,1610,4.09,1611,5.513,1612,4.09,1613,4.09,1614,4.09,1615,3.546,1616,4.09,1617,4.09,1618,4.09,1619,4.09,1620,4.09,1621,3.546,1622,4.78,1623,4.09,1624,4.09,1625,4.09,1626,4.09,1627,3.546,1628,4.09,1629,4.09,1630,4.09,1631,4.09,1632,4.09,1633,5.513,1634,4.09,1635,4.09]],["title/coverage.html",[1636,4.636]],["body/coverage.html",[0,0.091,1,1.965,5,0.106,6,3.679,7,3.106,8,0.687,9,3.106,11,0.607,28,0.401,29,0.015,57,0.687,64,0.007,65,0.009,66,0.007,67,3.279,68,1.768,70,3.106,95,0.715,123,4.249,153,0.633,165,0.633,166,0.633,170,0.687,176,0.633,177,0.633,188,0.633,189,0.633,190,0.633,191,0.633,192,0.633,193,0.633,203,0.687,204,0.687,205,0.687,206,0.687,212,0.607,221,0.633,222,0.633,233,0.633,234,0.633,235,0.633,246,0.633,247,0.633,248,0.633,259,0.633,260,0.607,261,0.633,262,0.633,263,0.633,264,0.633,265,0.633,266,0.633,276,0.687,314,0.582,334,2.371,335,2.371,344,0.607,345,0.607,346,0.607,347,1.683,359,0.633,368,0.607,369,2.082,373,0.659,378,0.633,382,0.172,385,3.106,386,3.922,412,0.823,436,3.106,437,3.626,480,3.106,517,3.331,527,3.106,538,2.558,553,3.106,554,3.106,610,3.331,612,3.106,624,3.106,625,4.154,635,1.861,659,3.106,663,3.106,681,3.106,688,3.106,712,3.106,722,3.106,723,4.006,752,3.106,753,3.922,786,3.106,787,3.922,870,3.106,919,3.106,920,4.154,983,3.106,995,3.106,998,3.106,999,3.106,1025,3.106,1028,3.106,1037,3.106,1041,3.85,1042,3.106,1047,3.106,1053,3.106,1102,3.106,1202,3.106,1203,3.106,1270,3.106,1345,3.106,1365,2.558,1366,2.558,1368,2.792,1376,3.106,1397,4.176,1408,3.106,1416,3.106,1417,3.106,1421,3.106,1443,3.106,1508,3.106,1520,3.106,1636,3.106,1637,2.792,1638,3.582,1639,3.582,1640,3.582,1641,5.817,1642,6.309,1643,3.582,1644,5.032,1645,5.032,1646,6.892,1647,3.582,1648,6.646,1649,3.582,1650,5.032,1651,6.309,1652,3.582,1653,3.582,1654,5.032,1655,3.582,1656,3.582,1657,3.582,1658,3.582,1659,5.032,1660,5.032,1661,6.646,1662,3.582,1663,3.582,1664,4.363,1665,3.106,1666,6.646,1667,5.032,1668,3.106,1669,3.106,1670,3.106,1671,3.106,1672,3.106,1673,3.106,1674,3.106,1675,3.106,1676,3.582,1677,3.582]],["title/dependencies.html",[134,1.504,969,2.826]],["body/dependencies.html",[29,0.015,53,0.195,64,0.011,65,0.013,66,0.011,134,1.854,157,2.182,404,1.467,775,5.031,892,4.523,1678,5.803,1679,7.998,1680,5.803,1681,5.803,1682,6.882,1683,5.365,1684,5.803,1685,5.803,1686,5.803,1687,5.803,1688,5.803,1689,5.803,1690,5.803,1691,5.803,1692,5.803,1693,5.803,1694,5.803,1695,5.803]],["title/miscellaneous/enumerations.html",[1696,2.328,1697,4.08]],["body/miscellaneous/enumerations.html",[12,0.722,29,0.015,32,1.439,64,0.011,65,0.013,66,0.011,1041,4.055,1070,5.538,1071,6.16,1072,6.16,1083,5.538,1696,4.375,1697,5.312,1698,6.127,1699,7.105]],["title/miscellaneous/functions.html",[1696,2.328,1700,4.08]],["body/miscellaneous/functions.html",[12,0.605,14,2.855,21,2.984,28,0.576,29,0.015,30,2.136,31,1.025,32,0.985,37,0.82,41,2.413,51,1.201,64,0.01,65,0.012,66,0.01,71,4.229,97,1.216,98,0.972,99,1.216,303,4.452,308,4.452,439,4.452,476,2.864,589,4.003,635,3.32,758,3.667,874,4.563,1048,3.667,1055,4.604,1124,4.98,1127,6.031,1365,4.563,1366,4.563,1368,4.98,1664,5.54,1665,5.54,1668,5.54,1669,4.452,1670,5.54,1671,5.54,1672,4.452,1673,5.54,1674,4.452,1675,5.54,1696,3.667,1700,4.452,1701,6.389,1702,5.135,1703,5.135,1704,5.135,1705,5.135,1706,6.389,1707,6.955,1708,6.389,1709,5.135,1710,6.389,1711,5.135,1712,5.135,1713,5.135,1714,5.135,1715,5.135,1716,5.135,1717,6.389]],["title/index.html",[12,0.384,1522,2.541,1523,2.541]],["body/index.html",[29,0.015,50,0.202,64,0.009,65,0.011,66,0.009,79,1.23,123,2.408,127,0.853,131,0.753,160,1.672,194,3.703,314,0.753,393,1.156,395,1.195,404,1.171,405,0.963,410,0.925,441,3.48,517,3.963,558,2.693,746,2.866,826,3.613,868,3.309,869,3.309,892,3.613,943,4.018,954,3.309,967,5.464,968,5.464,1001,2.866,1204,3.613,1228,3.963,1354,3.613,1370,4.018,1525,6.293,1527,5.191,1543,6.293,1544,6.445,1577,4.018,1578,4.018,1579,5.191,1584,4.018,1587,4.018,1599,5.751,1615,4.018,1621,5.191,1622,4.018,1627,4.018,1637,5.17,1683,3.613,1718,4.634,1719,4.634,1720,4.634,1721,4.634,1722,4.634,1723,4.018,1724,5.987,1725,4.634,1726,4.634,1727,4.634,1728,4.634,1729,4.634,1730,4.634,1731,5.987,1732,4.634,1733,4.634,1734,4.634,1735,4.634,1736,4.634,1737,4.634,1738,4.634,1739,5.987,1740,5.987,1741,4.634,1742,4.634,1743,4.634,1744,4.634,1745,4.634,1746,4.634,1747,4.634,1748,4.634,1749,4.634,1750,4.634,1751,4.634,1752,4.634,1753,4.634,1754,4.634,1755,5.987,1756,4.634,1757,4.634,1758,4.634,1759,4.634,1760,7.01,1761,4.634,1762,4.634,1763,4.634,1764,4.634,1765,4.634,1766,4.634,1767,4.634,1768,4.634,1769,4.634,1770,4.634,1771,4.634,1772,4.634,1773,4.634,1774,4.634,1775,4.634,1776,4.018,1777,4.634,1778,4.634,1779,4.634,1780,4.634,1781,4.634]],["title/license.html",[1522,2.541,1523,2.541,1782,2.826]],["body/license.html",[29,0.012,64,0.01,65,0.012,66,0.01,76,3.084,144,1.765,925,4.601,954,4.656,966,4.601,1540,5.654,1555,4.601,1637,4.136,1723,4.601,1776,4.601,1782,4.601,1783,5.306,1784,7.059,1785,5.306,1786,5.306,1787,5.306,1788,5.306,1789,6.52,1790,5.306,1791,5.306,1792,5.306,1793,5.306,1794,5.306,1795,6.52,1796,7.932,1797,5.306,1798,5.306,1799,7.059,1800,5.306,1801,5.306,1802,5.306,1803,5.306,1804,5.306,1805,5.306,1806,5.306,1807,5.306,1808,5.306,1809,5.306,1810,6.52,1811,5.306,1812,5.306,1813,5.306,1814,5.306,1815,5.306,1816,5.306,1817,6.52,1818,6.52,1819,5.306,1820,5.306,1821,5.306,1822,5.306,1823,5.306,1824,5.306,1825,5.306,1826,5.306,1827,5.306,1828,5.306,1829,5.306,1830,5.306,1831,5.306,1832,5.306,1833,5.306,1834,5.306,1835,5.306,1836,5.306,1837,5.306,1838,5.306,1839,5.306,1840,5.306,1841,5.306,1842,5.306,1843,5.306,1844,5.306,1845,5.306]],["title/modules.html",[133,1.709]],["body/modules.html",[29,0.012,64,0.01,65,0.012,66,0.01,132,3.559,133,1.718,149,3.559,161,3.559,172,3.559,183,3.839,194,3.325,208,3.559,217,3.559,229,3.559,242,3.559,254,1.568,255,3.559,280,3.559,281,3.559,282,3.559,283,3.559,291,3.559,315,3.559,1549,7.092,1683,6.376,1846,8.179]],["title/overview.html",[1847,4.636]],["body/overview.html",[0,0.061,11,1.055,29,0.015,64,0.005,65,0.007,66,0.005,68,2.276,69,1.598,79,0.409,95,0.921,131,0.392,132,4.379,133,0.772,134,0.772,135,0.218,136,0.836,137,0.836,138,0.257,139,0.836,140,2.094,141,2.094,142,1.249,143,0.836,144,0.803,149,4.477,150,2.094,151,2.094,152,2.094,153,1.101,161,4.693,162,2.094,163,2.094,164,2.094,165,1.101,166,1.101,172,4.693,173,2.094,174,2.094,175,2.094,176,1.101,177,1.101,183,5.421,184,2.094,185,2.094,186,2.094,187,2.094,188,1.101,189,1.101,190,1.101,191,1.101,192,1.101,193,1.101,194,4.785,208,4.477,209,2.094,210,2.094,211,2.094,212,1.055,217,4.84,218,2.094,219,2.094,220,2.094,221,1.101,222,1.101,229,4.84,230,2.094,231,2.094,232,2.094,233,1.101,234,1.101,235,1.101,242,4.84,243,2.094,244,2.094,245,2.094,246,1.101,247,1.101,248,1.101,255,5.178,256,2.094,257,2.094,258,2.094,259,1.101,260,1.055,261,1.101,262,1.101,263,1.101,264,1.101,265,1.101,266,1.101,277,2.094,278,2.094,279,2.094,280,5.137,281,4.914,282,4.631,283,4.631,291,4.263,310,2.094,311,2.094,312,2.094,313,2.094,314,1.012,315,4.477,331,2.094,332,2.094,333,2.094,334,4.123,335,4.123,340,2.094,341,2.094,342,2.094,343,2.094,344,1.055,345,1.055,346,1.055,347,2.167,355,2.094,356,2.094,357,2.094,358,2.094,359,1.101,364,2.094,365,2.094,366,2.094,367,2.094,368,1.055,369,2.68,375,2.094,376,2.094,377,2.094,378,1.101,429,0.376,454,0.836,506,1.083,611,1.882,694,2.094,1847,2.094,1848,2.415,1849,2.415,1850,2.415]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":123,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"index.html":{}}}],["0,0",{"_index":705,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["0,0,0",{"_index":637,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["0.0",{"_index":541,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["0.0.0",{"_index":1633,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":1611,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1598,"title":{},"body":{"changelog.html":{}}}],["0.001",{"_index":658,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["0.002",{"_index":879,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["0.05",{"_index":908,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["0.1",{"_index":652,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextMeshComponent.html":{}}}],["0.1.0",{"_index":1594,"title":{},"body":{"changelog.html":{}}}],["0.11.1",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["0.121.1",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":592,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0.3",{"_index":1467,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0.4",{"_index":1513,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["0.5",{"_index":808,"title":{},"body":{"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["0/1",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1642,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1640,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1641,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":503,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["04",{"_index":1595,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1582,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1563,"title":{},"body":{"changelog.html":{}}}],["0x444444",{"_index":716,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["0x999999",{"_index":575,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xa0a0a0",{"_index":739,"title":{},"body":{"components/LayerActorComponent.html":{},"components/SceneComponent.html":{}}}],["0xa4a4a4",{"_index":751,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["0xda1111",{"_index":582,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["0xdadada",{"_index":1476,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["0xffa0a0",{"_index":63,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["0xfff0f0",{"_index":60,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["0xffff00",{"_index":760,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["0xffffff",{"_index":33,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["1",{"_index":454,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["1.0",{"_index":446,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["1.0.2",{"_index":1581,"title":{},"body":{"changelog.html":{}}}],["1.01",{"_index":594,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["1.05",{"_index":693,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["1.1.0",{"_index":1561,"title":{},"body":{"changelog.html":{}}}],["1.2",{"_index":816,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["1.2.0",{"_index":1546,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":1535,"title":{},"body":{"changelog.html":{}}}],["1.406.0",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":750,"title":{},"body":{"components/LayerActorComponent.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{},"changelog.html":{}}}],["10.1.4",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":517,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/RendererCanvasComponent.html":{},"coverage.html":{},"index.html":{}}}],["100px",{"_index":1267,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["1024",{"_index":656,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["17",{"_index":1848,"title":{},"body":{"overview.html":{}}}],["18",{"_index":1596,"title":{},"body":{"changelog.html":{}}}],["180",{"_index":623,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["2",{"_index":506,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"overview.html":{}}}],["2.0",{"_index":670,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["2/8",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":667,"title":{},"body":{"components/FrameMeshComponent.html":{},"components/MapControlsComponent.html":{}}}],["200",{"_index":812,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["2017",{"_index":1786,"title":{},"body":{"license.html":{}}}],["2019",{"_index":1562,"title":{},"body":{"changelog.html":{}}}],["2019.10.31",{"_index":1547,"title":{},"body":{"changelog.html":{}}}],["2020.09.21",{"_index":1536,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":1564,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":521,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["3.6.5",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["3/8",{"_index":1653,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":692,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["31",{"_index":1849,"title":{},"body":{"overview.html":{}}}],["37",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["379579926",{"_index":917,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["39",{"_index":1625,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":405,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["4",{"_index":1850,"title":{},"body":{"overview.html":{}}}],["4/7",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":694,"title":{},"body":{"components/GridMeshComponent.html":{},"overview.html":{}}}],["500",{"_index":654,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{}}}],["57",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":1514,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["6.6.3",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":538,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["95",{"_index":989,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["_materialcolor",{"_index":1445,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_overridematerialcolor",{"_index":1346,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["_text",{"_index":1446,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["_width",{"_index":724,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["above",{"_index":1816,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1330,"title":{},"body":{"injectables/RendererService.html":{}}}],["abstract",{"_index":56,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractcamera",{"_index":1000,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["abstractconnector",{"_index":754,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["abstractcss3dmesh",{"_index":481,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"changelog.html":{}}}],["abstractions",{"_index":1593,"title":{},"body":{"changelog.html":{}}}],["abstractlazyobject3d",{"_index":1444,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["abstractmesh",{"_index":438,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["abstractmodelloader",{"_index":926,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["abstractobject3d",{"_index":387,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractorbitcontrols",{"_index":788,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["abstractserveractor",{"_index":1,"title":{"classes/AbstractServerActor.html":{}},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["abstractserveractor:10",{"_index":1402,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:13",{"_index":1403,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:16",{"_index":1401,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:19",{"_index":1400,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:21",{"_index":1407,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:24",{"_index":1399,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:26",{"_index":1406,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:31",{"_index":1405,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:36",{"_index":1404,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["abstractserveractor:7",{"_index":1398,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["accessors",{"_index":726,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["action",{"_index":1839,"title":{},"body":{"license.html":{}}}],["actor",{"_index":428,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["actor'},{'name",{"_index":420,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["actor.component",{"_index":200,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["actor.component.ts",{"_index":723,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["actor.component.ts:19",{"_index":728,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:22",{"_index":729,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:27",{"_index":743,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:31",{"_index":738,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:33",{"_index":727,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:34",{"_index":1521,"title":{},"body":{"components/WorkstationActorComponent.html":{}}}],["actor.component.ts:35",{"_index":731,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:36",{"_index":732,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:37",{"_index":730,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:39",{"_index":740,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:41",{"_index":741,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:43",{"_index":735,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:47",{"_index":734,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.component.ts:51",{"_index":733,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["actor.module.ts",{"_index":198,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["actor.ts",{"_index":9,"title":{},"body":{"classes/AbstractServerActor.html":{},"coverage.html":{}}}],["actor.ts:10",{"_index":48,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:13",{"_index":49,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:16",{"_index":47,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:19",{"_index":45,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:21",{"_index":35,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:24",{"_index":44,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:26",{"_index":40,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:31",{"_index":39,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:36",{"_index":36,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actor.ts:7",{"_index":42,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["actors",{"_index":1560,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":435,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["add",{"_index":837,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["added",{"_index":1548,"title":{},"body":{"changelog.html":{}}}],["addgroup",{"_index":1105,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["addgroup(group",{"_index":1117,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["adheres",{"_index":1532,"title":{},"body":{"changelog.html":{}}}],["adhering",{"_index":1605,"title":{},"body":{"changelog.html":{}}}],["adjusted",{"_index":1559,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":864,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["afterviewinit",{"_index":483,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/EmptyComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["akimenko",{"_index":1788,"title":{},"body":{"license.html":{}}}],["allows",{"_index":1567,"title":{},"body":{"changelog.html":{}}}],["along",{"_index":458,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["alpha",{"_index":1316,"title":{},"body":{"injectables/RendererService.html":{}}}],["already",{"_index":1609,"title":{},"body":{"changelog.html":{}}}],["always",{"_index":780,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":1808,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1543,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":157,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":53,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":75,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animated",{"_index":78,"title":{},"body":{"injectables/AnimationService.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animation",{"_index":72,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/SceneComponent.html":{},"changelog.html":{}}}],["animation.module",{"_index":297,"title":{},"body":{"modules/AtftModule.html":{}}}],["animation.module.ts",{"_index":146,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation.service",{"_index":148,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["animation/animation.service",{"_index":562,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["animation/atft",{"_index":296,"title":{},"body":{"modules/AtftModule.html":{}}}],["animationincrement",{"_index":872,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["animations",{"_index":104,"title":{},"body":{"injectables/AnimationService.html":{}}}],["animationservice",{"_index":68,"title":{"injectables/AnimationService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/SceneComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["animationstep",{"_index":90,"title":{},"body":{"injectables/AnimationService.html":{}}}],["antialias",{"_index":1315,"title":{},"body":{"injectables/RendererService.html":{}}}],["any).setresourcepath(this.resourcepath",{"_index":973,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["api",{"_index":1621,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["app",{"_index":1719,"title":{},"body":{"index.html":{}}}],["app.component.{html|ts",{"_index":1629,"title":{},"body":{"changelog.html":{}}}],["appliedcolor",{"_index":635,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedcolor(color",{"_index":1705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedcolor(this.color",{"_index":639,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["appliedcolor(this.groundcolor",{"_index":720,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.intensity",{"_index":721,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedcolor(this.materialcolor",{"_index":770,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["appliedcolor(this.skycolor",{"_index":719,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["appliedmaterial",{"_index":1365,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["appliedmaterial(materialcolor",{"_index":1709,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appliedmaterial(this.materialcolor",{"_index":1490,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["arc",{"_index":1509,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["area",{"_index":1238,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arguments",{"_index":1216,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["arising",{"_index":1843,"title":{},"body":{"license.html":{}}}],["arr",{"_index":893,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["array",{"_index":1144,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["aspect",{"_index":1013,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"injectables/RendererService.html":{}}}],["aspectratio",{"_index":1015,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["assets/font/helvetiker_regular.typeface.json",{"_index":1465,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["associated",{"_index":1797,"title":{},"body":{"license.html":{}}}],["async",{"_index":929,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["atft",{"_index":393,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{}}}],["atft's",{"_index":1620,"title":{},"body":{"changelog.html":{}}}],["atft.module",{"_index":201,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["atftanimationmodule",{"_index":132,"title":{"modules/AtftAnimationModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcameramodule",{"_index":149,"title":{"modules/AtftCameraModule.html":{}},"body":{"modules/AtftCameraModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftconnectormodule",{"_index":161,"title":{"modules/AtftConnectorModule.html":{}},"body":{"modules/AtftConnectorModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftcontrolmodule",{"_index":172,"title":{"modules/AtftControlModule.html":{}},"body":{"modules/AtftControlModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atftdatacenteractormodule",{"_index":183,"title":{"modules/AtftDataCenterActorModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules.html":{},"overview.html":{}}}],["atfteffectmodule",{"_index":208,"title":{"modules/AtftEffectModule.html":{}},"body":{"modules/AtftEffectModule.html":{},"modules/AtftModule.html":{},"modules.html":{},"overview.html":{}}}],["atfthelpermodule",{"_index":217,"title":{"modules/AtftHelperModule.html":{}},"body":{"modules/AtftHelperModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftlightmodule",{"_index":229,"title":{"modules/AtftLightModule.html":{}},"body":{"modules/AtftLightModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftloadermodule",{"_index":242,"title":{"modules/AtftLoaderModule.html":{}},"body":{"modules/AtftLoaderModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmeshmodule",{"_index":255,"title":{"modules/AtftMeshModule.html":{}},"body":{"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftmodule",{"_index":194,"title":{"modules/AtftModule.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"modules/AtftModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["atftobjectmodule",{"_index":280,"title":{"modules/AtftObjectModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules.html":{},"overview.html":{}}}],["atftpipemodule",{"_index":291,"title":{"modules/AtftPipeModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftPipeModule.html":{},"modules.html":{},"overview.html":{}}}],["atftraycastermodule",{"_index":281,"title":{"modules/AtftRaycasterModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRaycasterModule.html":{},"modules.html":{},"overview.html":{}}}],["atftrenderermodule",{"_index":282,"title":{"modules/AtftRendererModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftRendererModule.html":{},"modules.html":{},"overview.html":{}}}],["atftstatsmodule",{"_index":283,"title":{"modules/AtftStatsModule.html":{}},"body":{"modules/AtftModule.html":{},"modules/AtftStatsModule.html":{},"modules.html":{},"overview.html":{}}}],["atfttextmodule",{"_index":315,"title":{"modules/AtftTextModule.html":{}},"body":{"modules/AtftObjectModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["attribute",{"_index":1553,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1832,"title":{},"body":{"license.html":{}}}],["auto",{"_index":373,"title":{},"body":{"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["autorotate",{"_index":795,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["autorotatespeed",{"_index":796,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["avoid",{"_index":112,"title":{},"body":{"injectables/AnimationService.html":{}}}],["await",{"_index":978,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["axes",{"_index":225,"title":{},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["axeshelpercomponent",{"_index":221,"title":{"components/AxesHelperComponent.html":{}},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["axis",{"_index":452,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["background",{"_index":1377,"title":{},"body":{"components/SceneComponent.html":{}}}],["barrel",{"_index":203,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["based",{"_index":1530,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":1354,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["behaviour",{"_index":1261,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["below",{"_index":1726,"title":{},"body":{"index.html":{}}}],["bevelenabled",{"_index":1448,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["beveloffset",{"_index":1449,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsegments",{"_index":1450,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelsize",{"_index":1451,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["bevelthickness",{"_index":1452,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["binding",{"_index":1707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bindings",{"_index":1627,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["black",{"_index":992,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["blending",{"_index":905,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["body",{"_index":1752,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":1124,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":137,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["box",{"_index":269,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["boxmeshcomponent",{"_index":259,"title":{"components/BoxMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["browse",{"_index":1846,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1683,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bug",{"_index":988,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["build",{"_index":1755,"title":{},"body":{"index.html":{}}}],["c",{"_index":1785,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":703,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["calculateaspectratio",{"_index":1274,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculateaspectratio(canvas",{"_index":1281,"title":{},"body":{"injectables/RendererService.html":{}}}],["calculatesize",{"_index":1671,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["calculatesize(group",{"_index":1713,"title":{},"body":{"miscellaneous/functions.html":{}}}],["called",{"_index":85,"title":{},"body":{"injectables/AnimationService.html":{}}}],["camera",{"_index":1001,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"changelog.html":{},"index.html":{}}}],["camera'},{'name",{"_index":424,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["camera.component",{"_index":159,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera.component.ts",{"_index":999,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["camera.component.ts:13",{"_index":1008,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:14",{"_index":1009,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:15",{"_index":1007,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:23",{"_index":1010,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.component.ts:34",{"_index":1012,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["camera.directive",{"_index":353,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["camera.directive.ts",{"_index":1042,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"coverage.html":{}}}],["camera.directive.ts:15",{"_index":1044,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.directive.ts:6",{"_index":1043,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["camera.module",{"_index":286,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera.module.ts",{"_index":155,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["camera/abstract",{"_index":1045,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["camera/atft",{"_index":285,"title":{},"body":{"modules/AtftModule.html":{}}}],["camera]'},{'name",{"_index":431,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas",{"_index":1204,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"index.html":{}}}],["canvas'},{'name",{"_index":425,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["canvas.clientheight",{"_index":1319,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.clientwidth",{"_index":1340,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.component",{"_index":362,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["canvas.component.html",{"_index":1207,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.scss",{"_index":1205,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts",{"_index":1203,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["canvas.component.ts:12",{"_index":1224,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:15",{"_index":1215,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:18",{"_index":1214,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:28",{"_index":1219,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:42",{"_index":1226,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:46",{"_index":1243,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.component.ts:51",{"_index":1218,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["canvas.parentelement.appendchild(this.css3drenderer.domelement",{"_index":1333,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.border",{"_index":1339,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.height",{"_index":1338,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.width",{"_index":1337,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvas.style.zindex",{"_index":1326,"title":{},"body":{"injectables/RendererService.html":{}}}],["canvasref",{"_index":1208,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["case",{"_index":303,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["cast",{"_index":971,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["castshadow",{"_index":627,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["center",{"_index":197,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["center.ts",{"_index":1673,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["center/atft",{"_index":195,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["center/layer/layer",{"_index":722,"title":{},"body":{"components/LayerActorComponent.html":{},"coverage.html":{}}}],["center/server/abstract",{"_index":7,"title":{},"body":{"classes/AbstractServerActor.html":{},"coverage.html":{}}}],["center/server/server",{"_index":1397,"title":{},"body":{"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"coverage.html":{}}}],["center/server/workstation",{"_index":1520,"title":{},"body":{"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["centered",{"_index":1347,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["change",{"_index":109,"title":{},"body":{"injectables/AnimationService.html":{}}}],["changed",{"_index":1537,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":1524,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":823,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"changelog.html":{}}}],["changes['rotatespeed",{"_index":831,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["changes['zoomspeed",{"_index":834,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["charge",{"_index":1792,"title":{},"body":{"license.html":{}}}],["child",{"_index":571,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.add(this.edges",{"_index":597,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.material",{"_index":573,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.scale.setscalar(0.999",{"_index":599,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["child.visible",{"_index":600,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["childs",{"_index":1058,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["claim",{"_index":1835,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractServerActor.html":{}},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["click",{"_index":1725,"title":{},"body":{"index.html":{}}}],["clone",{"_index":1756,"title":{},"body":{"index.html":{}}}],["cluster_atftanimationmodule",{"_index":140,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftanimationmodule_providers",{"_index":141,"title":{},"body":{"modules/AtftAnimationModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule",{"_index":150,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_declarations",{"_index":151,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftcameramodule_exports",{"_index":152,"title":{},"body":{"modules/AtftCameraModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule",{"_index":162,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_declarations",{"_index":163,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftconnectormodule_exports",{"_index":164,"title":{},"body":{"modules/AtftConnectorModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule",{"_index":173,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_declarations",{"_index":174,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftcontrolmodule_exports",{"_index":175,"title":{},"body":{"modules/AtftControlModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule",{"_index":184,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_declarations",{"_index":185,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_exports",{"_index":187,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atftdatacenteractormodule_imports",{"_index":186,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule",{"_index":209,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_declarations",{"_index":210,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfteffectmodule_exports",{"_index":211,"title":{},"body":{"modules/AtftEffectModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule",{"_index":218,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_declarations",{"_index":219,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atfthelpermodule_exports",{"_index":220,"title":{},"body":{"modules/AtftHelperModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule",{"_index":230,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_declarations",{"_index":231,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftlightmodule_exports",{"_index":232,"title":{},"body":{"modules/AtftLightModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule",{"_index":243,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_declarations",{"_index":244,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftloadermodule_exports",{"_index":245,"title":{},"body":{"modules/AtftLoaderModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule",{"_index":256,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_declarations",{"_index":257,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmeshmodule_exports",{"_index":258,"title":{},"body":{"modules/AtftMeshModule.html":{},"overview.html":{}}}],["cluster_atftmodule",{"_index":277,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_exports",{"_index":279,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftmodule_imports",{"_index":278,"title":{},"body":{"modules/AtftModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule",{"_index":310,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_declarations",{"_index":311,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_exports",{"_index":313,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftobjectmodule_imports",{"_index":312,"title":{},"body":{"modules/AtftObjectModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule",{"_index":331,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_declarations",{"_index":332,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftpipemodule_exports",{"_index":333,"title":{},"body":{"modules/AtftPipeModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule",{"_index":340,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_declarations",{"_index":341,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_exports",{"_index":342,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftraycastermodule_providers",{"_index":343,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule",{"_index":355,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_declarations",{"_index":356,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_exports",{"_index":357,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftrenderermodule_providers",{"_index":358,"title":{},"body":{"modules/AtftRendererModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule",{"_index":364,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_declarations",{"_index":365,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_exports",{"_index":366,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atftstatsmodule_providers",{"_index":367,"title":{},"body":{"modules/AtftStatsModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule",{"_index":375,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_declarations",{"_index":376,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["cluster_atfttextmodule_exports",{"_index":377,"title":{},"body":{"modules/AtftTextModule.html":{},"overview.html":{}}}],["code",{"_index":1628,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":14,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["color.ts",{"_index":1665,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["comfreek",{"_index":1772,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1557,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":156,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{}}}],["compact",{"_index":205,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["compiler",{"_index":1542,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":382,"title":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["component_template",{"_index":414,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["components",{"_index":79,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["composite",{"_index":1062,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["conditions",{"_index":1815,"title":{},"body":{"license.html":{}}}],["config",{"_index":1764,"title":{},"body":{"index.html":{}}}],["confusing",{"_index":1612,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1844,"title":{},"body":{"license.html":{}}}],["connector",{"_index":755,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"changelog.html":{}}}],["connector'},{'name",{"_index":421,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["connector.component",{"_index":171,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector.component.ts",{"_index":753,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["connector.component.ts:16",{"_index":761,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:18",{"_index":883,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:19",{"_index":765,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:21",{"_index":759,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:24",{"_index":884,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:27",{"_index":882,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:30",{"_index":762,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:33",{"_index":881,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:36",{"_index":878,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:38",{"_index":880,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:40",{"_index":888,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:41",{"_index":890,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:42",{"_index":877,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:48",{"_index":764,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["connector.component.ts:53",{"_index":886,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:95",{"_index":885,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.component.ts:99",{"_index":887,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["connector.module",{"_index":319,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["connector.module.ts",{"_index":168,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["connector/atft",{"_index":318,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["considered",{"_index":1059,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["console.log('add",{"_index":1166,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log('axeshelpercomponent.newobject3dinstance",{"_index":407,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["console.log('boxmeshcomponent.newobject3dinstance",{"_index":467,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["console.log('change",{"_index":1486,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.constructor",{"_index":545,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('cylindermeshcomponent.newobject3dinstance",{"_index":546,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["console.log('dashed",{"_index":564,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log('gridhelpercomponent.newobject3dinstance",{"_index":685,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["console.log('meshlineconnectorcomponent.updatelinegeometry",{"_index":915,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["console.log('objectloadercomponent.loadlazyobject",{"_index":987,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["console.log('perspectivecameracomponent.createcamera",{"_index":1014,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('perspectivecameracomponent.updateaspectratio",{"_index":1022,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["console.log('raycasterservice.addgroup",{"_index":1167,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log('render",{"_index":1307,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.constructor",{"_index":1246,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('renderercomponent.initialize",{"_index":1311,"title":{},"body":{"injectables/RendererService.html":{}}}],["console.log('renderercomponent.ngafterviewinit",{"_index":1249,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["console.log('serveractorcomponent.onclick",{"_index":62,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.ondeselected",{"_index":61,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('serveractorcomponent.onselected",{"_index":58,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["console.log('spheremeshcomponent.newobject3dinstance",{"_index":1413,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["console.log('textmeshcomponent.loadlazyobject",{"_index":1491,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["console.log('unsubscribe",{"_index":1161,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log(child",{"_index":576,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log(event",{"_index":1181,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["console.log(this.edges",{"_index":584,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["console.log(this.host.getobject().parent",{"_index":606,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["const",{"_index":468,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["constructor(host",{"_index":556,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["constructor(raycasterservice",{"_index":1049,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["constructor(rendererservice",{"_index":94,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["constructor(statsservice",{"_index":1279,"title":{},"body":{"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{}}}],["continuously",{"_index":1635,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1840,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1771,"title":{},"body":{"index.html":{}}}],["control",{"_index":1236,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["control.module",{"_index":290,"title":{},"body":{"modules/AtftModule.html":{}}}],["control.module.ts",{"_index":179,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["control/atft",{"_index":289,"title":{},"body":{"modules/AtftModule.html":{}}}],["controls",{"_index":790,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls'},{'name",{"_index":422,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["controls.component",{"_index":181,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["controls.component.scss",{"_index":792,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts",{"_index":787,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["controls.component.ts:15",{"_index":996,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:16",{"_index":817,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:18",{"_index":819,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:20",{"_index":807,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:22",{"_index":809,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:24",{"_index":811,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:25",{"_index":997,"title":{},"body":{"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:26",{"_index":810,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:28",{"_index":818,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:30",{"_index":815,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:32",{"_index":813,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:34",{"_index":814,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["controls.component.ts:36",{"_index":806,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:46",{"_index":822,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["controls.component.ts:61",{"_index":824,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["converts",{"_index":617,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["coordinates",{"_index":706,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["copies",{"_index":1810,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1795,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1784,"title":{},"body":{"license.html":{}}}],["core",{"_index":775,"title":{},"body":{"components/LineConnectorComponent.html":{},"dependencies.html":{}}}],["coverage",{"_index":1636,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":494,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"injectables/StatsService.html":{}}}],["createcamera",{"_index":1002,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["createconnectorobject",{"_index":756,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["createcss3dobject",{"_index":484,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["creates",{"_index":1711,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":108,"title":{},"body":{"injectables/AnimationService.html":{}}}],["css",{"_index":1262,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["css3d",{"_index":275,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["css3dobject",{"_index":490,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["css3dobject(div",{"_index":522,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["css3drenderer",{"_index":1271,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["css3dvideomeshcomponent",{"_index":260,"title":{"components/Css3dVideoMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["currently",{"_index":1230,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["curvesegments",{"_index":1453,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["cylinder",{"_index":271,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["cylindermeshcomponent",{"_index":261,"title":{"components/CylinderMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["d",{"_index":701,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["damages",{"_index":1836,"title":{},"body":{"license.html":{}}}],["damping",{"_index":851,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["dampingfactor",{"_index":797,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["dasharray",{"_index":907,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashed",{"_index":215,"title":{},"body":{"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["dasheddrawdirective",{"_index":212,"title":{"directives/DashedDrawDirective.html":{}},"body":{"modules/AtftEffectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashoffset",{"_index":909,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["dashratio",{"_index":910,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["data",{"_index":196,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{}}}],["data.paths",{"_index":1375,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["deal",{"_index":1798,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1845,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":136,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["decorators",{"_index":1221,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["default",{"_index":31,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["defaultcolor",{"_index":1706,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaults",{"_index":453,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["defined",{"_index":34,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["deg2rad",{"_index":613,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["deg2rad.pipe",{"_index":338,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["deg2radpipe",{"_index":334,"title":{"pipes/Deg2RadPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Deg2RadPipe.html":{},"coverage.html":{},"overview.html":{}}}],["degree",{"_index":622,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["degrees",{"_index":618,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["demo",{"_index":1577,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":134,"title":{"dependencies.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependencies:npm",{"_index":1742,"title":{},"body":{"index.html":{}}}],["dependency",{"_index":1538,"title":{},"body":{"changelog.html":{}}}],["deprecate",{"_index":1551,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":953,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["depth",{"_index":439,"title":{},"body":{"components/BoxMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["depthsegments",{"_index":440,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["depthtest",{"_index":873,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["depthwrite",{"_index":874,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":71,"title":{},"body":{"injectables/AnimationService.html":{},"components/ObjLoaderComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterGroupDirective.html":{},"miscellaneous/functions.html":{}}}],["deselected",{"_index":25,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["details",{"_index":1770,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1738,"title":{},"body":{"index.html":{}}}],["development",{"_index":1587,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["direct",{"_index":1590,"title":{},"body":{"changelog.html":{}}}],["directional",{"_index":241,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["directionallightcomponent",{"_index":233,"title":{"components/DirectionalLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive",{"_index":412,"title":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive({selector",{"_index":563,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"directives/StatsAutoShowDirective.html":{}}}],["directives",{"_index":429,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"overview.html":{}}}],["disable",{"_index":1106,"title":{},"body":{"injectables/RaycasterService.html":{},"changelog.html":{}}}],["display",{"_index":868,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["distance",{"_index":1029,"title":{},"body":{"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{}}}],["distribute",{"_index":1806,"title":{},"body":{"license.html":{}}}],["div",{"_index":495,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.appendchild(this.video",{"_index":520,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.id",{"_index":504,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.style.backgroundcolor",{"_index":502,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.style.height",{"_index":500,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["div.style.width",{"_index":497,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["divisions",{"_index":682,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["document.body.addeventlistener('keydown",{"_index":1431,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.body.appendchild(this.stats.dom",{"_index":1440,"title":{},"body":{"injectables/StatsService.html":{}}}],["document.createelement('div",{"_index":496,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["document.createelement('source",{"_index":511,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["document.createelement('video",{"_index":492,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["documentation",{"_index":1637,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documented",{"_index":1528,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":383,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["draw",{"_index":555,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive",{"_index":216,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["draw.directive.ts",{"_index":554,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["draw.directive.ts:18",{"_index":560,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:61",{"_index":559,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw.directive.ts:9",{"_index":557,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["draw]'},{'name",{"_index":430,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["due",{"_index":772,"title":{},"body":{"components/LineConnectorComponent.html":{},"changelog.html":{}}}],["dynamic",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1736,"title":{},"body":{"index.html":{}}}],["edges",{"_index":449,"title":{},"body":{"components/BoxMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/PlaneMeshComponent.html":{}}}],["edges.add(child",{"_index":601,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edges.children[0].visible",{"_index":608,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edges.material.color.set(0xffffff",{"_index":607,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["edgesgeom",{"_index":577,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["effect.module",{"_index":302,"title":{},"body":{"modules/AtftModule.html":{}}}],["effect.module.ts",{"_index":214,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["effect/atft",{"_index":301,"title":{},"body":{"modules/AtftModule.html":{}}}],["element",{"_index":411,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["elementref",{"_index":1220,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["emit",{"_index":1056,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"changelog.html":{}}}],["emits",{"_index":74,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitted",{"_index":125,"title":{},"body":{"injectables/AnimationService.html":{}}}],["emitter",{"_index":129,"title":{},"body":{"injectables/AnimationService.html":{}}}],["employing",{"_index":921,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["empty",{"_index":660,"title":{},"body":{"components/EmptyComponent.html":{}}}],["empty'},{'name",{"_index":418,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["empty.component",{"_index":227,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["emptycomponent",{"_index":11,"title":{"components/EmptyComponent.html":{}},"body":{"classes/AbstractServerActor.html":{},"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["emptycomponent:20",{"_index":737,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enable",{"_index":1048,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["enable.directive",{"_index":354,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["enable.directive.ts",{"_index":1047,"title":{},"body":{"directives/RaycasterEnableDirective.html":{},"coverage.html":{}}}],["enable.directive.ts:13",{"_index":1051,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable.directive.ts:5",{"_index":1050,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["enable]'},{'name",{"_index":432,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["enablecss3d",{"_index":1209,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["enabled",{"_index":89,"title":{},"body":{"injectables/AnimationService.html":{},"components/MapControlsComponent.html":{},"injectables/RaycasterService.html":{}}}],["enabledamping",{"_index":798,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["enablewebgl",{"_index":1210,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["end",{"_index":1334,"title":{},"body":{"injectables/RendererService.html":{}}}],["entire",{"_index":1747,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":1697,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":304,"title":{},"body":{"modules/AtftModule.html":{}}}],["etc",{"_index":111,"title":{},"body":{"injectables/AnimationService.html":{}}}],["event",{"_index":76,"title":{},"body":{"injectables/AnimationService.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/StatsService.html":{},"changelog.html":{},"license.html":{}}}],["event.altkey",{"_index":1432,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.key",{"_index":1433,"title":{},"body":{"injectables/StatsService.html":{}}}],["event.layery",{"_index":1173,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["event.preventdefault",{"_index":1171,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["event.touches[0].clienty",{"_index":1183,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["event.ts",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["eventemitter",{"_index":46,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["events",{"_index":1057,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{}}}],["example",{"_index":1234,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["examples",{"_index":1735,"title":{},"body":{"index.html":{}}}],["execution",{"_index":113,"title":{},"body":{"injectables/AnimationService.html":{}}}],["exploration",{"_index":1586,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":1722,"title":{},"body":{"index.html":{}}}],["export",{"_index":55,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["exported",{"_index":307,"title":{},"body":{"modules/AtftModule.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["exposition",{"_index":1619,"title":{},"body":{"changelog.html":{}}}],["express",{"_index":1823,"title":{},"body":{"license.html":{}}}],["extends",{"_index":10,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["faces",{"_index":457,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["false",{"_index":116,"title":{},"body":{"injectables/AnimationService.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"components/TextMeshComponent.html":{}}}],["far",{"_index":1004,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["favor",{"_index":1554,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":1566,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":1775,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["files",{"_index":925,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["files][1",{"_index":951,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["final",{"_index":979,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["find",{"_index":1193,"title":{},"body":{"injectables/RaycasterService.html":{},"changelog.html":{}}}],["fit",{"_index":1370,"title":{},"body":{"components/SVGLoaderComponent.html":{},"index.html":{}}}],["fit.ts",{"_index":1675,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fitness",{"_index":1828,"title":{},"body":{"license.html":{}}}],["fix",{"_index":308,"title":{},"body":{"modules/AtftModule.html":{},"miscellaneous/functions.html":{}}}],["fixcenter",{"_index":1366,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["fixcenter(group",{"_index":1715,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fixcenter(mesh",{"_index":1506,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fixing",{"_index":1623,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":869,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["fog",{"_index":1378,"title":{},"body":{"components/SceneComponent.html":{}}}],["fogcolor",{"_index":1379,"title":{},"body":{"components/SceneComponent.html":{}}}],["fogfar",{"_index":1380,"title":{},"body":{"components/SceneComponent.html":{}}}],["fognear",{"_index":1381,"title":{},"body":{"components/SceneComponent.html":{}}}],["following",{"_index":1555,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["font",{"_index":1495,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["fonturl",{"_index":1454,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["format",{"_index":1529,"title":{},"body":{"changelog.html":{}}}],["forwardref",{"_index":391,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["fov",{"_index":1005,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["frame",{"_index":107,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["framemeshcomponent",{"_index":262,"title":{"components/FrameMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["free",{"_index":1776,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":1666,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1700,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1813,"title":{},"body":{"license.html":{}}}],["general",{"_index":704,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["geometry",{"_index":469,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["getcanvas",{"_index":1242,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["getfirstintersectedgroup",{"_index":1107,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getfirstintersectedgroup(x",{"_index":1121,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getisenabled",{"_index":1149,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["getmaterial",{"_index":1447,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getmaterialcolor",{"_index":1479,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getrenderpane",{"_index":1225,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["gettext",{"_index":1481,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["getting",{"_index":1522,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":742,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["git",{"_index":1615,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":1617,"title":{},"body":{"changelog.html":{}}}],["goals",{"_index":1728,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1791,"title":{},"body":{"license.html":{}}}],["grid",{"_index":228,"title":{},"body":{"modules/AtftHelperModule.html":{},"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["gridhelpercomponent",{"_index":222,"title":{"components/GridHelperComponent.html":{}},"body":{"modules/AtftHelperModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gridmeshcomponent",{"_index":263,"title":{"components/GridMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groundcolor",{"_index":713,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["group",{"_index":1055,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/SVGLoaderComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["group.directive",{"_index":351,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["group.directive.ts",{"_index":1053,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"coverage.html":{}}}],["group.directive.ts:13",{"_index":1074,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:14",{"_index":1075,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:15",{"_index":1073,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:26",{"_index":1076,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:31",{"_index":1081,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:38",{"_index":1082,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:47",{"_index":1080,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:51",{"_index":1079,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:55",{"_index":1078,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.directive.ts:59",{"_index":1077,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["group.name",{"_index":1168,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["group]'},{'name",{"_index":433,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["groups",{"_index":1103,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["halfx",{"_index":668,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["halfy",{"_index":671,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["having",{"_index":1610,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":441,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["heightsegments",{"_index":442,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["helper",{"_index":394,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper'},{'name",{"_index":415,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["helper.component",{"_index":226,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper.component.ts",{"_index":386,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"coverage.html":{}}}],["helper.component.ts:13",{"_index":400,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["helper.component.ts:14",{"_index":683,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.component.ts:22",{"_index":401,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["helper.component.ts:23",{"_index":684,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["helper.module",{"_index":321,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helper.module.ts",{"_index":224,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["helper/atft",{"_index":320,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["helpers",{"_index":1733,"title":{},"body":{"index.html":{}}}],["hemisphere",{"_index":240,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["hemispherelightcomponent",{"_index":234,"title":{"components/HemisphereLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hereby",{"_index":1790,"title":{},"body":{"license.html":{}}}],["hierarchical",{"_index":1574,"title":{},"body":{"changelog.html":{}}}],["hightsegments",{"_index":1409,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["holders",{"_index":1833,"title":{},"body":{"license.html":{}}}],["horizontally",{"_index":1749,"title":{},"body":{"index.html":{}}}],["host",{"_index":558,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"index.html":{}}}],["hostlistener",{"_index":1244,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlistener('window:resize",{"_index":1256,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["hostlisteners",{"_index":1211,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["html",{"_index":410,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["htmlcanvaselement",{"_index":1254,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["https://en.wikipedia.org/wiki/wavefront_.obj_file",{"_index":952,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["https://github.com/makimenko/angular",{"_index":1757,"title":{},"body":{"index.html":{}}}],["https://github.com/spite/three.meshline/issues/51#issuecomment",{"_index":916,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["https://www.npmjs.com/package/atft",{"_index":1580,"title":{},"body":{"changelog.html":{}}}],["i.dispatchevent({type",{"_index":1180,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["i.e",{"_index":1237,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["icon",{"_index":206,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["ideas",{"_index":1779,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":1638,"title":{},"body":{"coverage.html":{}}}],["ignorepaused",{"_index":1126,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["implement",{"_index":1730,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":1231,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["implements",{"_index":482,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/EmptyComponent.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{}}}],["implied",{"_index":1824,"title":{},"body":{"license.html":{}}}],["import",{"_index":50,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["imports",{"_index":160,"title":{},"body":{"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"index.html":{}}}],["included",{"_index":966,"title":{},"body":{"components/ObjLoaderComponent.html":{},"license.html":{}}}],["including",{"_index":1540,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":1604,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["index.ts",{"_index":309,"title":{},"body":{"modules/AtftModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["information",{"_index":1768,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":736,"title":{},"body":{"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["init",{"_index":1272,"title":{},"body":{"injectables/RendererService.html":{}}}],["initial",{"_index":1634,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":1275,"title":{},"body":{"injectables/RendererService.html":{}}}],["initialize(canvas",{"_index":1283,"title":{},"body":{"injectables/RendererService.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{}},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{},"overview.html":{}}}],["injected",{"_index":1573,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":51,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["inputs",{"_index":20,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["install",{"_index":1579,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["instanceof",{"_index":572,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["instead",{"_index":994,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["integrate",{"_index":1583,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":1734,"title":{},"body":{"index.html":{}}}],["intensity",{"_index":628,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["interactivity",{"_index":1565,"title":{},"body":{"changelog.html":{}}}],["intersection[0",{"_index":1201,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["intersection[0].distance",{"_index":1200,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["intersections",{"_index":1569,"title":{},"body":{"changelog.html":{}}}],["isenabled",{"_index":1115,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isolated",{"_index":1585,"title":{},"body":{"changelog.html":{}}}],["isolation",{"_index":1724,"title":{},"body":{"index.html":{}}}],["isready",{"_index":1108,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["isready(ignorepaused",{"_index":1123,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["issue",{"_index":1624,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":1708,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":114,"title":{},"body":{"injectables/AnimationService.html":{}}}],["iterationsx",{"_index":689,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["iterationsy",{"_index":690,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["ivy",{"_index":1545,"title":{},"body":{"changelog.html":{}}}],["jetbrains",{"_index":1774,"title":{},"body":{"index.html":{}}}],["join",{"_index":1777,"title":{},"body":{"index.html":{}}}],["js",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":1198,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["keep",{"_index":1531,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1822,"title":{},"body":{"license.html":{}}}],["label",{"_index":21,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["last",{"_index":991,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"changelog.html":{}}}],["later",{"_index":1016,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["layer",{"_index":419,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["layer/layer",{"_index":199,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["layeractorcomponent",{"_index":188,"title":{"components/LayerActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lazy",{"_index":1484,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["lead",{"_index":1556,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":1632,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":135,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["length",{"_index":448,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["leverage",{"_index":1718,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1837,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1834,"title":{},"body":{"license.html":{}}}],["library",{"_index":1525,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["license",{"_index":1782,"title":{"license.html":{}},"body":{"license.html":{}}}],["light",{"_index":626,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"changelog.html":{}}}],["light'},{'name",{"_index":417,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["light.castshadow",{"_index":644,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component",{"_index":239,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.component.ts",{"_index":625,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{},"coverage.html":{}}}],["light.component.ts:14",{"_index":631,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:15",{"_index":632,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:16",{"_index":715,"title":{},"body":{"components/HemisphereLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:17",{"_index":633,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.component.ts:18",{"_index":630,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.component.ts:25",{"_index":717,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["light.component.ts:26",{"_index":1030,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.component.ts:27",{"_index":634,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.module",{"_index":323,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["light.module.ts",{"_index":237,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["light.shadow.bias",{"_index":657,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.bottom",{"_index":648,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.far",{"_index":653,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.left",{"_index":649,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.near",{"_index":651,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["light.shadow.camera.right",{"_index":650,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.camera.top",{"_index":647,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.height",{"_index":1035,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.mapsize.set(1024",{"_index":655,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light.shadow.mapsize.width",{"_index":1034,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.shadow.radius",{"_index":1036,"title":{},"body":{"components/PointLightComponent.html":{}}}],["light.target",{"_index":641,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["light/atft",{"_index":322,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["lights",{"_index":1732,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":1801,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":773,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["limited",{"_index":1825,"title":{},"body":{"license.html":{}}}],["line",{"_index":170,"title":{},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["lineconnectorcomponent",{"_index":165,"title":{"components/LineConnectorComponent.html":{}},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["linedistance.array[this.edges.geometry.attributes.linedistance.count",{"_index":588,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["linematerial",{"_index":871,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["linewidth",{"_index":779,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["linewidth=1",{"_index":771,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["list",{"_index":568,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["listened",{"_index":1239,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["load",{"_index":923,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loaded",{"_index":940,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["loader",{"_index":927,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["loader'},{'name",{"_index":423,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["loader.component",{"_index":252,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader.component.ts",{"_index":920,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:14",{"_index":984,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:20",{"_index":1358,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:21",{"_index":944,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":945,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:23",{"_index":985,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["loader.component.ts:24",{"_index":1363,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:25",{"_index":934,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:29",{"_index":1360,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:32",{"_index":941,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:33",{"_index":1355,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:36",{"_index":1353,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:39",{"_index":1356,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:40",{"_index":933,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:42",{"_index":1357,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:45",{"_index":1352,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:47",{"_index":1351,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.component.ts:49",{"_index":942,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["loader.component.ts:56",{"_index":1359,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["loader.load(this.fonturl",{"_index":1494,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["loader.module",{"_index":325,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loader.module.ts",{"_index":250,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["loader/atft",{"_index":324,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["loadlazyobject",{"_index":930,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["locally",{"_index":1763,"title":{},"body":{"index.html":{}}}],["logic",{"_index":80,"title":{},"body":{"injectables/AnimationService.html":{}}}],["loop",{"_index":102,"title":{},"body":{"injectables/AnimationService.html":{},"components/MapControlsComponent.html":{},"injectables/RaycasterService.html":{}}}],["main",{"_index":126,"title":{},"body":{"injectables/AnimationService.html":{}}}],["makimenko",{"_index":1622,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["map",{"_index":182,"title":{},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mapcontrols",{"_index":825,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["mapcontrolscomponent",{"_index":176,"title":{"components/MapControlsComponent.html":{}},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["margin",{"_index":1753,"title":{},"body":{"index.html":{}}}],["marked",{"_index":1054,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["match",{"_index":1614,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":65,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["material",{"_index":476,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["material.opacity",{"_index":591,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["material.transparent",{"_index":590,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["material.ts",{"_index":1668,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["materialcolor",{"_index":758,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["materialcolor(materialcolor",{"_index":1485,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["materialcreator",{"_index":975,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialcreator.preload",{"_index":976,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["materialname",{"_index":1710,"title":{},"body":{"miscellaneous/functions.html":{}}}],["math.pi",{"_index":540,"title":{},"body":{"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/MapControlsComponent.html":{},"pipes/Rad2DegPipe.html":{},"components/TorusMeshComponent.html":{}}}],["max",{"_index":1717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maxdistance",{"_index":799,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxpolarangle",{"_index":800,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["maxx",{"_index":1348,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["maxy",{"_index":1349,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["meant",{"_index":1631,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1827,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1804,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":169,"title":{},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh'},{'name",{"_index":416,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["mesh.castshadow",{"_index":1502,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component",{"_index":270,"title":{},"body":{"modules/AtftMeshModule.html":{},"modules/AtftTextModule.html":{}}}],["mesh.component.ts",{"_index":437,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["mesh.component.ts:14",{"_index":1412,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:15",{"_index":488,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:16",{"_index":1411,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:17",{"_index":487,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:18",{"_index":463,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:19",{"_index":535,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:20",{"_index":1477,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:21",{"_index":539,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{}}}],["mesh.component.ts:22",{"_index":1469,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:23",{"_index":536,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:24",{"_index":460,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:25",{"_index":537,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["mesh.component.ts:26",{"_index":489,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:27",{"_index":542,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["mesh.component.ts:29",{"_index":534,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:30",{"_index":447,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:31",{"_index":1478,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:32",{"_index":1512,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:33",{"_index":1472,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:35",{"_index":695,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mesh.component.ts:36",{"_index":465,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:37",{"_index":1482,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:39",{"_index":543,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["mesh.component.ts:41",{"_index":1515,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["mesh.component.ts:42",{"_index":462,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:43",{"_index":1471,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:45",{"_index":1026,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["mesh.component.ts:46",{"_index":1468,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:48",{"_index":445,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:49",{"_index":1463,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:51",{"_index":491,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["mesh.component.ts:52",{"_index":1457,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:55",{"_index":1461,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:57",{"_index":466,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["mesh.component.ts:58",{"_index":1460,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:61",{"_index":1458,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:64",{"_index":1459,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:67",{"_index":1466,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:70",{"_index":1462,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:73",{"_index":1470,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:76",{"_index":1464,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:79",{"_index":1456,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:88",{"_index":1473,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.component.ts:92",{"_index":1474,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh.module",{"_index":327,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesh.module.ts",{"_index":268,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["mesh.receiveshadow",{"_index":1503,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["mesh/atft",{"_index":326,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["mesheschanged",{"_index":1591,"title":{},"body":{"changelog.html":{}}}],["meshline",{"_index":889,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["meshlineconnectorcomponent",{"_index":166,"title":{"components/MeshLineConnectorComponent.html":{}},"body":{"modules/AtftConnectorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["meshlinematerial",{"_index":891,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["metadata",{"_index":388,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["methods",{"_index":15,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["middle",{"_index":707,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["mihail",{"_index":1787,"title":{},"body":{"license.html":{}}}],["mindistance",{"_index":801,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["miscellaneous",{"_index":1696,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":1783,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1769,"title":{},"body":{"index.html":{}}}],["model",{"_index":948,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["modify",{"_index":1803,"title":{},"body":{"license.html":{}}}],["module",{"_index":131,"title":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":133,"title":{"modules.html":{}},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1767,"title":{},"body":{"index.html":{}}}],["mouse",{"_index":1240,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["mousedown",{"_index":1070,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["mouseenter",{"_index":1071,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mouseexit",{"_index":1072,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"miscellaneous/enumerations.html":{}}}],["mousevector",{"_index":1189,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["move",{"_index":766,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["move/down",{"_index":1570,"title":{},"body":{"changelog.html":{}}}],["mtlloader",{"_index":928,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["multiple",{"_index":1312,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["mywrapper",{"_index":505,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["name",{"_index":98,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["near",{"_index":1006,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["nearest",{"_index":1194,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["nearestgroup",{"_index":1197,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["nearestintersection",{"_index":1195,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["nearestintersection.distance",{"_index":1199,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["necessary",{"_index":963,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["new",{"_index":57,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["newobject3dinstance",{"_index":397,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["newtexturepath",{"_index":947,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["ng",{"_index":1759,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":485,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"directives/StatsAutoShowDirective.html":{}}}],["ngmodule",{"_index":147,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{}}}],["ngonchanges",{"_index":793,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["ngonchanges(changes",{"_index":820,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["ngondestroy",{"_index":1064,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{}}}],["none",{"_index":1269,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["noninfringement",{"_index":1831,"title":{},"body":{"license.html":{}}}],["notable",{"_index":1526,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":81,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/LineConnectorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["notice",{"_index":1817,"title":{},"body":{"license.html":{}}}],["now",{"_index":1558,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":968,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["null",{"_index":1177,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/StatsService.html":{}}}],["number",{"_index":30,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/GridHelperComponent.html":{},"components/LayerActorComponent.html":{},"components/MapControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["obj",{"_index":253,"title":{},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["obj.addeventlistener(raycasterevent.mousedown",{"_index":1094,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseenter",{"_index":1092,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.addeventlistener(raycasterevent.mouseexit",{"_index":1093,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mousedown",{"_index":1097,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseenter",{"_index":1095,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["obj.removeeventlistener(raycasterevent.mouseexit",{"_index":1096,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["object",{"_index":251,"title":{},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["object.module",{"_index":288,"title":{},"body":{"modules/AtftModule.html":{}}}],["object.module.ts",{"_index":317,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["object.traverse(child",{"_index":570,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["object/abstract",{"_index":561,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["object/atft",{"_index":287,"title":{},"body":{"modules/AtftModule.html":{}}}],["object/helper",{"_index":745,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["object/helper/empty.component",{"_index":54,"title":{},"body":{"classes/AbstractServerActor.html":{}}}],["object/scene.component",{"_index":1302,"title":{},"body":{"injectables/RendererService.html":{}}}],["objectloader",{"_index":1737,"title":{},"body":{"index.html":{}}}],["objectloadercomponent",{"_index":247,"title":{"components/ObjectLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objects",{"_index":1568,"title":{},"body":{"changelog.html":{}}}],["objloader",{"_index":943,"title":{},"body":{"components/ObjLoaderComponent.html":{},"index.html":{}}}],["objloadercomponent",{"_index":246,"title":{"components/ObjLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["objloadercomponent's",{"_index":1552,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1794,"title":{},"body":{"license.html":{}}}],["official",{"_index":1766,"title":{},"body":{"index.html":{}}}],["offset",{"_index":691,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["once",{"_index":86,"title":{},"body":{"injectables/AnimationService.html":{}}}],["onchanges",{"_index":789,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["onclick",{"_index":17,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ondeselected",{"_index":18,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ondestroy",{"_index":1063,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"injectables/StatsService.html":{}}}],["onmousedown",{"_index":1065,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["onmousedown(event",{"_index":1129,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmouseenter",{"_index":1066,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["onmouseexit",{"_index":1067,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["onmousemove",{"_index":1109,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onmousemove(event",{"_index":1131,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["onresize(event",{"_index":1257,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["onselected",{"_index":19,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["ontouchstart",{"_index":1110,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["ontouchstart(event",{"_index":1133,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["opacity",{"_index":875,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["openended",{"_index":528,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["opengl",{"_index":774,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["optimization",{"_index":83,"title":{},"body":{"injectables/AnimationService.html":{}}}],["optimizations",{"_index":1571,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":99,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1745,"title":{},"body":{"index.html":{}}}],["orbit",{"_index":180,"title":{},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["orbitcontrols",{"_index":826,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"index.html":{}}}],["orbitcontrolscomponent",{"_index":177,"title":{"components/OrbitControlsComponent.html":{}},"body":{"modules/AtftControlModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["others",{"_index":838,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["otherwise",{"_index":1842,"title":{},"body":{"license.html":{}}}],["out",{"_index":144,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1268,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["output",{"_index":52,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{}}}],["outputs",{"_index":24,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["overridematerialcolor",{"_index":1350,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overridematerialcolor(value",{"_index":1372,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["overview",{"_index":1847,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":969,"title":{"dependencies.html":{}},"body":{"components/ObjLoaderComponent.html":{}}}],["pane",{"_index":1227,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["panspeed",{"_index":802,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["parallel",{"_index":450,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["param",{"_index":621,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["parameters",{"_index":97,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":399,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{}}}],["particular",{"_index":1829,"title":{},"body":{"license.html":{}}}],["patch",{"_index":1602,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":935,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["paths",{"_index":1374,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["pause",{"_index":1111,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["paused",{"_index":1104,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["performance",{"_index":82,"title":{},"body":{"injectables/AnimationService.html":{},"changelog.html":{}}}],["permission",{"_index":1789,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1811,"title":{},"body":{"license.html":{}}}],["person",{"_index":1793,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1812,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":158,"title":{},"body":{"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["perspectivecameracomponent",{"_index":153,"title":{"components/PerspectiveCameraComponent.html":{}},"body":{"modules/AtftCameraModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pipe",{"_index":610,"title":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["pipe.module",{"_index":293,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipe.module.ts",{"_index":337,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["pipe/atft",{"_index":292,"title":{},"body":{"modules/AtftModule.html":{}}}],["pipes",{"_index":611,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":620,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["pixels",{"_index":1265,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["plane",{"_index":272,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["planemeshcomponent",{"_index":264,"title":{"components/PlaneMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["platforms",{"_index":778,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["player",{"_index":507,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["point",{"_index":238,"title":{},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["pointlightcomponent",{"_index":235,"title":{"components/PointLightComponent.html":{}},"body":{"modules/AtftLightModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["portions",{"_index":1820,"title":{},"body":{"license.html":{}}}],["position",{"_index":110,"title":{},"body":{"injectables/AnimationService.html":{}}}],["preloading",{"_index":957,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep",{"_index":959,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preloadingstep.then",{"_index":980,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["preparation",{"_index":1575,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":88,"title":{},"body":{"injectables/AnimationService.html":{},"directives/DashedDrawDirective.html":{},"components/GridMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{}}}],["profile",{"_index":776,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["project",{"_index":1527,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projects/.../applied",{"_index":1701,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../calculate",{"_index":1702,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../fix",{"_index":1703,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../raycaster",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../scale",{"_index":1704,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/actor/data",{"_index":6,"title":{},"body":{"classes/AbstractServerActor.html":{},"modules/AtftDataCenterActorModule.html":{},"components/LayerActorComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts",{"_index":70,"title":{},"body":{"injectables/AnimationService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:16",{"_index":105,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:18",{"_index":96,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:29",{"_index":101,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:39",{"_index":103,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/animation.service.ts:45",{"_index":100,"title":{},"body":{"injectables/AnimationService.html":{}}}],["projects/atft/src/lib/animation/atft",{"_index":145,"title":{},"body":{"modules/AtftAnimationModule.html":{}}}],["projects/atft/src/lib/atft.module.ts",{"_index":284,"title":{},"body":{"modules/AtftModule.html":{}}}],["projects/atft/src/lib/camera/atft",{"_index":154,"title":{},"body":{"modules/AtftCameraModule.html":{}}}],["projects/atft/src/lib/camera/perspective",{"_index":998,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/atft",{"_index":178,"title":{},"body":{"modules/AtftControlModule.html":{}}}],["projects/atft/src/lib/control/map",{"_index":786,"title":{},"body":{"components/MapControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/control/orbit",{"_index":995,"title":{},"body":{"components/OrbitControlsComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/effect/atft",{"_index":213,"title":{},"body":{"modules/AtftEffectModule.html":{}}}],["projects/atft/src/lib/effect/dashed",{"_index":553,"title":{},"body":{"directives/DashedDrawDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/atft",{"_index":316,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["projects/atft/src/lib/object/connector/atft",{"_index":167,"title":{},"body":{"modules/AtftConnectorModule.html":{}}}],["projects/atft/src/lib/object/connector/line",{"_index":752,"title":{},"body":{"components/LineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/connector/mesh",{"_index":870,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/atft",{"_index":223,"title":{},"body":{"modules/AtftHelperModule.html":{}}}],["projects/atft/src/lib/object/helper/axes",{"_index":385,"title":{},"body":{"components/AxesHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts",{"_index":659,"title":{},"body":{"components/EmptyComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:11",{"_index":661,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/empty.component.ts:20",{"_index":662,"title":{},"body":{"components/EmptyComponent.html":{}}}],["projects/atft/src/lib/object/helper/grid",{"_index":681,"title":{},"body":{"components/GridHelperComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/atft",{"_index":236,"title":{},"body":{"modules/AtftLightModule.html":{}}}],["projects/atft/src/lib/object/light/directional",{"_index":624,"title":{},"body":{"components/DirectionalLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/hemisphere",{"_index":712,"title":{},"body":{"components/HemisphereLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/light/point",{"_index":1028,"title":{},"body":{"components/PointLightComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/atft",{"_index":249,"title":{},"body":{"modules/AtftLoaderModule.html":{}}}],["projects/atft/src/lib/object/loader/obj",{"_index":919,"title":{},"body":{"components/ObjLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/object",{"_index":983,"title":{},"body":{"components/ObjectLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/loader/svg",{"_index":1345,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/atft",{"_index":267,"title":{},"body":{"modules/AtftMeshModule.html":{}}}],["projects/atft/src/lib/object/mesh/box",{"_index":436,"title":{},"body":{"components/BoxMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/css3d",{"_index":480,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/cylinder",{"_index":527,"title":{},"body":{"components/CylinderMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/frame",{"_index":663,"title":{},"body":{"components/FrameMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/grid",{"_index":688,"title":{},"body":{"components/GridMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/plane",{"_index":1025,"title":{},"body":{"components/PlaneMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/sphere",{"_index":1408,"title":{},"body":{"components/SphereMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/mesh/torus",{"_index":1508,"title":{},"body":{"components/TorusMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts",{"_index":1376,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:15",{"_index":1383,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:16",{"_index":1384,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:17",{"_index":1385,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:18",{"_index":1386,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:19",{"_index":1382,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/scene.component.ts:30",{"_index":1387,"title":{},"body":{"components/SceneComponent.html":{}}}],["projects/atft/src/lib/object/text/atft",{"_index":379,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["projects/atft/src/lib/object/text/text",{"_index":1443,"title":{},"body":{"components/TextMeshComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/atft",{"_index":336,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts",{"_index":612,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/deg2rad.pipe.ts:12",{"_index":616,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts",{"_index":1037,"title":{},"body":{"pipes/Rad2DegPipe.html":{},"coverage.html":{}}}],["projects/atft/src/lib/pipe/rad2deg.pipe.ts:12",{"_index":1040,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["projects/atft/src/lib/raycaster/atft",{"_index":348,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["projects/atft/src/lib/raycaster/raycaster",{"_index":1041,"title":{},"body":{"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts",{"_index":1102,"title":{},"body":{"injectables/RaycasterService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:106",{"_index":1135,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:11",{"_index":1147,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:118",{"_index":1125,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:12",{"_index":1148,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:127",{"_index":1122,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:13",{"_index":1143,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:14",{"_index":1142,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:15",{"_index":1145,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:16",{"_index":1116,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:26",{"_index":1128,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:31",{"_index":1140,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:37",{"_index":1141,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:44",{"_index":1120,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:48",{"_index":1119,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:52",{"_index":1136,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:56",{"_index":1137,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:61",{"_index":1150,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:65",{"_index":1139,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:70",{"_index":1118,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:75",{"_index":1132,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/raycaster/raycaster.service.ts:94",{"_index":1130,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["projects/atft/src/lib/renderer/atft",{"_index":360,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["projects/atft/src/lib/renderer/renderer",{"_index":1202,"title":{},"body":{"components/RendererCanvasComponent.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts",{"_index":1270,"title":{},"body":{"injectables/RendererService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:10",{"_index":1298,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:115",{"_index":1282,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:12",{"_index":1299,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:123",{"_index":1293,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:13",{"_index":1294,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:14",{"_index":1297,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:15",{"_index":1296,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:16",{"_index":1301,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:18",{"_index":1295,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:20",{"_index":1280,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:29",{"_index":1285,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:34",{"_index":1291,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:38",{"_index":1289,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:43",{"_index":1286,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:56",{"_index":1284,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/renderer/renderer.service.ts:97",{"_index":1288,"title":{},"body":{"injectables/RendererService.html":{}}}],["projects/atft/src/lib/stats/stats",{"_index":1416,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.module.ts",{"_index":370,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts",{"_index":1421,"title":{},"body":{"injectables/StatsService.html":{},"coverage.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:18",{"_index":1429,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:25",{"_index":1428,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:29",{"_index":1425,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:36",{"_index":1427,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:44",{"_index":1426,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/stats/stats.service.ts:8",{"_index":1424,"title":{},"body":{"injectables/StatsService.html":{}}}],["projects/atft/src/lib/util/applied",{"_index":1664,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/calculate",{"_index":1669,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/fix",{"_index":1672,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/atft/src/lib/util/scale",{"_index":1674,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["promise",{"_index":1475,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["promise((resolve",{"_index":960,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["promise(resolve",{"_index":1492,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["properties",{"_index":13,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["property",{"_index":1232,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["props",{"_index":646,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{}}}],["protected",{"_index":396,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["provide",{"_index":389,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["provided",{"_index":1723,"title":{},"body":{"index.html":{},"license.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"overview.html":{}}}],["public",{"_index":16,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["publish",{"_index":1805,"title":{},"body":{"license.html":{}}}],["published",{"_index":1630,"title":{},"body":{"changelog.html":{}}}],["pull",{"_index":1780,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1830,"title":{},"body":{"license.html":{}}}],["px",{"_index":499,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["rad2deg",{"_index":1038,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["rad2deg.pipe",{"_index":339,"title":{},"body":{"modules/AtftPipeModule.html":{}}}],["rad2degpipe",{"_index":335,"title":{"pipes/Rad2DegPipe.html":{}},"body":{"modules/AtftPipeModule.html":{},"pipes/Rad2DegPipe.html":{},"coverage.html":{},"overview.html":{}}}],["radialsegments",{"_index":529,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radians",{"_index":619,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["radius",{"_index":1410,"title":{},"body":{"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["radiusbottom",{"_index":530,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["radiustop",{"_index":531,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["raycaster",{"_index":350,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["raycaster.module",{"_index":299,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster.module.ts",{"_index":349,"title":{},"body":{"modules/AtftRaycasterModule.html":{}}}],["raycaster.service",{"_index":352,"title":{},"body":{"modules/AtftRaycasterModule.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["raycaster/atft",{"_index":298,"title":{},"body":{"modules/AtftModule.html":{}}}],["raycaster/raycaster.service",{"_index":828,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["raycastercameradirective",{"_index":344,"title":{"directives/RaycasterCameraDirective.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterenabledirective",{"_index":345,"title":{"directives/RaycasterEnableDirective.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterEnableDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterevent",{"_index":1083,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"miscellaneous/enumerations.html":{}}}],["raycasterevent.mouseenter",{"_index":1178,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["raycasterevent.mouseexit",{"_index":1176,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["raycastergroupdirective",{"_index":346,"title":{"directives/RaycasterGroupDirective.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["raycasterservice",{"_index":347,"title":{"injectables/RaycasterService.html":{}},"body":{"modules/AtftRaycasterModule.html":{},"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["readonly",{"_index":87,"title":{},"body":{"injectables/AnimationService.html":{}}}],["reasons",{"_index":1600,"title":{},"body":{"changelog.html":{}}}],["receiveshadow",{"_index":1455,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["rectangular",{"_index":456,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["regardless",{"_index":781,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["reject",{"_index":961,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["relative",{"_index":936,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["releases",{"_index":1618,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":970,"title":{},"body":{"components/ObjLoaderComponent.html":{},"injectables/StatsService.html":{}}}],["render",{"_index":26,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/LayerActorComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{}}}],["rendered",{"_index":1229,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["renderer",{"_index":127,"title":{},"body":{"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["renderer.module",{"_index":295,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer.module.ts",{"_index":361,"title":{},"body":{"modules/AtftRendererModule.html":{}}}],["renderer.service",{"_index":363,"title":{},"body":{"modules/AtftRendererModule.html":{},"components/RendererCanvasComponent.html":{}}}],["renderer/atft",{"_index":294,"title":{},"body":{"modules/AtftModule.html":{}}}],["renderer/renderer.service",{"_index":117,"title":{},"body":{"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["renderercanvascomponent",{"_index":359,"title":{"components/RendererCanvasComponent.html":{}},"body":{"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["renderers",{"_index":1313,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["rendererservice",{"_index":95,"title":{"injectables/RendererService.html":{}},"body":{"injectables/AnimationService.html":{},"modules/AtftRendererModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["rendererservice.setscene(this",{"_index":1389,"title":{},"body":{"components/SceneComponent.html":{}}}],["rendering",{"_index":1241,"title":{},"body":{"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["renderpane",{"_index":1213,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["repo",{"_index":1729,"title":{},"body":{"index.html":{}}}],["request",{"_index":1576,"title":{},"body":{"changelog.html":{}}}],["requestanimationframe",{"_index":84,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requestanimationframe(this.animationstep",{"_index":121,"title":{},"body":{"injectables/AnimationService.html":{}}}],["requests",{"_index":1781,"title":{},"body":{"index.html":{}}}],["required",{"_index":850,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["reset",{"_index":143,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"overview.html":{}}}],["resettling",{"_index":1264,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resize",{"_index":1276,"title":{},"body":{"injectables/RendererService.html":{}}}],["resize(canvas",{"_index":1287,"title":{},"body":{"injectables/RendererService.html":{}}}],["resizing",{"_index":1260,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["resolve",{"_index":964,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["resolve(mesh",{"_index":1507,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["resolve(model",{"_index":982,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["resourcepath",{"_index":931,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["resources",{"_index":937,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["responsible",{"_index":1572,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":1235,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["restriction",{"_index":1800,"title":{},"body":{"license.html":{}}}],["result",{"_index":64,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":66,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["resume",{"_index":1112,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["return",{"_index":408,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["returns",{"_index":37,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1802,"title":{},"body":{"license.html":{}}}],["rotatespeed",{"_index":803,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["rotation",{"_index":852,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["run",{"_index":1760,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":1434,"title":{},"body":{"injectables/StatsService.html":{}}}],["same",{"_index":1597,"title":{},"body":{"changelog.html":{}}}],["save",{"_index":1743,"title":{},"body":{"index.html":{}}}],["scaletofit",{"_index":1368,"title":{},"body":{"components/SVGLoaderComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["scaletofit(group",{"_index":1716,"title":{},"body":{"miscellaneous/functions.html":{}}}],["scene",{"_index":1228,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{},"changelog.html":{},"index.html":{}}}],["scene'},{'name",{"_index":426,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["scene.add(this.edges",{"_index":598,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["scene.background",{"_index":1390,"title":{},"body":{"components/SceneComponent.html":{}}}],["scene.component",{"_index":330,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["scene.fog",{"_index":1393,"title":{},"body":{"components/SceneComponent.html":{}}}],["scenecomponent",{"_index":314,"title":{"components/SceneComponent.html":{}},"body":{"modules/AtftObjectModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["scenes",{"_index":1588,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":1748,"title":{},"body":{"index.html":{}}}],["screenspacepanning",{"_index":804,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["see",{"_index":1599,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seems",{"_index":990,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["segmented",{"_index":455,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["selected",{"_index":27,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["selector",{"_index":392,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["sell",{"_index":1809,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":1533,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":1606,"title":{},"body":{"changelog.html":{}}}],["separating",{"_index":1626,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":8,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["server/server",{"_index":202,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["server/workstation",{"_index":207,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{}}}],["serverbarrelactorcomponent",{"_index":189,"title":{"components/ServerBarrelActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servercompactactorcomponent",{"_index":190,"title":{"components/ServerCompactActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["servericonactorcomponent",{"_index":191,"title":{"components/ServerIconActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["serverstandactorcomponent",{"_index":192,"title":{"components/ServerStandActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["service",{"_index":73,"title":{},"body":{"injectables/AnimationService.html":{}}}],["set",{"_index":746,"title":{},"body":{"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{},"index.html":{}}}],["setcamera",{"_index":1113,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setcamera(camera",{"_index":1138,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["setmaterialcolor(materialcolor",{"_index":1480,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["setoverridematerialcolor(value",{"_index":1362,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["setscene",{"_index":1277,"title":{},"body":{"injectables/RendererService.html":{}}}],["setscene(scene",{"_index":1290,"title":{},"body":{"injectables/RendererService.html":{}}}],["settext(text",{"_index":1483,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["settexturepath(newtexturepath",{"_index":946,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["setupcontrols",{"_index":794,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["setwidth(width",{"_index":744,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["shadow",{"_index":1589,"title":{},"body":{"changelog.html":{}}}],["shall",{"_index":1818,"title":{},"body":{"license.html":{}}}],["shape",{"_index":675,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto",{"_index":678,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.lineto(halfx",{"_index":679,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["shape.moveto",{"_index":677,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["show",{"_index":434,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["show.directive",{"_index":374,"title":{},"body":{"modules/AtftStatsModule.html":{}}}],["show.directive.ts",{"_index":1417,"title":{},"body":{"directives/StatsAutoShowDirective.html":{},"coverage.html":{}}}],["show.directive.ts:13",{"_index":1419,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["show.directive.ts:5",{"_index":1418,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["showframe",{"_index":22,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["side",{"_index":903,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["sides",{"_index":459,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["simple",{"_index":1721,"title":{},"body":{"index.html":{}}}],["simplechanges",{"_index":821,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["single",{"_index":1259,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["size",{"_index":398,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"injectables/RendererService.html":{},"components/TextMeshComponent.html":{}}}],["size.ts",{"_index":1670,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sizex",{"_index":664,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["sizey",{"_index":665,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["skipself",{"_index":403,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["skycolor",{"_index":714,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["snyk",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1796,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["source.src",{"_index":512,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["source.type",{"_index":514,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["sphere",{"_index":273,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["spheremeshcomponent",{"_index":265,"title":{"components/SphereMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["src/app.component.html",{"_index":1744,"title":{},"body":{"index.html":{}}}],["src/app/app.component.css",{"_index":1754,"title":{},"body":{"index.html":{}}}],["src/stories",{"_index":1765,"title":{},"body":{"index.html":{}}}],["src/styles.css",{"_index":1751,"title":{},"body":{"index.html":{}}}],["stand",{"_index":204,"title":{},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["start",{"_index":91,"title":{},"body":{"injectables/AnimationService.html":{}}}],["started",{"_index":1523,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1639,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1223,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["stats",{"_index":372,"title":{},"body":{"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["stats.service",{"_index":371,"title":{},"body":{"modules/AtftStatsModule.html":{},"directives/StatsAutoShowDirective.html":{}}}],["stats/stats.module",{"_index":300,"title":{},"body":{"modules/AtftModule.html":{}}}],["stats/stats.service",{"_index":1303,"title":{},"body":{"injectables/RendererService.html":{}}}],["statsautoshowdirective",{"_index":368,"title":{"directives/StatsAutoShowDirective.html":{}},"body":{"modules/AtftStatsModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["statsservice",{"_index":369,"title":{"injectables/StatsService.html":{}},"body":{"modules/AtftStatsModule.html":{},"injectables/RendererService.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"coverage.html":{},"overview.html":{}}}],["step",{"_index":958,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["stop",{"_index":92,"title":{},"body":{"injectables/AnimationService.html":{}}}],["stories",{"_index":1578,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook",{"_index":1544,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["storybook.js",{"_index":1584,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["strange",{"_index":1258,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{},"components/ObjLoaderComponent.html":{},"injectables/RendererService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/functions.html":{}}}],["styles",{"_index":785,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["styleurls",{"_index":791,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["subject",{"_index":1814,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1807,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1778,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":106,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{}}}],["subscribed",{"_index":128,"title":{},"body":{"injectables/AnimationService.html":{}}}],["subscribeevents",{"_index":1068,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["substantial",{"_index":1819,"title":{},"body":{"license.html":{}}}],["super(rendererservice",{"_index":406,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["super.ngafterviewinit",{"_index":523,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["super.ngonchanges(changes",{"_index":830,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["support",{"_index":1549,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["supported",{"_index":1773,"title":{},"body":{"index.html":{}}}],["svg",{"_index":254,"title":{},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"modules.html":{}}}],["svgloader",{"_index":1361,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["svgloadercomponent",{"_index":248,"title":{"components/SVGLoaderComponent.html":{}},"body":{"modules/AtftLoaderModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["svgname",{"_index":23,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["switch",{"_index":1592,"title":{},"body":{"changelog.html":{}}}],["t",{"_index":673,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["table",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1607,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1616,"title":{},"body":{"changelog.html":{}}}],["target",{"_index":629,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["template",{"_index":395,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"index.html":{}}}],["templateurl",{"_index":1206,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["test",{"_index":1739,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1761,"title":{},"body":{"index.html":{}}}],["text",{"_index":381,"title":{},"body":{"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["text(text",{"_index":1488,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["text.module",{"_index":329,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["text.module.ts",{"_index":380,"title":{},"body":{"modules/AtftTextModule.html":{}}}],["text/atft",{"_index":328,"title":{},"body":{"modules/AtftObjectModule.html":{}}}],["textmeshcomponent",{"_index":378,"title":{"components/TextMeshComponent.html":{}},"body":{"modules/AtftTextModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["texture",{"_index":993,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["texturepath",{"_index":932,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{}}}],["texturepath(newtexturepath",{"_index":955,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["textures",{"_index":938,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{}}}],["thetalength",{"_index":532,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thetastart",{"_index":533,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["thickness",{"_index":666,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this._materialcolor",{"_index":1487,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._overridematerialcolor",{"_index":1371,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["this._text",{"_index":1489,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this._width",{"_index":748,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.animate",{"_index":602,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.animate.bind(this",{"_index":603,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.animate.emit",{"_index":124,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animate.observers.length",{"_index":122,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animated",{"_index":897,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animation.animate.subscribe(this.animate",{"_index":604,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animation.animate.unsubscribe",{"_index":609,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animation.start",{"_index":605,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.animationincrement",{"_index":914,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animationservice.animate.subscribe",{"_index":865,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationservice.animate.subscribe(this.animate",{"_index":912,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.animationservice.start",{"_index":867,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.animationstep",{"_index":118,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.animationstep.bind(this",{"_index":119,"title":{},"body":{"injectables/AnimationService.html":{}}}],["this.applyshadowprops(mesh",{"_index":479,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.aspect",{"_index":1343,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.autorotate",{"_index":845,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.autorotatespeed",{"_index":847,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.bevelenabled",{"_index":1498,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.beveloffset",{"_index":1501,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelsize",{"_index":1500,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.bevelthickness",{"_index":1499,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.calculateaspectratio(canvas",{"_index":1344,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera",{"_index":1017,"title":{},"body":{"components/PerspectiveCameraComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.aspect",{"_index":1023,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.camera.camera",{"_index":1184,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["this.camera.updateaspectratio(this.aspect",{"_index":1305,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.camera.updateprojectionmatrix",{"_index":1024,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.canvasref",{"_index":1253,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.canvasref.nativeelement",{"_index":1255,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.castshadow",{"_index":643,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.centered",{"_index":1505,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.childcameras.first.camera",{"_index":839,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.color",{"_index":59,"title":{},"body":{"classes/AbstractServerActor.html":{},"components/LayerActorComponent.html":{}}}],["this.controls",{"_index":829,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.addeventlistener('change",{"_index":866,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotate",{"_index":844,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.autorotatespeed",{"_index":846,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.dampingfactor",{"_index":853,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.enabledamping",{"_index":848,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxdistance",{"_index":859,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.maxpolarangle",{"_index":861,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.mindistance",{"_index":857,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.panspeed",{"_index":842,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.rotatespeed",{"_index":832,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.controls.screenspacepanning",{"_index":855,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.update",{"_index":863,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.controls.zoomspeed",{"_index":835,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.create",{"_index":1439,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.css3drenderer",{"_index":1327,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.domelement.style.position",{"_index":1329,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.domelement.style.top",{"_index":1331,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.domelement.style.zindex",{"_index":1332,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.render(this.scene.getobject",{"_index":1309,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.setsize(width",{"_index":1342,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.css3drenderer.setsize(window.innerwidth",{"_index":1328,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.curvesegments",{"_index":1497,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.dampingfactor",{"_index":854,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.depth",{"_index":472,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthsegments",{"_index":475,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["this.depthtest",{"_index":902,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.depthwrite",{"_index":901,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.disable",{"_index":1156,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.distance",{"_index":1033,"title":{},"body":{"components/PointLightComponent.html":{}}}],["this.divisions",{"_index":687,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["this.edges",{"_index":579,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.computelinedistances",{"_index":583,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.geometry.attributes",{"_index":587,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.dashsize",{"_index":585,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.material.gapsize",{"_index":586,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.scale.x",{"_index":593,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.scale.y",{"_index":595,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.edges.scale.z",{"_index":596,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.enablecss3d",{"_index":1252,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["this.enabled",{"_index":120,"title":{},"body":{"injectables/AnimationService.html":{},"injectables/RaycasterService.html":{}}}],["this.enabledamping",{"_index":849,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.enablewebgl",{"_index":1251,"title":{},"body":{"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{}}}],["this.far",{"_index":1021,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.fog",{"_index":1392,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.fogfar",{"_index":1396,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.fognear",{"_index":1395,"title":{},"body":{"components/SceneComponent.html":{}}}],["this.fov",{"_index":1019,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.geometry",{"_index":767,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.geometry.getattribute('position').array",{"_index":894,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.getfirstintersectedgroup(event.layerx",{"_index":1172,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.getfirstintersectedgroup(event.touches[0].clientx",{"_index":1182,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.getlinegeometry",{"_index":768,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.getmaterial",{"_index":477,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.groups",{"_index":1185,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.groups.length",{"_index":1186,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.groups.push(group",{"_index":1169,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.height",{"_index":471,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.heightsegments",{"_index":474,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/PlaneMeshComponent.html":{}}}],["this.hightsegments",{"_index":1415,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["this.host",{"_index":565,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["this.host.getobject",{"_index":566,"title":{},"body":{"directives/DashedDrawDirective.html":{},"directives/RaycasterGroupDirective.html":{}}}],["this.init",{"_index":1306,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.intensity",{"_index":640,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/PointLightComponent.html":{}}}],["this.isready",{"_index":1170,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.isready(true",{"_index":1179,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.iterations",{"_index":697,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsx",{"_index":709,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.iterationsy",{"_index":711,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.line",{"_index":782,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.line.geometry",{"_index":784,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["this.line.setgeometry(arr",{"_index":895,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.line.setgeometry(this.geometry",{"_index":918,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial",{"_index":896,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linematerial.uniforms.dashoffset.value",{"_index":913,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.linewidth",{"_index":900,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.listeningcontrolelement",{"_index":840,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.listeningcontrolelement.nativeelement",{"_index":841,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.loader.load(this.model",{"_index":981,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["this.loader.setmaterials(materialcreator",{"_index":977,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.material",{"_index":962,"title":{},"body":{"components/ObjLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.maxdistance",{"_index":860,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.maxpolarangle",{"_index":862,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mindistance",{"_index":858,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.mousedown.emit(this.host",{"_index":1100,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.mouseenter.emit(this.host",{"_index":1099,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.mouseexit.emit(this.host",{"_index":1098,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.mtlloader",{"_index":972,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.mtlloader.load(this.material",{"_index":974,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.near",{"_index":1020,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["this.offset",{"_index":698,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["this.onmousedown",{"_index":1088,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmousedown.bind(this",{"_index":1089,"title":{},"body":{"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{}}}],["this.onmouseenter",{"_index":1084,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseenter.bind(this",{"_index":1085,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit",{"_index":1086,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmouseexit.bind(this",{"_index":1087,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.onmousemove",{"_index":1151,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.onmousemove.bind(this",{"_index":1152,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.onresize",{"_index":1247,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.onresize.bind(this",{"_index":1248,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.ontouchstart",{"_index":1153,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.ontouchstart.bind(this",{"_index":1154,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.opacity",{"_index":899,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.openended",{"_index":550,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.panspeed",{"_index":843,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.paused",{"_index":1165,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.radialsegments",{"_index":549,"title":{},"body":{"components/CylinderMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["this.radius",{"_index":1516,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.radiusbottom",{"_index":548,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.raycaster.setfromcamera(mousevector",{"_index":1191,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.raycasterservice.addgroup(this.host",{"_index":1090,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.raycasterservice.enable",{"_index":1052,"title":{},"body":{"directives/RaycasterEnableDirective.html":{}}}],["this.raycasterservice.setcamera(this.host",{"_index":1046,"title":{},"body":{"directives/RaycasterCameraDirective.html":{}}}],["this.receiveshadow",{"_index":1504,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["this.remove",{"_index":1438,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.render",{"_index":1336,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.rendererservice.initialize(this.canvas",{"_index":1250,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.rendererservice.render",{"_index":130,"title":{},"body":{"injectables/AnimationService.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["this.rendererservice.resize(this.canvas",{"_index":1266,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["this.resolutionx",{"_index":498,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.resolutiony",{"_index":501,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.resourcepath",{"_index":956,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["this.rotatespeed",{"_index":833,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["this.scene",{"_index":1304,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.screenspacepanning",{"_index":856,"title":{},"body":{"components/MapControlsComponent.html":{}}}],["this.selected",{"_index":1174,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.selected.dispatchevent({type",{"_index":1175,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.size",{"_index":702,"title":{},"body":{"components/GridMeshComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.sizex",{"_index":669,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.sizey",{"_index":672,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.startloading",{"_index":1373,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["this.stats",{"_index":1436,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom",{"_index":1442,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.dom.remove",{"_index":1441,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.stats.update",{"_index":1437,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.statsservice.create",{"_index":1420,"title":{},"body":{"directives/StatsAutoShowDirective.html":{}}}],["this.statsservice.update",{"_index":1310,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.subscribe",{"_index":1155,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.subscribeevents",{"_index":1091,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.target",{"_index":642,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["this.thetalength",{"_index":552,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thetastart",{"_index":551,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["this.thickness",{"_index":674,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["this.toggle",{"_index":1435,"title":{},"body":{"injectables/StatsService.html":{}}}],["this.translatelabelx",{"_index":749,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["this.transparent",{"_index":898,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["this.tube",{"_index":1517,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.tubularsegments",{"_index":1518,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["this.unsubscribe",{"_index":1157,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["this.unsubscribeevents",{"_index":1101,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["this.updatechildcamerasaspectratio(canvas",{"_index":1335,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.video.addeventlistener('canplay",{"_index":525,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.appendchild(source",{"_index":519,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.autoplay",{"_index":508,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.load",{"_index":524,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.loop",{"_index":509,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.muted",{"_index":510,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.play",{"_index":526,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.style.height",{"_index":518,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.video.style.width",{"_index":516,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.videosrc",{"_index":513,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["this.webglrenderer",{"_index":1314,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.autoclear",{"_index":1325,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.render(this.scene.getobject",{"_index":1308,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setclearcolor(0x000000",{"_index":1324,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setpixelratio(window.devicepixelratio",{"_index":1317,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(canvas.clientwidth",{"_index":1318,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.setsize(width",{"_index":1341,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.autoupdate",{"_index":1321,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.enabled",{"_index":1320,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.webglrenderer.shadowmap.type",{"_index":1322,"title":{},"body":{"injectables/RendererService.html":{}}}],["this.widthsegments",{"_index":473,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["this.zoomspeed",{"_index":836,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three",{"_index":404,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.axeshelper",{"_index":402,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/GridHelperComponent.html":{}}}],["three.axeshelper(this.size",{"_index":409,"title":{},"body":{"components/AxesHelperComponent.html":{}}}],["three.boxbuffergeometry(this.width",{"_index":470,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["three.buffergeometry",{"_index":699,"title":{},"body":{"components/GridMeshComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["three.color(appliedcolor(this.background",{"_index":1391,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.cylindergeometry(this.radiustop",{"_index":547,"title":{},"body":{"components/CylinderMeshComponent.html":{}}}],["three.directionallight",{"_index":638,"title":{},"body":{"components/DirectionalLightComponent.html":{}}}],["three.doubleside",{"_index":904,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.edgesgeometry(child.geometry",{"_index":578,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.fog(appliedcolor(this.fogcolor",{"_index":1394,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.fontloader",{"_index":1493,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.gridhelper(this.size",{"_index":686,"title":{},"body":{"components/GridHelperComponent.html":{}}}],["three.group",{"_index":569,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/SVGLoaderComponent.html":{}}}],["three.hemispherelight",{"_index":718,"title":{},"body":{"components/HemisphereLightComponent.html":{}}}],["three.intersection",{"_index":1196,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["three.js",{"_index":967,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{}}}],["three.line",{"_index":763,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.line(this.geometry",{"_index":783,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linebasicmaterial",{"_index":769,"title":{},"body":{"components/LineConnectorComponent.html":{}}}],["three.linedashedmaterial({color",{"_index":581,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.linesegments(edgesgeom",{"_index":580,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.material",{"_index":589,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/TextMeshComponent.html":{},"miscellaneous/functions.html":{}}}],["three.mesh",{"_index":544,"title":{},"body":{"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["three.mesh(geometry",{"_index":478,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/FrameMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{}}}],["three.mesh(this.line.geometry",{"_index":911,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.meshbasicmaterial({color",{"_index":574,"title":{},"body":{"directives/DashedDrawDirective.html":{}}}],["three.meshline",{"_index":892,"title":{},"body":{"components/MeshLineConnectorComponent.html":{},"dependencies.html":{},"index.html":{}}}],["three.normalblending",{"_index":906,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["three.object3d",{"_index":567,"title":{},"body":{"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/LayerActorComponent.html":{},"injectables/RaycasterService.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["three.objectloader",{"_index":986,"title":{},"body":{"components/ObjectLoaderComponent.html":{}}}],["three.objloader",{"_index":922,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three.pcfsoftshadowmap",{"_index":1323,"title":{},"body":{"injectables/RendererService.html":{}}}],["three.perspectivecamera",{"_index":1018,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["three.planebuffergeometry(this.width",{"_index":1027,"title":{},"body":{"components/PlaneMeshComponent.html":{}}}],["three.pointlight(appliedcolor(this.color",{"_index":1032,"title":{},"body":{"components/PointLightComponent.html":{}}}],["three.raycaster",{"_index":1146,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["three.scene",{"_index":1388,"title":{},"body":{"components/SceneComponent.html":{}}}],["three.shape",{"_index":676,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.shapebuffergeometry(shape",{"_index":680,"title":{},"body":{"components/FrameMeshComponent.html":{}}}],["three.spheregeometry(this.radius",{"_index":1414,"title":{},"body":{"components/SphereMeshComponent.html":{}}}],["three.textgeometry(this.text",{"_index":1496,"title":{},"body":{"components/TextMeshComponent.html":{}}}],["three.torusgeometry(this.radius",{"_index":1519,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["three.vector3",{"_index":1714,"title":{},"body":{"miscellaneous/functions.html":{}}}],["three.vector3(x",{"_index":1190,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["three.webglrenderer",{"_index":1300,"title":{},"body":{"injectables/RendererService.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":827,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}],["three/examples/jsm/libs/stats.module.js",{"_index":1430,"title":{},"body":{"injectables/StatsService.html":{}}}],["three/examples/jsm/loaders/mtlloader",{"_index":950,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/objloader",{"_index":949,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["three/examples/jsm/loaders/svgloader",{"_index":1364,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["three/examples/jsm/renderers/css3drenderer",{"_index":493,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"injectables/RendererService.html":{}}}],["threejs.git",{"_index":1758,"title":{},"body":{"index.html":{}}}],["todo",{"_index":645,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/PointLightComponent.html":{},"injectables/RendererService.html":{},"components/SceneComponent.html":{}}}],["toggle",{"_index":1422,"title":{},"body":{"injectables/StatsService.html":{}}}],["tort",{"_index":1841,"title":{},"body":{"license.html":{}}}],["torus",{"_index":274,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["torusmeshcomponent",{"_index":266,"title":{"components/TorusMeshComponent.html":{}},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["touchevent",{"_index":1134,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["transform",{"_index":614,"title":{},"body":{"pipes/Deg2RadPipe.html":{},"pipes/Rad2DegPipe.html":{}}}],["transform(degrees",{"_index":615,"title":{},"body":{"pipes/Deg2RadPipe.html":{}}}],["transform(radians",{"_index":1039,"title":{},"body":{"pipes/Rad2DegPipe.html":{}}}],["translate",{"_index":696,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["translatelabelx",{"_index":725,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["transparent",{"_index":876,"title":{},"body":{"components/MeshLineConnectorComponent.html":{}}}],["tree",{"_index":384,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["true",{"_index":43,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/DirectionalLightComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["try",{"_index":1192,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["tube",{"_index":1510,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["tubularsegments",{"_index":1511,"title":{},"body":{"components/TorusMeshComponent.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"pipes/Deg2RadPipe.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"pipes/Rad2DegPipe.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typescript",{"_index":1541,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":965,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["undefined",{"_index":306,"title":{},"body":{"modules/AtftModule.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/SVGLoaderComponent.html":{}}}],["underlying",{"_index":1233,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["unexpected",{"_index":305,"title":{},"body":{"modules/AtftModule.html":{},"components/RendererCanvasComponent.html":{}}}],["unsubscribe",{"_index":1114,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["unsubscribeevents",{"_index":1069,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["up",{"_index":1741,"title":{},"body":{"index.html":{}}}],["update",{"_index":1423,"title":{},"body":{"injectables/StatsService.html":{}}}],["updateaspectratio",{"_index":1003,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["updateaspectratio(aspect",{"_index":1011,"title":{},"body":{"components/PerspectiveCameraComponent.html":{}}}],["updatechildcamerasaspectratio",{"_index":1278,"title":{},"body":{"injectables/RendererService.html":{}}}],["updatechildcamerasaspectratio(canvas",{"_index":1292,"title":{},"body":{"injectables/RendererService.html":{}}}],["updated",{"_index":115,"title":{},"body":{"injectables/AnimationService.html":{},"components/PerspectiveCameraComponent.html":{},"changelog.html":{}}}],["updatelinegeometry",{"_index":757,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{}}}],["upgrade",{"_index":1539,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":1731,"title":{},"body":{"index.html":{}}}],["use",{"_index":954,"title":{},"body":{"components/ObjLoaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":77,"title":{},"body":{"injectables/AnimationService.html":{},"components/RendererCanvasComponent.html":{},"changelog.html":{}}}],["useexisting",{"_index":390,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["usefull",{"_index":1061,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["using",{"_index":1720,"title":{},"body":{"index.html":{}}}],["util",{"_index":1031,"title":{},"body":{"components/PointLightComponent.html":{},"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["util/applied",{"_index":636,"title":{},"body":{"components/DirectionalLightComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LineConnectorComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/SceneComponent.html":{}}}],["util/fix",{"_index":1367,"title":{},"body":{"components/SVGLoaderComponent.html":{},"components/TextMeshComponent.html":{}}}],["util/scale",{"_index":1369,"title":{},"body":{"components/SVGLoaderComponent.html":{}}}],["v0.0.3",{"_index":1608,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":32,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"modules/AtftModule.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["var",{"_index":413,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["version",{"_index":1603,"title":{},"body":{"changelog.html":{}}}],["versioning",{"_index":1534,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":1613,"title":{},"body":{"changelog.html":{}}}],["vertically",{"_index":1750,"title":{},"body":{"index.html":{}}}],["vertices",{"_index":700,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["very",{"_index":1060,"title":{},"body":{"directives/RaycasterGroupDirective.html":{}}}],["via",{"_index":1740,"title":{},"body":{"index.html":{}}}],["video",{"_index":276,"title":{},"body":{"modules/AtftMeshModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{}}}],["video/mp4",{"_index":515,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{}}}],["videosrc",{"_index":486,"title":{},"body":{"components/Css3dVideoMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["viewchild",{"_index":1245,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["viewchild('canvas",{"_index":1222,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["void",{"_index":38,"title":{},"body":{"classes/AbstractServerActor.html":{},"injectables/AnimationService.html":{},"components/Css3dVideoMeshComponent.html":{},"directives/DashedDrawDirective.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"directives/RaycasterCameraDirective.html":{},"directives/RaycasterEnableDirective.html":{},"directives/RaycasterGroupDirective.html":{},"injectables/RaycasterService.html":{},"components/RendererCanvasComponent.html":{},"injectables/RendererService.html":{},"components/SVGLoaderComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"directives/StatsAutoShowDirective.html":{},"injectables/StatsService.html":{},"components/TextMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["want",{"_index":1746,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1826,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1821,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1762,"title":{},"body":{"index.html":{}}}],["wavefront",{"_index":924,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["web",{"_index":1727,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":777,"title":{},"body":{"components/LineConnectorComponent.html":{},"components/RendererCanvasComponent.html":{}}}],["webglrenderer",{"_index":1273,"title":{},"body":{"injectables/RendererService.html":{},"changelog.html":{}}}],["whether",{"_index":1838,"title":{},"body":{"license.html":{}}}],["width",{"_index":443,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/LayerActorComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RendererService.html":{}}}],["width(width",{"_index":747,"title":{},"body":{"components/LayerActorComponent.html":{}}}],["widthsegments",{"_index":444,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"components/SphereMeshComponent.html":{}}}],["window.addeventlistener('mousedown",{"_index":1159,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.addeventlistener('mousemove",{"_index":1158,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.addeventlistener('touchstart",{"_index":1160,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.innerheight",{"_index":1188,"title":{},"body":{"injectables/RaycasterService.html":{},"injectables/RendererService.html":{}}}],["window.innerwidth",{"_index":1187,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousedown",{"_index":1163,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('mousemove",{"_index":1162,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window.removeeventlistener('touchstart",{"_index":1164,"title":{},"body":{"injectables/RaycasterService.html":{}}}],["window:resize",{"_index":1212,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["window:resize(event",{"_index":1217,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["within",{"_index":939,"title":{},"body":{"components/ObjLoaderComponent.html":{}}}],["without",{"_index":1799,"title":{},"body":{"license.html":{}}}],["workaround",{"_index":1263,"title":{},"body":{"components/RendererCanvasComponent.html":{}}}],["workstation",{"_index":427,"title":{},"body":{"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{}}}],["workstationactorcomponent",{"_index":193,"title":{"components/WorkstationActorComponent.html":{}},"body":{"modules/AtftDataCenterActorModule.html":{},"components/AxesHelperComponent.html":{},"components/BoxMeshComponent.html":{},"components/Css3dVideoMeshComponent.html":{},"components/CylinderMeshComponent.html":{},"components/DirectionalLightComponent.html":{},"components/EmptyComponent.html":{},"components/FrameMeshComponent.html":{},"components/GridHelperComponent.html":{},"components/GridMeshComponent.html":{},"components/HemisphereLightComponent.html":{},"components/LayerActorComponent.html":{},"components/LineConnectorComponent.html":{},"components/MapControlsComponent.html":{},"components/MeshLineConnectorComponent.html":{},"components/ObjLoaderComponent.html":{},"components/ObjectLoaderComponent.html":{},"components/OrbitControlsComponent.html":{},"components/PerspectiveCameraComponent.html":{},"components/PlaneMeshComponent.html":{},"components/PointLightComponent.html":{},"components/RendererCanvasComponent.html":{},"components/SVGLoaderComponent.html":{},"components/SceneComponent.html":{},"components/ServerBarrelActorComponent.html":{},"components/ServerCompactActorComponent.html":{},"components/ServerIconActorComponent.html":{},"components/ServerStandActorComponent.html":{},"components/SphereMeshComponent.html":{},"components/TextMeshComponent.html":{},"components/TorusMeshComponent.html":{},"components/WorkstationActorComponent.html":{},"coverage.html":{},"overview.html":{}}}],["workstationactorcomponentchanged",{"_index":1550,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":1712,"title":{},"body":{"miscellaneous/functions.html":{}}}],["x",{"_index":464,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{}}}],["x0",{"_index":708,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["y",{"_index":461,"title":{},"body":{"components/BoxMeshComponent.html":{},"components/GridMeshComponent.html":{},"components/PlaneMeshComponent.html":{},"injectables/RaycasterService.html":{}}}],["y0",{"_index":710,"title":{},"body":{"components/GridMeshComponent.html":{}}}],["yanked",{"_index":1601,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":1127,"title":{},"body":{"injectables/RaycasterService.html":{},"miscellaneous/functions.html":{}}}],["z",{"_index":451,"title":{},"body":{"components/BoxMeshComponent.html":{}}}],["zone.js",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":142,"title":{},"body":{"modules/AtftAnimationModule.html":{},"modules/AtftCameraModule.html":{},"modules/AtftConnectorModule.html":{},"modules/AtftControlModule.html":{},"modules/AtftDataCenterActorModule.html":{},"modules/AtftEffectModule.html":{},"modules/AtftHelperModule.html":{},"modules/AtftLightModule.html":{},"modules/AtftLoaderModule.html":{},"modules/AtftMeshModule.html":{},"modules/AtftModule.html":{},"modules/AtftObjectModule.html":{},"modules/AtftPipeModule.html":{},"modules/AtftRaycasterModule.html":{},"modules/AtftRendererModule.html":{},"modules/AtftStatsModule.html":{},"modules/AtftTextModule.html":{},"components/RendererCanvasComponent.html":{},"overview.html":{}}}],["zoomspeed",{"_index":805,"title":{},"body":{"components/MapControlsComponent.html":{},"components/OrbitControlsComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractServerActor.html":{"url":"classes/AbstractServerActor.html","title":"class - AbstractServerActor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractServerActor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n        \n\n\n            \n                Extends\n            \n            \n                        EmptyComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:19\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { EventEmitter, Input, Output } from '@angular/core';\nimport {EmptyComponent} from '../../../object/helper/empty.component';\n\nexport abstract class AbstractServerActor extends EmptyComponent {\n\n  @Input()\n  label: string;\n\n  @Output()\n  render = new EventEmitter();\n\n  @Output()\n  selected = new EventEmitter();\n\n  @Output()\n  deselected = new EventEmitter();\n\n  @Input()\n  svgName: string;\n\n  color = 0xffffff;\n\n  @Input()\n  showFrame = true;\n\n  public onSelected() {\n    // console.log('ServerActorComponent.onSelected');\n    this.color = 0xfff0f0;\n  }\n\n  public onDeselected() {\n    // console.log('ServerActorComponent.onDeselected');\n    this.color = 0xffffff;\n  }\n\n  public onClick() {\n    // console.log('ServerActorComponent.onClick');\n    this.color = 0xffa0a0;\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimationService.html":{"url":"injectables/AnimationService.html","title":"injectable - AnimationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/animation/animation.service.ts\n        \n\n            \n                Description\n            \n            \n                Animation service emits animate event, which should be used by animated components for animation logic.\nNOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                animate\n                            \n                            \n                                    Private\n                                enabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                animationStep\n                            \n                            \n                                    Public\n                                start\n                            \n                            \n                                    Public\n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            animationStep\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animationStep()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            start\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    start()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:29\n                \n            \n\n\n            \n                \n                    Start the animation loop.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stop()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/animation/animation.service.ts:39\n                \n            \n\n\n            \n                \n                    Stop all animations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            animate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:16\n                            \n                        \n\n                \n                    \n                        Subscribe for animation frame creation (change position and etc.)\nAvoid render() execution, it's called only once when all components updated animation frame.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/animation/animation.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable} from '@angular/core';\nimport {RendererService} from '../renderer/renderer.service';\n\n\n/**\n * Animation service emits animate event, which should be used by animated components for animation logic.\n * NOTE: this service is for the performance optimization: requestAnimationFrame and render is called once.\n */\n@Injectable()\nexport class AnimationService {\n\n  /**\n   * Subscribe for animation frame creation (change position and etc.)\n   * Avoid render() execution, it's called only once when all components updated animation frame.\n   */\n  readonly animate = new EventEmitter();\n\n  private enabled = false;\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    this.animationStep = this.animationStep.bind(this);\n  }\n\n  /**\n   * Start the animation loop.\n   */\n  public start() {\n    if (!this.enabled) {\n      this.enabled = true;\n      this.animationStep();\n    }\n  }\n\n  /**\n   * Stop all animations.\n   */\n  public stop() {\n    if (this.enabled) {\n      this.enabled = false;\n    }\n  }\n\n  public animationStep() {\n    if (this.enabled) {\n      requestAnimationFrame(this.animationStep);\n      if (this.animate.observers.length > 0) {\n        this.animate.emit();\n        /**\n         * When all components updated animation, render event is emitted.\n         * Main renderer subscribed to this event emitter.\n         */\n        this.rendererService.render();\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftAnimationModule.html":{"url":"modules/AtftAnimationModule.html","title":"module - AtftAnimationModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftAnimationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/animation/atft-animation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AnimationService} from './animation.service';\n\n\n@NgModule({\n  providers: [\n    AnimationService\n  ]\n})\nexport class AtftAnimationModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftCameraModule.html":{"url":"modules/AtftCameraModule.html","title":"module - AtftCameraModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftCameraModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/camera/atft-camera.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PerspectiveCameraComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PerspectiveCameraComponent} from './perspective-camera.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    PerspectiveCameraComponent\n  ],\n  exports: [\n    PerspectiveCameraComponent\n  ]\n})\nexport class AtftCameraModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftConnectorModule.html":{"url":"modules/AtftConnectorModule.html","title":"module - AtftConnectorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftConnectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/connector/atft-connector.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LineConnectorComponent\n                        \n                        \n                            MeshLineConnectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MeshLineConnectorComponent} from './mesh-line-connector.component';\nimport {LineConnectorComponent} from './line-connector.component';\n\n\n@NgModule({\n  declarations: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LineConnectorComponent,\n    MeshLineConnectorComponent\n  ]\n})\nexport class AtftConnectorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftControlModule.html":{"url":"modules/AtftControlModule.html","title":"module - AtftControlModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftControlModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/control/atft-control.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapControlsComponent\n                        \n                        \n                            OrbitControlsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OrbitControlsComponent} from './orbit-controls.component';\nimport {MapControlsComponent} from './map-controls.component';\n\n\n@NgModule({\n  declarations: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    OrbitControlsComponent,\n    MapControlsComponent\n  ]\n})\nexport class AtftControlModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftDataCenterActorModule.html":{"url":"modules/AtftDataCenterActorModule.html","title":"module - AtftDataCenterActorModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftDataCenterActorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/actor/data-center/atft-data-center-actor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LayerActorComponent\n                        \n                        \n                            ServerBarrelActorComponent\n                        \n                        \n                            ServerCompactActorComponent\n                        \n                        \n                            ServerIconActorComponent\n                        \n                        \n                            ServerStandActorComponent\n                        \n                        \n                            WorkstationActorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {LayerActorComponent} from './layer/layer-actor.component';\nimport {CommonModule} from '@angular/common';\nimport {AtftModule} from '../../atft.module';\nimport {ServerBarrelActorComponent} from './server/server-barrel-actor.component';\nimport {ServerStandActorComponent} from './server/server-stand-actor.component';\nimport {ServerCompactActorComponent} from './server/server-compact-actor.component';\nimport {ServerIconActorComponent} from './server/server-icon-actor.component';\nimport {WorkstationActorComponent} from './server/workstation-actor.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftModule\n  ],\n  declarations: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent\n  ],\n  exports: [\n    LayerActorComponent,\n    ServerBarrelActorComponent,\n    ServerStandActorComponent,\n    ServerCompactActorComponent,\n    ServerIconActorComponent,\n    WorkstationActorComponent\n  ]\n})\nexport class AtftDataCenterActorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftEffectModule.html":{"url":"modules/AtftEffectModule.html","title":"module - AtftEffectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftEffectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/effect/atft-effect.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashedDrawDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DashedDrawDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DashedDrawDirective} from './dashed-draw.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    DashedDrawDirective\n  ],\n  exports: [\n    DashedDrawDirective\n  ]\n})\nexport class AtftEffectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftHelperModule.html":{"url":"modules/AtftHelperModule.html","title":"module - AtftHelperModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftHelperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/helper/atft-helper.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AxesHelperComponent\n                        \n                        \n                            EmptyComponent\n                        \n                        \n                            GridHelperComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AxesHelperComponent} from './axes-helper.component';\nimport {EmptyComponent} from './empty.component';\nimport {GridHelperComponent} from './grid-helper.component';\n\n\n@NgModule({\n  declarations: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AxesHelperComponent,\n    EmptyComponent,\n    GridHelperComponent\n  ]\n})\nexport class AtftHelperModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLightModule.html":{"url":"modules/AtftLightModule.html","title":"module - AtftLightModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLightModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_exports\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/light/atft-light.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DirectionalLightComponent\n                        \n                        \n                            HemisphereLightComponent\n                        \n                        \n                            PointLightComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PointLightComponent} from './point-light.component';\nimport {HemisphereLightComponent} from './hemisphere-light.component';\nimport {DirectionalLightComponent} from './directional-light.component';\n\n\n@NgModule({\n  declarations: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    DirectionalLightComponent,\n    HemisphereLightComponent,\n    PointLightComponent\n  ]\n})\nexport class AtftLightModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftLoaderModule.html":{"url":"modules/AtftLoaderModule.html","title":"module - AtftLoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftLoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/loader/atft-loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ObjLoaderComponent\n                        \n                        \n                            ObjectLoaderComponent\n                        \n                        \n                            SVGLoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObjectLoaderComponent} from './object-loader.component';\nimport {ObjLoaderComponent} from './obj-loader.component';\nimport {SVGLoaderComponent} from './svg-loader.component';\n\n\n@NgModule({\n  declarations: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ObjLoaderComponent,\n    ObjectLoaderComponent,\n    SVGLoaderComponent\n  ]\n})\nexport class AtftLoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftMeshModule.html":{"url":"modules/AtftMeshModule.html","title":"module - AtftMeshModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftMeshModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCss3dVideoMeshComponent\n\nCss3dVideoMeshComponent\n\nAtftMeshModule -->\n\nCss3dVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent  -->\n\nAtftMeshModule->Css3dVideoMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/mesh/atft-mesh.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            Css3dVideoMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BoxMeshComponent\n                        \n                        \n                            Css3dVideoMeshComponent\n                        \n                        \n                            CylinderMeshComponent\n                        \n                        \n                            FrameMeshComponent\n                        \n                        \n                            GridMeshComponent\n                        \n                        \n                            PlaneMeshComponent\n                        \n                        \n                            SphereMeshComponent\n                        \n                        \n                            TorusMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BoxMeshComponent} from './box-mesh.component';\nimport {CylinderMeshComponent} from './cylinder-mesh.component';\nimport {FrameMeshComponent} from './frame-mesh.component';\nimport {PlaneMeshComponent} from './plane-mesh.component';\nimport {SphereMeshComponent} from './sphere-mesh.component';\nimport {TorusMeshComponent} from './torus-mesh.component';\nimport {Css3dVideoMeshComponent} from './css3d-video-mesh.component';\nimport {GridMeshComponent} from './grid-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    Css3dVideoMeshComponent,\n    GridMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    BoxMeshComponent,\n    CylinderMeshComponent,\n    FrameMeshComponent,\n    PlaneMeshComponent,\n    SphereMeshComponent,\n    TorusMeshComponent,\n    Css3dVideoMeshComponent,\n    GridMeshComponent\n  ]\n})\nexport class AtftMeshModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftModule.html":{"url":"modules/AtftModule.html","title":"module - AtftModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/atft.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftAnimationModule\n                        \n                        \n                            AtftCameraModule\n                        \n                        \n                            AtftControlModule\n                        \n                        \n                            AtftEffectModule\n                        \n                        \n                            AtftObjectModule\n                        \n                        \n                            AtftRaycasterModule\n                        \n                        \n                            AtftRendererModule\n                        \n                        \n                            AtftStatsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftCameraModule} from './camera/atft-camera.module';\nimport {AtftObjectModule} from './object/atft-object.module';\nimport {AtftControlModule} from './control/atft-control.module';\nimport {AtftPipeModule} from './pipe/atft-pipe.module';\nimport {AtftRendererModule} from './renderer/atft-renderer.module';\nimport {AtftAnimationModule} from './animation/atft-animation.module';\nimport {AtftRaycasterModule} from './raycaster/atft-raycaster.module';\nimport {AtftStatsModule} from './stats/stats.module';\nimport {AtftEffectModule} from './effect/atft-effect.module';\n\n// NOTE: In case of \"ERROR in Unexpected value 'undefined' exported by the module 'AtftModule\" fix imports (do not import index.ts)\n\n@NgModule({\n  imports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ],\n  exports: [\n    AtftCameraModule,\n    AtftObjectModule,\n    AtftControlModule,\n    AtftPipeModule,\n    AtftRendererModule,\n    AtftAnimationModule,\n    AtftRaycasterModule,\n    AtftStatsModule,\n    AtftEffectModule\n  ]\n})\nexport class AtftModule {\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftObjectModule.html":{"url":"modules/AtftObjectModule.html","title":"module - AtftObjectModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftObjectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\n\nSceneComponent\n\nSceneComponent\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/atft-object.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SceneComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AtftConnectorModule\n                        \n                        \n                            AtftHelperModule\n                        \n                        \n                            AtftLightModule\n                        \n                        \n                            AtftLoaderModule\n                        \n                        \n                            AtftMeshModule\n                        \n                        \n                            AtftTextModule\n                        \n                        \n                            SceneComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {AtftConnectorModule} from './connector/atft-connector.module';\nimport {AtftHelperModule} from './helper/atft-helper.module';\nimport {AtftLightModule} from './light/atft-light.module';\nimport {AtftLoaderModule} from './loader/atft-loader.module';\nimport {AtftMeshModule} from './mesh/atft-mesh.module';\nimport {AtftTextModule} from './text/atft-text.module';\nimport {CommonModule} from '@angular/common';\nimport {SceneComponent} from './scene.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ],\n  declarations: [\n    SceneComponent\n  ],\n  exports: [\n    SceneComponent,\n    AtftConnectorModule,\n    AtftHelperModule,\n    AtftLightModule,\n    AtftLoaderModule,\n    AtftMeshModule,\n    AtftTextModule\n  ]\n})\nexport class AtftObjectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftPipeModule.html":{"url":"modules/AtftPipeModule.html","title":"module - AtftPipeModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftPipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/atft-pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Deg2RadPipe\n                        \n                        \n                            Rad2DegPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {Deg2RadPipe} from './deg2rad.pipe';\nimport {Rad2DegPipe} from './rad2deg.pipe';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ],\n  exports: [\n    Deg2RadPipe,\n    Rad2DegPipe\n  ]\n})\nexport class AtftPipeModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRaycasterModule.html":{"url":"modules/AtftRaycasterModule.html","title":"module - AtftRaycasterModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRaycasterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/atft-raycaster.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RaycasterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RaycasterCameraDirective\n                        \n                        \n                            RaycasterEnableDirective\n                        \n                        \n                            RaycasterGroupDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RaycasterGroupDirective} from './raycaster-group.directive';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterCameraDirective} from './raycaster-camera.directive';\nimport {RaycasterEnableDirective} from './raycaster-enable.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ],\n  providers: [\n    RaycasterService\n  ],\n  exports: [\n    RaycasterGroupDirective,\n    RaycasterCameraDirective,\n    RaycasterEnableDirective\n  ]\n})\nexport class AtftRaycasterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftRendererModule.html":{"url":"modules/AtftRendererModule.html","title":"module - AtftRendererModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftRendererModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/atft-renderer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            RendererService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RendererCanvasComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RendererCanvasComponent} from './renderer-canvas.component';\nimport {CommonModule} from '@angular/common';\nimport {RendererService} from './renderer.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    RendererCanvasComponent\n  ],\n  providers: [\n    RendererService\n  ],\n  exports: [\n    RendererCanvasComponent\n  ]\n})\nexport class AtftRendererModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftStatsModule.html":{"url":"modules/AtftStatsModule.html","title":"module - AtftStatsModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftStatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            StatsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatsAutoShowDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatsService} from './stats.service';\nimport {StatsAutoShowDirective} from './stats-auto-show.directive';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    StatsService\n  ],\n  declarations: [\n    StatsAutoShowDirective\n  ],\n  exports: [\n    StatsAutoShowDirective\n  ]\n})\nexport class AtftStatsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AtftTextModule.html":{"url":"modules/AtftTextModule.html","title":"module - AtftTextModule","body":"\n                   \n\n\n\n\n    Modules\n    AtftTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/object/text/atft-text.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TextMeshComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TextMeshComponent} from './text-mesh.component';\n\n\n@NgModule({\n  declarations: [\n    TextMeshComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TextMeshComponent\n  ]\n})\nexport class AtftTextModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AxesHelperComponent.html":{"url":"components/AxesHelperComponent.html","title":"component - AxesHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AxesHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/axes-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => AxesHelperComponent) }\n                \n            \n\n\n            \n                selector\n                atft-axes-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/axes-helper.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-axes-helper',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => AxesHelperComponent) }],\n  template: ''\n})\nexport class AxesHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('AxesHelperComponent.newObject3DInstance');\n    return new THREE.AxesHelper(this.size);\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'AxesHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoxMeshComponent.html":{"url":"components/BoxMeshComponent.html","title":"component - BoxMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BoxMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/box-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => BoxMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-box-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                depth\n                            \n                            \n                                depthSegments\n                            \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        depth\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:30\n                            \n                        \n                \n                    \n                        Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        depthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:48\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:42\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:36\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/box-mesh.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-box-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => BoxMeshComponent)}],\n  template: ''\n})\nexport class BoxMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Depth; that is, the length of the edges parallel to the Z axis. Optional; defaults to 1.\n   */\n  @Input()\n  depth = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the depth of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  depthSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    // console.log('BoxMeshComponent.newObject3DInstance');\n    const geometry = new THREE.BoxBufferGeometry(this.width, this.height, this.depth,\n      this.widthSegments, this.heightSegments, this.depthSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'BoxMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Css3dVideoMeshComponent.html":{"url":"components/Css3dVideoMeshComponent.html","title":"component - Css3dVideoMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  Css3dVideoMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCss3dMesh\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => Css3dVideoMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-css3d-video-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                video\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCss3dObject\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCss3dObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCss3dObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     CSS3DObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            video\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : document.createElement('video')\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {CSS3DObject} from 'three/examples/jsm/renderers/CSS3DRenderer';\nimport {AbstractCss3dMesh} from './abstract-css3d-mesh';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-css3d-video-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => Css3dVideoMeshComponent)}],\n  template: ''\n})\nexport class Css3dVideoMeshComponent extends AbstractCss3dMesh implements AfterViewInit {\n\n  @Input()\n  videoSrc;\n\n  video = document.createElement('video');\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected createCss3dObject(): CSS3DObject {\n    // 1. Create DIV\n    const div = document.createElement('div');\n    div.style.width = this.resolutionX + 'px';\n    div.style.height = this.resolutionY + 'px';\n    div.style.backgroundColor = '#000000';\n    div.id = 'myWrapper';\n\n    // 2. Create Video Player with source\n    this.video.autoplay = false;\n    this.video.loop = true;\n    this.video.muted = true;\n    const source = document.createElement('source');\n    source.src = this.videoSrc;\n    source.type = 'video/mp4';\n    this.video.style.width = '100%';\n    this.video.style.height = '100%';\n    this.video.appendChild(source);\n    div.appendChild(this.video);\n\n    // 3. Create CSS3DObject\n    const object = new CSS3DObject(div);\n    return object;\n  }\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.video.load();\n    this.video.addEventListener('canplay', () => {\n      this.video.play();\n    });\n\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'Css3dVideoMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CylinderMeshComponent.html":{"url":"components/CylinderMeshComponent.html","title":"component - CylinderMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CylinderMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => CylinderMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-cylinder-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                openEnded\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radiusBottom\n                            \n                            \n                                radiusTop\n                            \n                            \n                                thetaLength\n                            \n                            \n                                thetaStart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openEnded\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusBottom\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radiusTop\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaLength\n                    \n                \n                \n                    \n                        Default value : 2 * Math.PI\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thetaStart\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-cylinder-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => CylinderMeshComponent)}],\n  template: ''\n})\nexport class CylinderMeshComponent extends AbstractMesh {\n\n  @Input()\n  radiusTop = 1.0;\n  @Input()\n  radiusBottom = 1.0;\n  @Input()\n  height = 1.0;\n  @Input()\n  radialSegments = 8;\n  @Input()\n  heightSegments = 1;\n  @Input()\n  openEnded = false;\n  @Input()\n  thetaStart = 0.0;\n  @Input()\n  thetaLength = 2 * Math.PI;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // console.log('CylinderMeshComponent.constructor');\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('CylinderMeshComponent.newObject3DInstance');\n    const geometry = new THREE.CylinderGeometry(this.radiusTop, this.radiusBottom, this.height, this.radialSegments, this.heightSegments,\n      this.openEnded, this.thetaStart, this.thetaLength);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'CylinderMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DashedDrawDirective.html":{"url":"directives/DashedDrawDirective.html","title":"directive - DashedDrawDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DashedDrawDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/effect/dashed-draw.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-dashed-draw]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                edges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, animation: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animation\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            edges\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/effect/dashed-draw.directive.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport * as THREE from 'three';\nimport {AnimationService} from '../animation/animation.service';\n\n@Directive({selector: '[atft-dashed-draw]'})\nexport class DashedDrawDirective implements AfterViewInit {\n\n  private edges: any;\n\n  constructor(\n    private host: AbstractObject3D,\n    private animation: AnimationService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    console.log('Dashed draw for', this.host);\n\n    const object = this.host.getObject() as THREE.Object3D;\n\n    const list = new THREE.Group();\n\n    object.traverse(child => {\n      if (child instanceof THREE.Mesh) {\n        // child.material = new THREE.MeshBasicMaterial({color: 0x999999});\n        console.log(child);\n\n        const edgesGeom = new THREE.EdgesGeometry(child.geometry, 8);\n        this.edges = new THREE.LineSegments(edgesGeom, new THREE.LineDashedMaterial({color: 0xDA1111}));\n        this.edges.computeLineDistances();\n        // console.log(this.edges);\n        this.edges.material.dashSize = 0;\n        this.edges.material.gapSize = this.edges.geometry.attributes\n          .lineDistance.array[this.edges.geometry.attributes.lineDistance.count - 1];\n\n\n        const material = child.material as THREE.Material;\n        material.transparent = true;\n        material.opacity = 0.2;\n\n        // this.edges.scale.x = 1.01;\n        // this.edges.scale.y = 1.01;\n        // this.edges.scale.z = 1.01;\n        child.add(this.edges);\n\n        // scene.add(this.edges);\n        // child.scale.setScalar(0.999);\n        // child.visible = false;\n        // edges.add(child);\n      }\n    });\n\n\n    this.animate = this.animate.bind(this);\n    this.animation.animate.subscribe(this.animate);\n    this.animation.start();\n  }\n\n  private animate() {\n\n    // console.log(this.host.getObject().parent);\n    if (this.edges) {\n      this.edges.material.dashSize += 2;\n      if (this.edges.material.dashSize >= this.edges.material.gapSize) {\n        // edges.material.color.set(0xffffff);\n        // edges.children[0].visible = true;\n        // this.animation.animate.unsubscribe();\n      }\n    }\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Deg2RadPipe.html":{"url":"pipes/Deg2RadPipe.html","title":"pipe - Deg2RadPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Deg2RadPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/deg2rad.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deg2rad\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(degrees: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/deg2rad.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts degrees to radians\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    degrees\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'deg2rad'\n})\nexport class Deg2RadPipe implements PipeTransform {\n\n  /**\n   * Converts degrees to radians\n   * @param degree Degrees\n   */\n  transform(degrees: number): number {\n    return (degrees / 180) * Math.PI;\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectionalLightComponent.html":{"url":"components/DirectionalLightComponent.html","title":"component - DirectionalLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DirectionalLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/directional-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => DirectionalLightComponent) }\n                \n            \n\n\n            \n                selector\n                atft-directional-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                intensity\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        target\n                    \n                \n                \n                    \n                        Default value : new THREE.Object3D()\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/directional-light.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedColor} from '../../util/applied-color';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-directional-light',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => DirectionalLightComponent)}],\n  template: ''\n})\nexport class DirectionalLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  // by default, target is 0,0,0\n  @Input() target = new THREE.Object3D();\n  @Input() castShadow = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.DirectionalLight(\n      appliedColor(this.color),\n      this.intensity\n    );\n\n    light.target = this.target;\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.camera.top = 100;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -100;\n      light.shadow.camera.right = 100;\n      light.shadow.camera.near = 0.1;\n      light.shadow.camera.far = 500;\n      light.shadow.mapSize.set(1024, 1024);\n      light.shadow.bias = -0.001;\n\n    }\n    return light;\n\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'DirectionalLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmptyComponent.html":{"url":"components/EmptyComponent.html","title":"component - EmptyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmptyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/empty.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => EmptyComponent) }\n                \n            \n\n\n            \n                selector\n                atft-empty\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/empty.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/empty.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, forwardRef, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-empty',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => EmptyComponent) }],\n  template: ''\n})\nexport class EmptyComponent extends AbstractObject3D implements AfterViewInit {\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Object3D {\n    return new THREE.Object3D();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmptyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FrameMeshComponent.html":{"url":"components/FrameMeshComponent.html","title":"component - FrameMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FrameMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => FrameMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-frame-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sizeX\n                            \n                            \n                                sizeY\n                            \n                            \n                                thickness\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sizeX\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sizeY\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thickness\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/frame-mesh.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-frame-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => FrameMeshComponent)}],\n  template: ''\n})\nexport class FrameMeshComponent extends AbstractMesh {\n\n  @Input()\n  thickness = 2;\n\n  @Input()\n  sizeX = 20;\n\n  @Input()\n  sizeY = 20;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n\n    const halfX = this.sizeX / 2.0;\n    const halfY = this.sizeY / 2.0;\n    const t = this.thickness;\n\n    const shape = new THREE.Shape();\n\n    shape.moveTo(-halfX, halfY);\n    shape.lineTo(-halfX - t, halfY + t);\n    shape.lineTo(halfX + t, halfY + t);\n    shape.lineTo(halfX + t, -halfY - t);\n    shape.lineTo(-halfX - t, -halfY - t);\n    shape.lineTo(-halfX - t, halfY + t);\n\n    shape.lineTo(-halfX, halfY);\n    shape.lineTo(-halfX, -halfY);\n    shape.lineTo(halfX, -halfY);\n    shape.lineTo(halfX, halfY);\n    shape.lineTo(-halfX, halfY);\n\n    const geometry = new THREE.ShapeBufferGeometry(shape);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'FrameMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridHelperComponent.html":{"url":"components/GridHelperComponent.html","title":"component - GridHelperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridHelperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/helper/grid-helper.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => GridHelperComponent) }\n                \n            \n\n\n            \n                selector\n                atft-grid-helper\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                divisions\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        divisions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/helper/grid-helper.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.AxesHelper\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-grid-helper',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => GridHelperComponent) }],\n  template: ''\n})\nexport class GridHelperComponent extends AbstractObject3D {\n\n  @Input() size: number;\n  @Input() divisions: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.AxesHelper {\n    // console.log('GridHelperComponent.newObject3DInstance');\n    return new THREE.GridHelper(this.size, this.divisions);\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridHelperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GridMeshComponent.html":{"url":"components/GridMeshComponent.html","title":"component - GridMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GridMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => GridMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-grid-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                iterationsX\n                            \n                            \n                                iterationsY\n                            \n                            \n                                offset\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        iterationsX\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iterationsY\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        offset\n                    \n                \n                \n                    \n                        Default value : 1.05\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/grid-mesh.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-grid-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => GridMeshComponent)}],\n  template: ''\n})\nexport class GridMeshComponent extends AbstractMesh {\n\n  @Input()\n  size = 5;\n\n  @Input()\n  iterationsX = 30;\n\n  @Input()\n  iterationsY = 30;\n\n  @Input()\n  offset = 1.05;\n\n  // private translate = (this.iterations * this.offset) / 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.BufferGeometry();\n\n    const vertices = [];\n    const d = this.size;\n\n    // Calculate general offset: (0,0) coordinates in the middle of grid\n    const x0 = -(this.iterationsX * (d * this.offset)) / 2;\n    const y0 = -(this.iterationsY * (d * this.offset)) / 2;\n\n    let x = x0, y = x0;\n\n    for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'GridMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HemisphereLightComponent.html":{"url":"components/HemisphereLightComponent.html","title":"component - HemisphereLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HemisphereLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/hemisphere-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => HemisphereLightComponent) }\n                \n            \n\n\n            \n                selector\n                atft-hemisphere-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                groundColor\n                            \n                            \n                                intensity\n                            \n                            \n                                skyColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        groundColor\n                    \n                \n                \n                    \n                        Default value : 0x444444\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        skyColor\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/hemisphere-light.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedColor} from '../../util/applied-color';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-hemisphere-light',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => HemisphereLightComponent) }],\n  template: ''\n})\nexport class HemisphereLightComponent extends AbstractObject3D {\n\n  @Input() skyColor = 0xffffff;\n  @Input() groundColor = 0x444444;\n  @Input() intensity = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n\n    const light = new THREE.HemisphereLight(\n      appliedColor(this.skyColor),\n      appliedColor(this.groundColor),\n      appliedColor(this.intensity)\n    );\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'HemisphereLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayerActorComponent.html":{"url":"components/LayerActorComponent.html","title":"component - LayerActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayerActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmptyComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => LayerActorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-layer-actor\n            \n\n\n\n            \n                template\n                \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _width\n                            \n                            \n                                color\n                            \n                            \n                                translateLabelX\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                name\n                            \n                            \n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    width\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _width\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xA0A0A0\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translateLabelX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n\n                \n                    \n                        getwidth()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:27\n                                \n                            \n\n                \n                    \n                        setwidth(width: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            width\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, forwardRef, Input, Output} from '@angular/core';\nimport {AbstractObject3D} from '../../../object/abstract-object-3d';\nimport {EmptyComponent} from '../../../object/helper';\n\n\n@Component({\n  selector: 'atft-layer-actor',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => LayerActorComponent)}],\n  template: `\n      \n          \n          \n      \n  `\n})\nexport class LayerActorComponent extends EmptyComponent {\n  @Input() name: string;\n\n  @Input()\n  set width(width: number) {\n    this._width = width;\n    this.translateLabelX = this._width / 2 - 10;\n  }\n\n  get width(): number {\n    return this._width;\n  }\n\n  private _width: number;\n\n  @Input() height: number;\n\n  @Output() render = new EventEmitter();\n  @Output() selected = new EventEmitter();\n  @Output() deselected = new EventEmitter();\n\n  color = 0xA0A0A0;\n\n  translateLabelX: number;\n\n  public onSelected() {\n    this.color = 0xA4A4A4;\n  }\n\n  public onDeselected() {\n    this.color = 0xA0A0A0;\n  }\n\n  public onClick() {\n    this.color = 0xA0A0A0;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayerActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LineConnectorComponent.html":{"url":"components/LineConnectorComponent.html","title":"component - LineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => LineConnectorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                line\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                materialColor\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Line\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.BufferGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Line\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/line-connector.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractConnector} from './abstract-connector';\nimport {appliedColor} from '../../util/applied-color';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-line-connector',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => LineConnectorComponent)}],\n  template: ''\n})\nexport class LineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  // TODO: move to abstract?\n  private geometry: THREE.BufferGeometry;\n\n  private line: THREE.Line;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  public createConnectorObject(): THREE.Line {\n    this.geometry = this.getLineGeometry();\n\n    const material = new THREE.LineBasicMaterial({\n      color: appliedColor(this.materialColor),\n      /**\n       * NOTE: linewidth=1: Due to limitations of the OpenGL Core Profile\n       * with the WebGL renderer on most platforms linewidth will always be 1\n       * regardless of the set value.\n       */\n      linewidth: 1\n    });\n\n    this.line = new THREE.Line(this.geometry, material);\n\n    return this.line;\n  }\n\n  updateLineGeometry(): void {\n    this.geometry = this.getLineGeometry();\n    this.line.geometry = this.geometry;\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'LineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapControlsComponent.html":{"url":"components/MapControlsComponent.html","title":"component - MapControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/map-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-map-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoRotate\n                            \n                            \n                                autoRotateSpeed\n                            \n                            \n                                dampingFactor\n                            \n                            \n                                enableDamping\n                            \n                            \n                                maxDistance\n                            \n                            \n                                maxPolarAngle\n                            \n                            \n                                minDistance\n                            \n                            \n                                panSpeed\n                            \n                            \n                                rotateSpeed\n                            \n                            \n                                screenSpacePanning\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/map-controls.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoRotate\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoRotateSpeed\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dampingFactor\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableDamping\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxDistance\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxPolarAngle\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI / 2 - 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minDistance\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        panSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        screenSpacePanning\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/map-controls.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/map-controls.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {MapControls, OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation/animation.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-map-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class MapControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n\n  @Input() zoomSpeed = 1.2;\n\n  @Input() autoRotate = false;\n\n  @Input() autoRotateSpeed = 0.5;\n\n  @Input() enableDamping = false;\n\n  @Input() dampingFactor = 0.1;\n\n  @Input() screenSpacePanning = false;\n\n  @Input() minDistance = 20;\n\n  @Input() maxDistance = 200;\n\n  @Input() maxPolarAngle: number = Math.PI / 2 - 0.1;\n\n  @Input() panSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n    // TODO: add others\n  }\n\n  protected setUpControls() {\n    this.controls = new MapControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n\n    this.controls.panSpeed = this.panSpeed;\n\n    this.controls.autoRotate = this.autoRotate;\n    this.controls.autoRotateSpeed = this.autoRotateSpeed;\n    this.controls.enableDamping = this.enableDamping; // an animation loop is required when either damping or auto-rotation are enabled\n    this.controls.dampingFactor = this.dampingFactor;\n\n    this.controls.screenSpacePanning = this.screenSpacePanning;\n    this.controls.minDistance = this.minDistance;\n    this.controls.maxDistance = this.maxDistance;\n    this.controls.maxPolarAngle = this.maxPolarAngle;\n\n    this.controls.update();\n\n    // Advanced animation:\n    if (this.autoRotate || this.enableDamping) {\n      this.animationService.animate.subscribe(() => {\n        this.controls.update();\n      });\n      this.controls.addEventListener('change', () => {\n        this.rendererService.render();\n      });\n      this.animationService.start();\n    }\n\n    this.rendererService.render();\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MapControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MeshLineConnectorComponent.html":{"url":"components/MeshLineConnectorComponent.html","title":"component - MeshLineConnectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MeshLineConnectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractConnector\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: AbstractObject3D, useExisting: forwardRef(() => MeshLineConnectorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-mesh-line-connector\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                geometry\n                            \n                            \n                                    Private\n                                line\n                            \n                            \n                                    Private\n                                lineMaterial\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                animate\n                            \n                            \n                                createConnectorObject\n                            \n                            \n                                updateLineGeometry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animated\n                            \n                            \n                                animationIncrement\n                            \n                            \n                                depthTest\n                            \n                            \n                                depthWrite\n                            \n                            \n                                lineWidth\n                            \n                            \n                                materialColor\n                            \n                            \n                                opacity\n                            \n                            \n                                transparent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D, animationService: AnimationService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        animationService\n                                                  \n                                                        \n                                                                        AnimationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animated\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        animationIncrement\n                    \n                \n                \n                    \n                        Default value : 0.002\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthTest\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lineWidth\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Default value : 0xffff00\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Default value : 0.5\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        transparent\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            animate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    animate()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConnectorObject\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConnectorObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateLineGeometry\n                        \n                        \n                    \n                \n            \n            \n                \nupdateLineGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            geometry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.BufferGeometry\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            line\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLine\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lineMaterial\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MeshLineMaterial\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/connector/mesh-line-connector.component.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {MeshLine, MeshLineMaterial} from 'three.meshline';\nimport {AbstractConnector} from './abstract-connector';\nimport {appliedColor} from '../../util/applied-color';\nimport {AnimationService} from '../../animation/animation.service';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-mesh-line-connector',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => MeshLineConnectorComponent)}],\n  template: ''\n})\nexport class MeshLineConnectorComponent extends AbstractConnector {\n\n  @Input()\n  materialColor = 0xffff00;\n\n  @Input()\n  transparent = true;\n\n  @Input()\n  opacity = 0.5;\n\n  @Input()\n  lineWidth = 0.5;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  depthTest = true;\n\n  @Input()\n  animated = false;\n\n  @Input() animationIncrement = 0.002;\n\n  private geometry: THREE.BufferGeometry;\n  private line: MeshLine;\n  private lineMaterial: MeshLineMaterial;\n\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D,\n    protected animationService: AnimationService\n  ) {\n    super(rendererService, parent);\n  }\n\n  createConnectorObject(): THREE.Mesh {\n    this.geometry = this.getLineGeometry();\n\n    this.line = new MeshLine();\n    const arr = this.geometry.getAttribute('position').array;\n    this.line.setGeometry(arr);\n\n    this.lineMaterial = (this.animated ?\n        new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending,\n          // TODO: props\n          dashArray: 0.05,\n          dashOffset: 0.1,\n          dashRatio: 0.1\n        })\n        : new MeshLineMaterial({\n          color: appliedColor(this.materialColor),\n          transparent: this.transparent,\n          opacity: this.opacity,\n          lineWidth: this.lineWidth,\n          depthWrite: this.depthWrite,\n          depthTest: this.depthTest,\n          side: THREE.DoubleSide,\n          blending: THREE.NormalBlending\n        })\n    );\n\n    const mesh = new THREE.Mesh(this.line.geometry, this.lineMaterial);\n    if (this.animated) {\n      this.animate = this.animate.bind(this);\n      this.animationService.animate.subscribe(this.animate);\n    }\n    return mesh;\n  }\n\n  private animate() {\n    this.lineMaterial.uniforms.dashOffset.value += this.animationIncrement;\n  }\n\n  updateLineGeometry(): void {\n    // console.log('MeshLineConnectorComponent.updateLineGeometry');\n    this.geometry = this.getLineGeometry();\n    // https://github.com/spite/THREE.MeshLine/issues/51#issuecomment-379579926\n    this.line.setGeometry(this.geometry);\n    this.rendererService.render();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'MeshLineConnectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjLoaderComponent.html":{"url":"components/ObjLoaderComponent.html","title":"component - ObjLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/obj-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component for employing THREE.OBJLoader to load Wavefront *.obj files.\n\n    \n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ObjLoaderComponent) }\n                \n            \n\n\n            \n                selector\n                atft-obj-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                            \n                                    Private\n                                mtlLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                material\n                            \n                            \n                                resourcePath\n                            \n                            \n                                texturePath\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    texturePath\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resourcePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:40\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:32\n                            \n                        \n                \n                    \n                        Path relative to which resources and textures within the loaded obj file are loaded.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new OBJLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            mtlLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MTLLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        texturePath\n                    \n                \n\n\n                \n                    \n                        settexturePath(newTexturePath: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/obj-loader.component.ts:32\n                                \n                            \n                    \n                        \n                                Path relative to which resources and textures within the loaded obj file are loaded.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            newTexturePath\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader';\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader';\nimport {RendererService} from '../../renderer/renderer.service';\n\n/**\n * Component for employing THREE.OBJLoader to load [Wavefront *.obj files][1].\n *\n * [1]: https://en.wikipedia.org/wiki/Wavefront_.obj_file\n */\n@Component({\n  selector: 'atft-obj-loader',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => ObjLoaderComponent) }],\n  template: ''\n})\nexport class ObjLoaderComponent extends AbstractModelLoader {\n\n  private loader = new OBJLoader();\n  private mtlLoader = new MTLLoader();\n\n  @Input()\n  material: string;\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   * @deprecated Rather use resourcePath\n   */\n  @Input()\n  public set texturePath(newTexturePath: string) {\n    this.resourcePath = newTexturePath;\n  }\n\n  /**\n   * Path relative to which resources and textures within the loaded obj file are loaded.\n   */\n  @Input()\n  resourcePath: string;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // Preloading step for the material\n    const preloadingStep = new Promise((resolve, reject) => {\n      if (this.material === undefined) {\n        // No preloading necessary\n        resolve();\n      } else {\n        // TODO: If typings of mtlLoader are included in the Three.js NPM\n        // package, remove this 'any' cast.\n        (this.mtlLoader as any).setResourcePath(this.resourcePath);\n\n        this.mtlLoader.load(this.material, materialCreator => {\n          materialCreator.preload();\n          this.loader.setMaterials(materialCreator);\n          resolve();\n        }, undefined, reject);\n      }\n    });\n\n    // Await preloading and load final model\n    return preloadingStep.then(() => {\n      return new Promise((resolve, reject) => {\n        this.loader.load(this.model, model => {\n          resolve(model);\n        }, undefined, reject);\n      });\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ObjectLoaderComponent.html":{"url":"components/ObjectLoaderComponent.html","title":"component - ObjectLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ObjectLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/object-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ObjectLoaderComponent) }\n                \n            \n\n\n            \n                selector\n                atft-object-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.ObjectLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/object-loader.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Optional, SkipSelf} from '@angular/core';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\n\nimport * as THREE from 'three';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-object-loader',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => ObjectLoaderComponent) }],\n  template: ''\n})\nexport class ObjectLoaderComponent extends AbstractModelLoader {\n  private loader = new THREE.ObjectLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, model => {\n          // BUG #95: it seems that some textures loaded after last render (and model has black texture instead)\n          resolve(model);\n        },\n        undefined,\n        reject\n      );\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ObjectLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrbitControlsComponent.html":{"url":"components/OrbitControlsComponent.html","title":"component - OrbitControlsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrbitControlsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/control/orbit-controls.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractOrbitControls\n    \n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-orbit-controls\n            \n\n            \n                styleUrls\n                controls.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Protected\n                                setUpControls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                rotateSpeed\n                            \n                            \n                                zoomSpeed\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        rotateSpeed\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        zoomSpeed\n                    \n                \n                \n                    \n                        Default value : 1.2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setUpControls\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUpControls()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/control/orbit-controls.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {RendererService} from '../renderer/renderer.service';\nimport {RaycasterService} from '../raycaster/raycaster.service';\nimport {AbstractOrbitControls} from './abstract-orbit-controls';\n\n@Component({\n  selector: 'atft-orbit-controls',\n  template: `\n      `,\n  styleUrls: ['controls.component.scss']\n})\nexport class OrbitControlsComponent extends AbstractOrbitControls implements OnChanges {\n\n  @Input() rotateSpeed = 1.0;\n  @Input() zoomSpeed = 1.2;\n\n  constructor(\n    protected rendererService: RendererService,\n    protected raycasterService: RaycasterService\n  ) {\n    super(rendererService, raycasterService);\n  }\n\n  protected setUpControls() {\n    this.controls = new OrbitControls(\n      this.childCameras.first.camera,\n      this.listeningControlElement && this.listeningControlElement.nativeElement\n    );\n    this.controls.rotateSpeed = this.rotateSpeed;\n    this.controls.zoomSpeed = this.zoomSpeed;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.controls) {\n      return;\n    }\n    super.ngOnChanges(changes);\n\n    if (changes['rotateSpeed']) {\n      this.controls.rotateSpeed = this.rotateSpeed;\n    }\n    if (changes['zoomSpeed']) {\n      this.controls.zoomSpeed = this.zoomSpeed;\n    }\n  }\n\n\n}\n\n    \n\n\n    \n                \n                    controls.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'OrbitControlsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PerspectiveCameraComponent.html":{"url":"components/PerspectiveCameraComponent.html","title":"component - PerspectiveCameraComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PerspectiveCameraComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/camera/perspective-camera.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractCamera\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractCamera, useExisting: forwardRef(() => PerspectiveCameraComponent) }\n                \n            \n\n\n            \n                selector\n                atft-perspective-camera\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createCamera\n                            \n                            \n                                    Public\n                                updateAspectRatio\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                far\n                            \n                            \n                                fov\n                            \n                            \n                                near\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        far\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fov\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        near\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCamera()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAspectRatio(aspect: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/camera/perspective-camera.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aspect\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport {AbstractCamera} from './abstract-camera';\nimport * as THREE from 'three';\nimport {RendererService} from '../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-perspective-camera',\n  providers: [{provide: AbstractCamera, useExisting: forwardRef(() => PerspectiveCameraComponent)}],\n  template: ''\n})\nexport class PerspectiveCameraComponent extends AbstractCamera {\n\n  @Input() fov: number;\n  @Input() near: number;\n  @Input() far: number;\n\n  constructor(\n    protected rendererService: RendererService\n  ) {\n    super(rendererService);\n  }\n\n  protected createCamera(): void {\n    // console.log('PerspectiveCameraComponent.createCamera');\n    // let aspectRatio = undefined; // Updated later\n    this.camera = new THREE.PerspectiveCamera(\n      this.fov,\n      undefined,\n      this.near,\n      this.far\n    );\n  }\n\n  public updateAspectRatio(aspect: number) {\n    // console.log('PerspectiveCameraComponent.updateAspectRatio: ' + aspect);\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PerspectiveCameraComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaneMeshComponent.html":{"url":"components/PlaneMeshComponent.html","title":"component - PlaneMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PlaneMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => PlaneMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-plane-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                height\n                            \n                            \n                                heightSegments\n                            \n                            \n                                width\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:24\n                            \n                        \n                \n                    \n                        Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        heightSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:36\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Default value : 1.0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:18\n                            \n                        \n                \n                    \n                        Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:30\n                            \n                        \n                \n                    \n                        Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/plane-mesh.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-plane-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => PlaneMeshComponent)}],\n  template: ''\n})\nexport class PlaneMeshComponent extends AbstractMesh {\n\n  /**\n   * Width; that is, the length of the edges parallel to the X axis. Optional; defaults to 1.\n   */\n  @Input()\n  width = 1.0;\n\n  /**\n   * Height; that is, the length of the edges parallel to the Y axis. Optional; defaults to 1.\n   */\n  @Input()\n  height = 1.0;\n\n  /**\n   * Number of segmented rectangular faces along the width of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  widthSegments = 1;\n\n  /**\n   * Number of segmented rectangular faces along the height of the sides. Optional; defaults to 1.\n   */\n  @Input()\n  heightSegments = 1;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    const geometry = new THREE.PlaneBufferGeometry(this.width, this.height, this.widthSegments, this.heightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaneMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PointLightComponent.html":{"url":"components/PointLightComponent.html","title":"component - PointLightComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PointLightComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/light/point-light.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => PointLightComponent) }\n                \n            \n\n\n            \n                selector\n                atft-point-light\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                castShadow\n                            \n                            \n                                color\n                            \n                            \n                                distance\n                            \n                            \n                                intensity\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        distance\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        intensity\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/light/point-light.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {appliedColor} from '../../util';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-point-light',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => PointLightComponent)}],\n  template: ''\n})\nexport class PointLightComponent extends AbstractObject3D {\n\n  @Input() color = 0xffffff;\n  @Input() intensity = 1;\n  @Input() distance = 500;\n  @Input() castShadow = false;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance() {\n    const light = new THREE.PointLight(appliedColor(this.color), this.intensity, this.distance);\n\n    if (this.castShadow === true) {\n      light.castShadow = this.castShadow;\n      // TODO: props\n      light.shadow.mapSize.width = 1024;\n      light.shadow.mapSize.height = 1024;\n      light.shadow.camera.near = 0.5;\n      light.shadow.camera.far = 500;\n      light.shadow.bias = -0.001;\n      light.shadow.radius = 1;\n    }\n\n    return light;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'PointLightComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/Rad2DegPipe.html":{"url":"pipes/Rad2DegPipe.html","title":"pipe - Rad2DegPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  Rad2DegPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/atft/src/lib/pipe/rad2deg.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        rad2deg\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(radians: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/pipe/rad2deg.pipe.ts:12\n                \n            \n\n\n            \n                \n                    Converts radians to degrees\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    radians\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Radians\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'rad2deg'\n})\nexport class Rad2DegPipe implements PipeTransform {\n\n  /**\n   * Converts radians to degrees\n   * @param radians Radians\n   */\n  transform(radians: number): number {\n    return radians * (180 / Math.PI);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterCameraDirective.html":{"url":"directives/RaycasterCameraDirective.html","title":"directive - RaycasterCameraDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterCameraDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-camera]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractCamera, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractCamera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-camera.directive.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-camera]'})\nexport class RaycasterCameraDirective implements AfterViewInit {\n\n  constructor(\n    private host: AbstractCamera,\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.setCamera(this.host);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterEnableDirective.html":{"url":"directives/RaycasterEnableDirective.html","title":"directive - RaycasterEnableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterEnableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-enable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-enable.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {RaycasterService} from './raycaster.service';\n\n@Directive({selector: '[atft-raycaster-enable]'})\nexport class RaycasterEnableDirective implements AfterViewInit {\n\n  constructor(\n    private raycasterService: RaycasterService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.enable();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/RaycasterGroupDirective.html":{"url":"directives/RaycasterGroupDirective.html","title":"directive - RaycasterGroupDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  RaycasterGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n        \n\n            \n                Description\n            \n            \n                Only components marked as atft-raycaster-group emit raycaster events.\nNOTE: All childs are also considered by raycaster (very usefull, for composite components).\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-raycaster-group]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onMouseDown\n                            \n                            \n                                    Private\n                                onMouseEnter\n                            \n                            \n                                    Private\n                                onMouseExit\n                            \n                            \n                                    Private\n                                subscribeEvents\n                            \n                            \n                                    Private\n                                unSubscribeEvents\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                mouseDown\n                            \n                            \n                                mouseEnter\n                            \n                            \n                                mouseExit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: AbstractObject3D, raycasterService: RaycasterService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        raycasterService\n                                                  \n                                                        \n                                                                        RaycasterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        mouseDown\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseEnter\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mouseExit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:14\n                            \n                        \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseDown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseEnter()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseExit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseExit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unSubscribeEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unSubscribeEvents()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster-group.directive.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, EventEmitter, OnDestroy, Output} from '@angular/core';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterService} from './raycaster.service';\nimport {RaycasterEvent} from './raycaster-event';\n\n/**\n * Only components marked as atft-raycaster-group emit raycaster events.\n * NOTE: All childs are also considered by raycaster (very usefull, for composite components).\n */\n@Directive({selector: '[atft-raycaster-group]'})\nexport class RaycasterGroupDirective implements AfterViewInit, OnDestroy {\n\n  @Output() mouseEnter = new EventEmitter>();\n  @Output() mouseExit = new EventEmitter>();\n  @Output() mouseDown = new EventEmitter>();\n\n  constructor(\n    private host: AbstractObject3D,\n    private raycasterService: RaycasterService\n  ) {\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseExit = this.onMouseExit.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n  }\n\n  ngAfterViewInit(): void {\n    this.raycasterService.addGroup(this.host);\n    this.subscribeEvents();\n  }\n\n  private subscribeEvents() {\n    const obj = this.host.getObject();\n    obj.addEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n    obj.addEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n    obj.addEventListener(RaycasterEvent.mouseDown, this.onMouseDown);\n  }\n\n  private unSubscribeEvents() {\n    const obj = this.host.getObject();\n    if (obj) {\n      obj.removeEventListener(RaycasterEvent.mouseEnter, this.onMouseEnter);\n      obj.removeEventListener(RaycasterEvent.mouseExit, this.onMouseExit);\n      obj.removeEventListener(RaycasterEvent.mouseDown, this.onMouseDown);\n    }\n  }\n\n  private onMouseExit() {\n    this.mouseExit.emit(this.host);\n  }\n\n  private onMouseEnter() {\n    this.mouseEnter.emit(this.host);\n  }\n\n  private onMouseDown() {\n    this.mouseDown.emit(this.host);\n  }\n\n  ngOnDestroy(): void {\n    this.unSubscribeEvents();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RaycasterService.html":{"url":"injectables/RaycasterService.html","title":"injectable - RaycasterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RaycasterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/raycaster/raycaster.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                enabled\n                            \n                            \n                                    Private\n                                groups\n                            \n                            \n                                    Private\n                                paused\n                            \n                            \n                                    Private\n                                raycaster\n                            \n                            \n                                    Private\n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addGroup\n                            \n                            \n                                    Public\n                                disable\n                            \n                            \n                                    Public\n                                enable\n                            \n                            \n                                    Private\n                                getFirstIntersectedGroup\n                            \n                            \n                                    Private\n                                isReady\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                onMouseDown\n                            \n                            \n                                    Private\n                                onMouseMove\n                            \n                            \n                                    Private\n                                onTouchStart\n                            \n                            \n                                    Public\n                                pause\n                            \n                            \n                                    Public\n                                resume\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Private\n                                subscribe\n                            \n                            \n                                    Private\n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(group: AbstractObject3D)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                            AbstractObject3D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enable()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFirstIntersectedGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstIntersectedGroup(x, y)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Object3D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isReady(ignorePaused?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ignorePaused\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseDown\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseDown(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onMouseMove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onMouseMove(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            onTouchStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onTouchStart(event: TouchEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TouchEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            pause\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pause()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resume\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resume()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            subscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            groups\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array>\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            paused\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            raycaster\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new THREE.Raycaster()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.Object3D\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isEnabled\n                    \n                \n\n                \n                    \n                        getisEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/raycaster/raycaster.service.ts:61\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport {AbstractObject3D} from '../object/abstract-object-3d';\nimport {RaycasterEvent} from './raycaster-event';\n\n\n@Injectable()\nexport class RaycasterService implements OnDestroy {\n\n  private raycaster = new THREE.Raycaster();\n  private selected: THREE.Object3D;\n  private enabled = false;\n  private camera: AbstractCamera;\n  private groups: Array> = [];\n  private paused = false;\n\n\n  constructor() {\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.subscribe();\n  }\n\n  ngOnDestroy() {\n    this.disable();\n    this.unsubscribe();\n  }\n\n  private subscribe() {\n    window.addEventListener('mousemove', this.onMouseMove);\n    window.addEventListener('mousedown', this.onMouseDown);\n    window.addEventListener('touchstart', this.onTouchStart);\n  }\n\n  private unsubscribe() {\n    // console.log('unsubscribe raycaster');\n    window.removeEventListener('mousemove', this.onMouseMove);\n    window.removeEventListener('mousedown', this.onMouseDown);\n    window.removeEventListener('touchstart', this.onTouchStart);\n  }\n\n  public enable() {\n    this.enabled = true;\n  }\n\n  public disable() {\n    this.enabled = false;\n  }\n\n  public pause() {\n    this.paused = true;\n  }\n\n  public resume() {\n    this.paused = false;\n  }\n\n\n  get isEnabled() {\n    return this.enabled;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    // console.log('Add camera to raycaster', camera);\n    this.camera = camera;\n  }\n\n  public addGroup(group: AbstractObject3D) {\n    // console.log('RaycasterService.addGroup', group.name, group);\n    this.groups.push(group);\n  }\n\n  private onMouseMove(event) {\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (!this.selected || this.selected !== i) {\n      if (this.selected) {\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseExit});\n        this.selected = null;\n      }\n      if (i) {\n        this.selected = i;\n        this.selected.dispatchEvent({type: RaycasterEvent.mouseEnter});\n      }\n    }\n\n  }\n\n  private onMouseDown(event) {\n    if (!this.isReady(true)) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.layerX, event.layerY);\n    if (i) {\n      i.dispatchEvent({type: 'mouseDown'});\n    }\n  }\n\n\n  private onTouchStart(event: TouchEvent) {\n    // console.log(event);\n    if (!this.isReady()) {\n      return;\n    }\n    event.preventDefault();\n    const i = this.getFirstIntersectedGroup(event.touches[0].clientX, event.touches[0].clientY);\n    if (i) {\n      i.dispatchEvent({type: 'mouseDown'});\n    }\n  }\n\n  private isReady(ignorePaused?: boolean) {\n    return this.enabled\n      && (ignorePaused || !this.paused)\n      && this.camera\n      && this.camera.camera\n      && this.groups\n      && this.groups.length > 0;\n  }\n\n  private getFirstIntersectedGroup(x, y): THREE.Object3D {\n    x = (x / window.innerWidth) * 2 - 1;\n    y = -(y / window.innerHeight) * 2 + 1;\n    const mouseVector = new THREE.Vector3(x, y, 0.5);\n    this.raycaster.setFromCamera(mouseVector, this.camera.camera);\n\n    // loop across all groups. Try to find the group with nearest distance.\n    let nearestIntersection: THREE.Intersection;\n    let nearestGroup: THREE.Object3D;\n    for (let k = 0; k  0 && (!nearestIntersection || nearestIntersection.distance > intersection[0].distance)) {\n        nearestIntersection = intersection[0];\n        nearestGroup = i;\n      }\n    }\n\n    // return the group with nearest distance\n    if (nearestGroup) {\n      return nearestGroup;\n    } else {\n      return;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RendererCanvasComponent.html":{"url":"components/RendererCanvasComponent.html","title":"component - RendererCanvasComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RendererCanvasComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/renderer/renderer-canvas.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                atft-renderer-canvas\n            \n\n            \n                styleUrls\n                ./renderer-canvas.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./renderer-canvas.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canvasRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableCss3d\n                            \n                            \n                                enableWebGl\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    renderPane\n                                \n                                \n                                    canvas\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableCss3d\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableWebGl\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:51\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canvasRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('canvas', {static: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        renderPane\n                    \n                \n\n                \n                    \n                        getrenderPane()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:42\n                                \n                            \n                    \n                        \n                                The render pane on which the scene is rendered.\nCurrently, only the WebGL renderer with a canvas is used in this\nimplementation, so this property will always be an ElementRef to the\nunderlying  element.\n\n\n                                \n                                        Example :\n                                            \n                                                This property can be used to restrict the orbit control (i.e. the\narea which is listened for mouse move and zoom events) to the rendering pane\n                                            \n                                \n                                \n                                    Returns :         ElementRef\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        canvas\n                    \n                \n\n                \n                    \n                        getcanvas()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/renderer/renderer-canvas.component.ts:46\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {AfterViewInit, Component, ElementRef, HostListener, Input, ViewChild} from '@angular/core';\nimport {RendererService} from './renderer.service';\n\n@Component({\n  selector: 'atft-renderer-canvas',\n  templateUrl: './renderer-canvas.component.html',\n  styleUrls: ['./renderer-canvas.component.scss']\n})\nexport class RendererCanvasComponent implements AfterViewInit {\n\n  @ViewChild('canvas', {static: true})\n  private canvasRef: ElementRef;\n\n  @Input()\n  enableWebGl = true;\n\n  @Input()\n  enableCss3d = true;\n\n\n  constructor(\n    private rendererService: RendererService\n  ) {\n    // console.log('RendererComponent.constructor');\n    this.onResize = this.onResize.bind(this);\n  }\n\n  ngAfterViewInit() {\n    // console.log('RendererComponent.ngAfterViewInit');\n    this.rendererService.initialize(this.canvas, this.enableWebGl, this.enableCss3d);\n  }\n\n  /**\n   * The render pane on which the scene is rendered.\n   * Currently, only the WebGL renderer with a canvas is used in this\n   * implementation, so this property will always be an ElementRef to the\n   * underlying  element.\n   *\n   * @example This property can be used to restrict the orbit control (i.e. the\n   * area which is listened for mouse move and zoom events) to the rendering pane\n   */\n  public get renderPane(): ElementRef {\n    return this.canvasRef;\n  }\n\n  private get canvas(): HTMLCanvasElement {\n    return this.canvasRef.nativeElement;\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event) {\n    // strange, but single 100% resizing has unexpected behaviour with flex CSS\n    // as workaround - resettling to 100 pixels, then to 100%\n    this.rendererService.resize(this.canvas, '100px');\n    this.rendererService.resize(this.canvas, '100%');\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n                \n                    ./renderer-canvas.component.scss\n                \n                :host {\n  display: flex;\n  flex: 1;\n}\n\ncanvas {\n  flex: 1;\n  outline: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'RendererCanvasComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RendererService.html":{"url":"injectables/RendererService.html","title":"injectable - RendererService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RendererService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/renderer/renderer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                aspect\n                            \n                            \n                                    Private\n                                camera\n                            \n                            \n                                    Private\n                                css3dRenderer\n                            \n                            \n                                    Private\n                                enableCss3d\n                            \n                            \n                                    Private\n                                enableWebGl\n                            \n                            \n                                    Private\n                                init\n                            \n                            \n                                    Private\n                                scene\n                            \n                            \n                                    Private\n                                webGlRenderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateAspectRatio\n                            \n                            \n                                    Public\n                                initialize\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                render\n                            \n                            \n                                    Public\n                                resize\n                            \n                            \n                                    Public\n                                setCamera\n                            \n                            \n                                    Public\n                                setScene\n                            \n                            \n                                    Private\n                                updateChildCamerasAspectRatio\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/renderer/renderer.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            initialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(canvas: HTMLCanvasElement, enableWebGl: boolean, enableCss3d: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    enableWebGl\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    enableCss3d\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            render\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    render()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            resize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resize(canvas: HTMLCanvasElement, size: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    size\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCamera\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCamera(camera: AbstractCamera)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    camera\n                                    \n                                            AbstractCamera\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setScene\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setScene(scene: SceneComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                                SceneComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            updateChildCamerasAspectRatio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateChildCamerasAspectRatio(canvas: HTMLCanvasElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    canvas\n                                    \n                                            HTMLCanvasElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            aspect\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            camera\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AbstractCamera\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            css3dRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CSS3DRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enableCss3d\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            enableWebGl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            init\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            scene\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SceneComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            webGlRenderer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     THREE.WebGLRenderer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/renderer/renderer.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport {SceneComponent} from '../object/scene.component';\nimport {AbstractCamera} from '../camera/abstract-camera';\nimport * as THREE from 'three';\nimport {CSS3DRenderer} from 'three/examples/jsm/renderers/CSS3DRenderer';\nimport {StatsService} from '../stats/stats.service';\n\n@Injectable()\nexport class RendererService implements OnDestroy {\n  private init = false;\n\n  private scene: SceneComponent;\n  private camera: AbstractCamera;\n  private enableWebGl: boolean;\n  private enableCss3d: boolean;\n  private webGlRenderer: THREE.WebGLRenderer;\n  // TODO:\n  private css3dRenderer: CSS3DRenderer;\n\n  private aspect: number;\n\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngOnDestroy() {\n\n  }\n\n\n  public setScene(scene: SceneComponent) {\n    this.scene = scene;\n  }\n\n  public setCamera(camera: AbstractCamera) {\n    this.camera = camera;\n    this.camera.updateAspectRatio(this.aspect);\n  }\n\n  public render() {\n    if (this.init && this.scene && this.camera) {\n      //  console.log('render');\n      if (this.enableWebGl) {\n        this.webGlRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      if (this.enableCss3d) {\n        this.css3dRenderer.render(this.scene.getObject(), this.camera.camera);\n      }\n      this.statsService.update();\n    }\n  }\n\n  public initialize(canvas: HTMLCanvasElement, enableWebGl: boolean, enableCss3d: boolean) {\n    // console.log('RendererComponent.initialize');\n\n    this.enableWebGl = enableWebGl;\n    this.enableCss3d = enableCss3d;\n\n    if (enableWebGl) {\n      // TODO: Multiple renderers\n      this.webGlRenderer = new THREE.WebGLRenderer({\n        canvas: canvas,\n        antialias: true,\n        alpha: true\n      });\n      this.webGlRenderer.setPixelRatio(window.devicePixelRatio);\n      this.webGlRenderer.setSize(canvas.clientWidth, canvas.clientHeight, true);\n\n      // TODO: props\n      this.webGlRenderer.shadowMap.enabled = false;\n      this.webGlRenderer.shadowMap.autoUpdate = false;\n      this.webGlRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n      this.webGlRenderer.setClearColor(0x000000, 0);\n      this.webGlRenderer.autoClear = true;\n      canvas.style.zIndex = '2';\n    }\n\n    if (enableCss3d) {\n      this.css3dRenderer = new CSS3DRenderer();\n      this.css3dRenderer.setSize(window.innerWidth, window.innerHeight);\n      this.css3dRenderer.domElement.style.position = 'absolute';\n      this.css3dRenderer.domElement.style.top = '0';\n      this.css3dRenderer.domElement.style.zIndex = '-1';\n      canvas.parentElement.appendChild(this.css3dRenderer.domElement);\n    }\n    // ------------------------------ END\n\n    this.updateChildCamerasAspectRatio(canvas);\n    this.init = true;\n    this.render();\n  }\n\n\n  public resize(canvas: HTMLCanvasElement, size: string) {\n    canvas.style.width = size;\n    canvas.style.height = size;\n    canvas.style.border = 'none';\n    const width = canvas.clientWidth;\n    const height = canvas.clientHeight;\n\n    if (this.enableWebGl) {\n      this.webGlRenderer.setSize(width, height, true);\n    }\n\n    if (this.enableCss3d) {\n      this.css3dRenderer.setSize(width, height);\n    }\n    this.updateChildCamerasAspectRatio(canvas);\n    this.render();\n  }\n\n  private calculateAspectRatio(canvas: HTMLCanvasElement) {\n    const height = canvas.clientHeight;\n    if (height === 0) {\n      return 0;\n    }\n    this.aspect = canvas.clientWidth / canvas.clientHeight;\n  }\n\n  private updateChildCamerasAspectRatio(canvas: HTMLCanvasElement) {\n    this.calculateAspectRatio(canvas);\n    if (this.camera) {\n      this.camera.updateAspectRatio(this.aspect);\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SVGLoaderComponent.html":{"url":"components/SVGLoaderComponent.html","title":"component - SVGLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SVGLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/loader/svg-loader.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractModelLoader\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => SVGLoaderComponent) }\n                \n            \n\n\n            \n                selector\n                atft-svg-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _overrideMaterialColor\n                            \n                            \n                                    Private\n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                centered\n                            \n                            \n                                depthWrite\n                            \n                            \n                                material\n                            \n                            \n                                maxX\n                            \n                            \n                                maxY\n                            \n                            \n                                overrideMaterialColor\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    overrideMaterialColor\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxX\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxY\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _overrideMaterialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SVGLoader()\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        overrideMaterialColor\n                    \n                \n\n\n                \n                    \n                        setoverrideMaterialColor(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/loader/svg-loader.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractModelLoader} from './abstract-model-loader';\nimport {SVGLoader} from 'three/examples/jsm/loaders/SVGLoader';\n\nimport * as THREE from 'three';\nimport {appliedColor, appliedMaterial} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {scaleToFit} from '../../util/scale-to-fit';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-svg-loader',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => SVGLoaderComponent)}],\n  template: ''\n})\nexport class SVGLoaderComponent extends AbstractModelLoader {\n\n  @Input()\n  get overrideMaterialColor(): number {\n    return this._overrideMaterialColor;\n  }\n\n  set overrideMaterialColor(value: number) {\n    this._overrideMaterialColor = value;\n    this.startLoading();\n  }\n\n  private _overrideMaterialColor: number = undefined;\n\n\n  @Input()\n  material = 'basic';\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  maxX: number;\n\n  @Input()\n  maxY: number;\n\n  @Input()\n  centered = true;\n\n  private loader = new SVGLoader();\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected async loadLazyObject() {\n    // console.log('ObjectLoaderComponent.loadLazyObject');\n    return new Promise((resolve, reject) => {\n      this.loader.load(this.model, data => {\n          const paths = data.paths;\n          const group = new THREE.Group();\n\n          for (let i = 0; i \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SVGLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/scene.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => SceneComponent) }\n                \n            \n\n\n            \n                selector\n                atft-scene\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                fog\n                            \n                            \n                                fogColor\n                            \n                            \n                                fogFar\n                            \n                            \n                                fogNear\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/scene.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Default value : 0xffffff\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fog\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fogColor\n                    \n                \n                \n                    \n                        Default value : 0xa0a0a0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fogFar\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fogNear\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/scene.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/scene.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Scene\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from './abstract-object-3d';\nimport {appliedColor} from '../util/applied-color';\nimport {RendererService} from '../renderer/renderer.service';\nimport {AnimationService} from '../animation';\n\n@Component({\n  selector: 'atft-scene',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => SceneComponent)}],\n  template: ''\n})\nexport class SceneComponent extends AbstractObject3D {\n\n  @Input() background = 0xffffff;\n  @Input() fog = false;\n  @Input() fogColor = 0xa0a0a0;\n  @Input() fogNear = 10;\n  @Input() fogFar = 500;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n    // TODO: directive?\n    rendererService.setScene(this);\n  }\n\n  protected newObject3DInstance(): THREE.Scene {\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(appliedColor(this.background));\n    if (this.fog === true) {\n      scene.fog = new THREE.Fog(appliedColor(this.fogColor), this.fogNear, this.fogFar);\n    }\n    return scene;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerBarrelActorComponent.html":{"url":"components/ServerBarrelActorComponent.html","title":"component - ServerBarrelActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerBarrelActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ServerBarrelActorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-server-barrel-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n        \n\n        \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef} from '@angular/core';\nimport {AbstractObject3D} from '../../../object/abstract-object-3d';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-barrel-actor',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => ServerBarrelActorComponent)}],\n  template: `\n      \n\n          \n          \n              \n              \n\n              \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerBarrelActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerBarrelActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerCompactActorComponent.html":{"url":"components/ServerCompactActorComponent.html","title":"component - ServerCompactActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerCompactActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ServerCompactActorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-server-compact-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef} from '@angular/core';\nimport {AbstractObject3D} from '../../../object/abstract-object-3d';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-compact-actor',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => ServerCompactActorComponent)}],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerCompactActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerCompactActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerIconActorComponent.html":{"url":"components/ServerIconActorComponent.html","title":"component - ServerIconActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerIconActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ServerIconActorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-server-icon-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n        \n\n    \n\n    \n    \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef} from '@angular/core';\nimport {AbstractObject3D} from '../../../object/abstract-object-3d';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-icon-actor',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => ServerIconActorComponent)}],\n  template: `\n      \n\n          \n          \n              \n              \n\n          \n\n          \n          \n\n      \n  `\n})\nexport class ServerIconActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerIconActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ServerStandActorComponent.html":{"url":"components/ServerStandActorComponent.html","title":"component - ServerStandActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ServerStandActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => ServerStandActorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-server-stand-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef} from '@angular/core';\nimport {AbstractObject3D} from '../../../object/abstract-object-3d';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-server-stand-actor',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => ServerStandActorComponent)}],\n  template: `\n      \n\n          \n          \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class ServerStandActorComponent extends AbstractServerActor {\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                    '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'ServerStandActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SphereMeshComponent.html":{"url":"components/SphereMeshComponent.html","title":"component - SphereMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SphereMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => SphereMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-sphere-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hightSegments\n                            \n                            \n                                radius\n                            \n                            \n                                widthSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hightSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        widthSegments\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/sphere-mesh.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, Optional, SkipSelf } from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-sphere-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => SphereMeshComponent)}],\n  template: ''\n})\nexport class SphereMeshComponent extends AbstractMesh {\n\n  @Input() radius: number;\n  @Input() widthSegments: number;\n  @Input() hightSegments: number;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    // console.log('SphereMeshComponent.newObject3DInstance');\n    const geometry = new THREE.SphereGeometry(this.radius, this.widthSegments, this.hightSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'SphereMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/StatsAutoShowDirective.html":{"url":"directives/StatsAutoShowDirective.html","title":"directive - StatsAutoShowDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  StatsAutoShowDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats-auto-show.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [atft-stats-auto-show]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statsService: StatsService)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statsService\n                                                  \n                                                        \n                                                                        StatsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats-auto-show.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive} from '@angular/core';\nimport {StatsService} from './stats.service';\n\n@Directive({selector: '[atft-stats-auto-show]'})\nexport class StatsAutoShowDirective implements AfterViewInit {\n\n  constructor(\n    private statsService: StatsService\n  ) {\n\n  }\n\n  ngAfterViewInit(): void {\n    this.statsService.create();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatsService.html":{"url":"injectables/StatsService.html","title":"injectable - StatsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/atft/src/lib/stats/stats.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stats\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                toggle\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/stats/stats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Stats\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/stats/stats.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, OnDestroy} from '@angular/core';\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\n\n\n@Injectable()\nexport class StatsService implements OnDestroy {\n\n  private stats: Stats;\n\n  constructor() {\n    document.body.addEventListener('keydown', event => {\n      if (event.altKey && event.key === 's') {\n        this.toggle();\n      }\n    });\n  }\n\n  public update() {\n    if (this.stats) {\n      this.stats.update();\n    }\n  }\n\n\n  public toggle() {\n    (this.stats ? this.remove() : this.create());\n  }\n\n  public create() {\n    if (!this.stats) {\n      this.stats = Stats();\n      document.body.appendChild(this.stats.dom);\n    }\n  }\n\n  public remove() {\n    if (this.stats) {\n      this.stats.dom.remove();\n      this.stats.dom = null;\n      this.stats = null;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.remove();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextMeshComponent.html":{"url":"components/TextMeshComponent.html","title":"component - TextMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/text/text-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractLazyObject3D\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => TextMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-text-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _materialColor\n                            \n                            \n                                    Private\n                                _text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getMaterial\n                            \n                            \n                                    Protected\n                                    Async\n                                loadLazyObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bevelEnabled\n                            \n                            \n                                bevelOffset\n                            \n                            \n                                bevelSegments\n                            \n                            \n                                bevelSize\n                            \n                            \n                                bevelThickness\n                            \n                            \n                                castShadow\n                            \n                            \n                                centered\n                            \n                            \n                                curveSegments\n                            \n                            \n                                depthWrite\n                            \n                            \n                                fontUrl\n                            \n                            \n                                height\n                            \n                            \n                                material\n                            \n                            \n                                materialColor\n                            \n                            \n                                receiveShadow\n                            \n                            \n                                size\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    materialColor\n                                \n                                \n                                    text\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:79\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        bevelEnabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelOffset\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSegments\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelSize\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        bevelThickness\n                    \n                \n                \n                    \n                        Default value : 0.1\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        castShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        centered\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:79\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        curveSegments\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        depthWrite\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:76\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fontUrl\n                    \n                \n                \n                    \n                        Default value : './assets/font/helvetiker_regular.typeface.json'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        height\n                    \n                \n                \n                    \n                        Default value : 0.3\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        material\n                    \n                \n                \n                    \n                        Default value : 'basic'\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        receiveShadow\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:33\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMaterial\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMaterial()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Material\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            loadLazyObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLazyObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _materialColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xDADADA\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _text\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Text'\n                        \n                    \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        materialColor\n                    \n                \n\n                \n                    \n                        getmaterialColor()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:27\n                                \n                            \n\n                \n                    \n                        setmaterialColor(materialColor: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            materialColor\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n\n                \n                    \n                        gettext()\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:37\n                                \n                            \n\n                \n                    \n                        settext(text: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/atft/src/lib/object/text/text-mesh.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            text\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {AbstractLazyObject3D} from '../abstract-lazy-object-3d';\nimport {appliedMaterial} from '../../util';\nimport {fixCenter} from '../../util/fix-center';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-text-mesh',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => TextMeshComponent)}],\n  template: ''\n})\nexport class TextMeshComponent extends AbstractLazyObject3D {\n\n  @Input()\n  material = 'basic';\n\n\n  private _materialColor = 0xDADADA;\n  @Input()\n  set materialColor(materialColor: number) {\n    // console.log('change color', materialColor);\n    this._materialColor = materialColor;\n    this.startLoading();\n  }\n  get materialColor() {\n    return this._materialColor;\n  }\n\n  private _text = 'Text';\n  @Input()\n  set text(text: string) {\n    this._text = text;\n    this.startLoading();\n  }\n  get text() {\n    return this._text;\n  }\n\n\n  @Input()\n  size = 10;\n\n  @Input()\n  height = 0.3;\n\n  @Input()\n  curveSegments = 2;\n\n  @Input()\n  bevelEnabled = false;\n\n  @Input()\n  bevelThickness = 0.1;\n\n  @Input()\n  bevelSize = 0.1;\n\n  @Input()\n  bevelOffset = 0;\n\n  @Input()\n  bevelSegments = 1;\n\n  @Input()\n  fontUrl = './assets/font/helvetiker_regular.typeface.json';\n\n  @Input()\n  castShadow = true;\n\n  @Input()\n  receiveShadow = true;\n\n  @Input()\n  depthWrite = true;\n\n  @Input()\n  centered = true;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  public getMaterial(): THREE.Material {\n    return appliedMaterial(this.materialColor, this.material, this.depthWrite);\n  }\n\n  protected async loadLazyObject(): Promise {\n    // console.log('TextMeshComponent.loadLazyObject');\n\n    return new Promise(resolve => {\n      const loader = new THREE.FontLoader();\n      loader.load(this.fontUrl, font => {\n\n        const geometry = new THREE.TextGeometry(this.text, {\n          font: font,\n          size: this.size,\n          height: this.height,\n          curveSegments: this.curveSegments,\n          bevelEnabled: this.bevelEnabled,\n          bevelThickness: this.bevelThickness,\n          bevelSize: this.bevelSize,\n          bevelOffset: this.bevelOffset,\n          bevelSegments: this.bevelOffset\n        });\n        const material = this.getMaterial();\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.castShadow = this.castShadow;\n        mesh.receiveShadow = this.receiveShadow;\n\n        if (this.centered) {\n          fixCenter(mesh);\n        }\n        resolve(mesh);\n      });\n    });\n\n\n  }\n\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TorusMeshComponent.html":{"url":"components/TorusMeshComponent.html","title":"component - TorusMeshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TorusMeshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AbstractMesh\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => TorusMeshComponent) }\n                \n            \n\n\n            \n                selector\n                atft-torus-mesh\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arc\n                            \n                            \n                                radialSegments\n                            \n                            \n                                radius\n                            \n                            \n                                tube\n                            \n                            \n                                tubularSegments\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererService: RendererService, parent: AbstractObject3D)\n                    \n                \n                        \n                            \n                                Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererService\n                                                  \n                                                        \n                                                                        RendererService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                    AbstractObject3D\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arc\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Math.PI * 2\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radialSegments\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radius\n                    \n                \n                \n                    \n                        Default value : 0.4\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:17\n                            \n                        \n                \n                    \n                        Radius of the torus, from the center of the torus to the center of the tube\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tube\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:23\n                            \n                        \n                \n                    \n                        Radius of the tube.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tubularSegments\n                    \n                \n                \n                    \n                        Default value : 6\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Defined in projects/atft/src/lib/object/mesh/torus-mesh.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Mesh\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, forwardRef, Input, Optional, SkipSelf} from '@angular/core';\nimport * as THREE from 'three';\nimport {AbstractMesh} from './abstract-mesh-3d';\nimport {AbstractObject3D} from '../abstract-object-3d';\nimport {RendererService} from '../../renderer/renderer.service';\n\n@Component({\n  selector: 'atft-torus-mesh',\n  providers: [{ provide: AbstractObject3D, useExisting: forwardRef(() => TorusMeshComponent) }],\n  template: ''\n})\nexport class TorusMeshComponent extends AbstractMesh {\n\n  /**\n   * Radius of the torus, from the center of the torus to the center of the tube\n   */\n  @Input() radius = 0.4;\n\n  /**\n   * Radius of the tube.\n   */\n  @Input()\n  tube: number;\n\n  @Input()\n  radialSegments = 8;\n\n  @Input()\n  tubularSegments = 6;\n\n  @Input()\n  arc: number = Math.PI * 2;\n\n  constructor(\n    protected rendererService: RendererService,\n    @SkipSelf() @Optional() protected parent: AbstractObject3D\n  ) {\n    super(rendererService, parent);\n  }\n\n  protected newObject3DInstance(): THREE.Mesh {\n    this.radius *= 1;\n    this.tube *= 1;\n    this.radialSegments *= 1;\n    this.tubularSegments *= 1;\n\n    const geometry = new THREE.TorusGeometry(this.radius, this.tube,\n      this.radialSegments, this.tubularSegments);\n    const material = this.getMaterial();\n    const mesh = new THREE.Mesh(geometry, material);\n    this.applyShadowProps(mesh);\n    return mesh;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'TorusMeshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkstationActorComponent.html":{"url":"components/WorkstationActorComponent.html","title":"component - WorkstationActorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkstationActorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractServerActor\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: AbstractObject3D, useExisting: forwardRef(() => WorkstationActorComponent) }\n                \n            \n\n\n            \n                selector\n                atft-workstation-actor\n            \n\n\n\n            \n                template\n                \n\n    \n    \n        \n        \n        \n            \n            \n        \n    \n\n    \n    \n    \n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onDeselected\n                            \n                            \n                                    Public\n                                onSelected\n                            \n                            \n                                    Protected\n                                newObject3DInstance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                videoSrc\n                            \n                            \n                                label\n                            \n                            \n                                showFrame\n                            \n                            \n                                svgName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deselected\n                            \n                            \n                                render\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        videoSrc\n                    \n                \n                        \n                            \n                                    Defined in projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:7\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showFrame\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:24\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        svgName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:19\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        render\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:10\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:13\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onDeselected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onDeselected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSelected\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelected()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractServerActor\n\n                \n            \n            \n                \n                        Defined in         AbstractServerActor:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            newObject3DInstance\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    newObject3DInstance()\n                \n            \n\n\n            \n                \n                    Inherited from         EmptyComponent\n\n                \n            \n            \n                \n                        Defined in         EmptyComponent:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     THREE.Object3D\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0xffffff\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractServerActor\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractServerActor:21\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, forwardRef, Input} from '@angular/core';\nimport {AbstractObject3D} from '../../../object/abstract-object-3d';\nimport {AbstractServerActor} from './abstract-server-actor';\n\n@Component({\n  selector: 'atft-workstation-actor',\n  providers: [{provide: AbstractObject3D, useExisting: forwardRef(() => WorkstationActorComponent)}],\n  template: `\n      \n\n          \n          \n              \n              \n              \n                  \n                  \n              \n          \n\n          \n          \n          \n          \n      \n  `\n})\nexport class WorkstationActorComponent extends AbstractServerActor {\n\n  @Input()\n  videoSrc;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    '\n    var COMPONENTS = [{'name': 'AxesHelperComponent', 'selector': 'atft-axes-helper'},{'name': 'BoxMeshComponent', 'selector': 'atft-box-mesh'},{'name': 'Css3dVideoMeshComponent', 'selector': 'atft-css3d-video-mesh'},{'name': 'CylinderMeshComponent', 'selector': 'atft-cylinder-mesh'},{'name': 'DirectionalLightComponent', 'selector': 'atft-directional-light'},{'name': 'EmptyComponent', 'selector': 'atft-empty'},{'name': 'FrameMeshComponent', 'selector': 'atft-frame-mesh'},{'name': 'GridHelperComponent', 'selector': 'atft-grid-helper'},{'name': 'GridMeshComponent', 'selector': 'atft-grid-mesh'},{'name': 'HemisphereLightComponent', 'selector': 'atft-hemisphere-light'},{'name': 'LayerActorComponent', 'selector': 'atft-layer-actor'},{'name': 'LineConnectorComponent', 'selector': 'atft-line-connector'},{'name': 'MapControlsComponent', 'selector': 'atft-map-controls'},{'name': 'MeshLineConnectorComponent', 'selector': 'atft-mesh-line-connector'},{'name': 'ObjectLoaderComponent', 'selector': 'atft-object-loader'},{'name': 'ObjLoaderComponent', 'selector': 'atft-obj-loader'},{'name': 'OrbitControlsComponent', 'selector': 'atft-orbit-controls'},{'name': 'PerspectiveCameraComponent', 'selector': 'atft-perspective-camera'},{'name': 'PlaneMeshComponent', 'selector': 'atft-plane-mesh'},{'name': 'PointLightComponent', 'selector': 'atft-point-light'},{'name': 'RendererCanvasComponent', 'selector': 'atft-renderer-canvas'},{'name': 'SceneComponent', 'selector': 'atft-scene'},{'name': 'ServerBarrelActorComponent', 'selector': 'atft-server-barrel-actor'},{'name': 'ServerCompactActorComponent', 'selector': 'atft-server-compact-actor'},{'name': 'ServerIconActorComponent', 'selector': 'atft-server-icon-actor'},{'name': 'ServerStandActorComponent', 'selector': 'atft-server-stand-actor'},{'name': 'SphereMeshComponent', 'selector': 'atft-sphere-mesh'},{'name': 'SVGLoaderComponent', 'selector': 'atft-svg-loader'},{'name': 'TextMeshComponent', 'selector': 'atft-text-mesh'},{'name': 'TorusMeshComponent', 'selector': 'atft-torus-mesh'},{'name': 'WorkstationActorComponent', 'selector': 'atft-workstation-actor'}];\n    var DIRECTIVES = [{'name': 'DashedDrawDirective', 'selector': '[atft-dashed-draw]'},{'name': 'RaycasterCameraDirective', 'selector': '[atft-raycaster-camera]'},{'name': 'RaycasterEnableDirective', 'selector': '[atft-raycaster-enable]'},{'name': 'RaycasterGroupDirective', 'selector': '[atft-raycaster-group]'},{'name': 'StatsAutoShowDirective', 'selector': '[atft-stats-auto-show]'}];\n    var ACTUAL_COMPONENT = {'name': 'WorkstationActorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog (atft library)\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog,\nand this project adheres to Semantic Versioning.\n[1.3.4] - 2020.09.21\nChanged\n\nDependency upgrade (including typescript, compiler, angular, storybook)\nDisable Ivy compiler\n\n[1.2.0] - 2019.10.31\nAdded\n\nSupport of multiple renderers: CSS3DRenderer and WebGlRenderer\nNew components\nAbstractCss3dMesh\nCss3dVideoMeshComponent\nWorkstationActorComponentChanged\n\n\n\nDeprecate ObjLoaderComponent's texturePath input attribute in favor of resourcePath (following Three.js' lead in this commit).\nFrom now on use )\nAdjusted \"Actors\" storybook\n\n\n[1.1.0] - 2019-09-27\nAdded\n\nInteractivity features:\nRaycasterService - allows to find objects intersections on mouse move/down. Emit object event.\nDirectives: atft-raycaster-camera, atft-raycaster-enable, atft-raycaster-group\n\n\nPerformance optimizations:\nRendererService - is responsible for the scene rendering. By default injected into all objects.\natft-raycaster-group - allows to group multiple hierarchical objects and emit event only on parent object (where directive is defined)\n\n\nAnimation features:\nAnimationService - is responsible for the animation frame preparation (emit animation event to all objects) and as last step - request rendering (emit render event for RendererService)\n\n\nData Center Actor module\nMultiple new demo stories in storybook\n\nInstall from NPM: https://www.npmjs.com/package/atft\n\n[1.0.2] - 2019-09-07\nAdded\n\nIntegrate Storybook.js for isolated component exploration and development\nNew demo scenes\nNew components for\nshadow\ndirect light\nconnector\nplane\nbox meshesChanged\n\n\n\nSwitch from Angular directives to components\nNew abstractions\n\n[0.1.0] - 2019-04-18\nSame as [0.0.3], see [0.0.3] for the reasons it was yanked.\n[0.0.3] - 2019-04-18 [YANKED]\nYanked due to patch version increase not adhering to semver. Also, due to the tag v0.0.3 already having been used for [0.0.2], which is confusing. From now on, atft library versions will match Git tags and GitHub releases.\nAdded\n\natft library: exposition of atft's public API by [@makimenko] fixing issue #39\n\n[0.0.2] - 2019-04-10\nAdded\n\natft library by [@makimenko] separating the Three.js bindings from the example code in `app.component.{html|ts|...}\nIt is published on NPM: https://www.npmjs.com/package/atft\n\nChangelog (example project)\nSince the example project is not meant to be used as a dependency, we will always leave it at version [0.0.0].\n[0.0.0]\nInitial and \"continuously updated\" version.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/layer/layer-actor.component.ts\n            \n            component\n            LayerActorComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/abstract-server-actor.ts\n            \n            class\n            AbstractServerActor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-barrel-actor.component.ts\n            \n            component\n            ServerBarrelActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-compact-actor.component.ts\n            \n            component\n            ServerCompactActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-icon-actor.component.ts\n            \n            component\n            ServerIconActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/server-stand-actor.component.ts\n            \n            component\n            ServerStandActorComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/actor/data-center/server/workstation-actor.component.ts\n            \n            component\n            WorkstationActorComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/animation/animation.service.ts\n            \n            injectable\n            AnimationService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/camera/perspective-camera.component.ts\n            \n            component\n            PerspectiveCameraComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/map-controls.component.ts\n            \n            component\n            MapControlsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/control/orbit-controls.component.ts\n            \n            component\n            OrbitControlsComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/effect/dashed-draw.directive.ts\n            \n            directive\n            DashedDrawDirective\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/line-connector.component.ts\n            \n            component\n            LineConnectorComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/connector/mesh-line-connector.component.ts\n            \n            component\n            MeshLineConnectorComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/axes-helper.component.ts\n            \n            component\n            AxesHelperComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/empty.component.ts\n            \n            component\n            EmptyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/helper/grid-helper.component.ts\n            \n            component\n            GridHelperComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/directional-light.component.ts\n            \n            component\n            DirectionalLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/hemisphere-light.component.ts\n            \n            component\n            HemisphereLightComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/light/point-light.component.ts\n            \n            component\n            PointLightComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/obj-loader.component.ts\n            \n            component\n            ObjLoaderComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/object-loader.component.ts\n            \n            component\n            ObjectLoaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/loader/svg-loader.component.ts\n            \n            component\n            SVGLoaderComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/box-mesh.component.ts\n            \n            component\n            BoxMeshComponent\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/css3d-video-mesh.component.ts\n            \n            component\n            Css3dVideoMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/cylinder-mesh.component.ts\n            \n            component\n            CylinderMeshComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/frame-mesh.component.ts\n            \n            component\n            FrameMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/grid-mesh.component.ts\n            \n            component\n            GridMeshComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/plane-mesh.component.ts\n            \n            component\n            PlaneMeshComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/sphere-mesh.component.ts\n            \n            component\n            SphereMeshComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/mesh/torus-mesh.component.ts\n            \n            component\n            TorusMeshComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/object/text/text-mesh.component.ts\n            \n            component\n            TextMeshComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/deg2rad.pipe.ts\n            \n            pipe\n            Deg2RadPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/pipe/rad2deg.pipe.ts\n            \n            pipe\n            Rad2DegPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-camera.directive.ts\n            \n            directive\n            RaycasterCameraDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-enable.directive.ts\n            \n            directive\n            RaycasterEnableDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster-group.directive.ts\n            \n            directive\n            RaycasterGroupDirective\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/raycaster/raycaster.service.ts\n            \n            injectable\n            RaycasterService\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer-canvas.component.ts\n            \n            component\n            RendererCanvasComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/renderer/renderer.service.ts\n            \n            injectable\n            RendererService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats-auto-show.directive.ts\n            \n            directive\n            StatsAutoShowDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/stats/stats.service.ts\n            \n            injectable\n            StatsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-color.ts\n            \n            function\n            appliedColor\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/applied-material.ts\n            \n            function\n            appliedMaterial\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/calculate-size.ts\n            \n            function\n            calculateSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/fix-center.ts\n            \n            function\n            fixCenter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/atft/src/lib/util/scale-to-fit.ts\n            \n            function\n            scaleToFit\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.1.4\n        \n            @angular/common : ^10.1.4\n        \n            @angular/compiler : ^10.1.4\n        \n            @angular/core : ^10.1.4\n        \n            @angular/forms : ^10.1.4\n        \n            @angular/platform-browser : ^10.1.4\n        \n            @angular/platform-browser-dynamic : ^10.1.4\n        \n            @angular/router : ^10.1.4\n        \n            core-js : ^3.6.5\n        \n            rxjs : ^6.6.3\n        \n            snyk : ^1.406.0\n        \n            three : ^0.121.1\n        \n            three.meshline : ^1.3.0\n        \n            zone.js : ~0.11.1\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RaycasterEvent   (projects/.../raycaster-event.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/raycaster/raycaster-event.ts\n    \n        \n            \n                \n                    \n                        \n                        RaycasterEvent\n                    \n                \n                        \n                            \n                                 mouseEnter\n                            \n                        \n                        \n                            \n                                Value : mouseEnter\n                            \n                        \n                        \n                            \n                                 mouseExit\n                            \n                        \n                        \n                            \n                                Value : mouseExit\n                            \n                        \n                        \n                            \n                                 mouseDown\n                            \n                        \n                        \n                            \n                                Value : mouseDown\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appliedColor   (projects/.../applied-color.ts)\n                        \n                        \n                            appliedMaterial   (projects/.../applied-material.ts)\n                        \n                        \n                            calculateSize   (projects/.../calculate-size.ts)\n                        \n                        \n                            fixCenter   (projects/.../fix-center.ts)\n                        \n                        \n                            scaleToFit   (projects/.../scale-to-fit.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/atft/src/lib/util/applied-color.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedColor\n                        \n                        \n                    \n                \n            \n            \n                \nappliedColor(color, defaultColor?)\n                \n            \n\n\n\n\n            \n                \n                    Fix color number binding issues\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    color\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Color number from binding input\n\n                                    \n                                \n                                \n                                    defaultColor\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        default value in case of binding issues\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/applied-material.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appliedMaterial\n                        \n                        \n                    \n                \n            \n            \n                \nappliedMaterial(materialColor, materialName?, depthWrite?: boolean)\n                \n            \n\n\n\n\n            \n                \n                    Creates material\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    materialColor\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        color\n\n                                    \n                                \n                                \n                                    materialName\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        material label as string\n\n                                    \n                                \n                                \n                                    depthWrite\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        enable depth write\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Material\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/calculate-size.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            calculateSize\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateSize(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     THREE.Vector3\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/fix-center.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fixCenter\n                        \n                        \n                    \n                \n            \n            \n                \nfixCenter(group)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/atft/src/lib/util/scale-to-fit.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            scaleToFit\n                        \n                        \n                    \n                \n            \n            \n                \nscaleToFit(group, max)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    max\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n \n\n\n\n\n\nAngular Template For Three.js (atft)\nLeverage Three.js in your Angular app using simple components:\n\n  \n    \n    \n    \n      \n      \n    \n  \nStorybook\nExplore provided Angular components in isolation!\nClick below to see the demo in a web browser:\n\n\n\nGoals of this repo\n\nImplement npm atft library\nBindings for Three.js\nSceneComponent with basic usage of scene, camera, lights, helpers, renderer\nIntegrated Three.js examples as components (e.g. OrbitControls, OBJLoader, ObjectLoader)\n\n\nDevelop and test library components in isolation via Storybook\n\nUsage in your Angular project\n\nSet up an Angular project and install dependencies:npm i three three.meshline atft --save\n\nImport library into your module:\nimport { AtftModule } from 'atft';\n...\n  imports: [\n    ...\n    AtftModule\n  ]\n ...\nUse atft library components in src/app.component.html:\n \n   \n     \n     \n     \n       \n       \n     \n   \n \n(optionally) if you want to fit 3D scene canvas into entire screen (horizontally and vertically):\nin src/styles.css:\n html, body {\n     height: 100%;\n     margin: 0;\n }  in src/app/app.component.css:\n :host {\n     height: 100%;\n     display: flex;\n } \n\nDevelopment\nBuild Library\n\ngit clone https://github.com/makimenko/angular-template-for-threejs.git\nnpm install\nng build atft\n\nRun Tests\n\nnpm test\n\nRun Storybook\nRun and watch locally: npm run storybook\nOur storybook config is in ./storybook and our stories in ./src/stories.\nSee the official Storybook.js documentation for more information.\nAPI Documentation\nFor mode details see API documentation\nContributors\n\n ComFreek\n makimenko\nSupported by JetBrains\n\nFeel free to join us! Just submit your ideas via pull-requests :) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Mihail Akimenko\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AtftAnimationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftCameraModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftConnectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftControlModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftDataCenterActorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftEffectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftHelperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLightModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftLoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftMeshModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftObjectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftPipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRaycasterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftRendererModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftStatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AtftTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AtftAnimationModule\n\n\n\ncluster_AtftAnimationModule_providers\n\n\n\ncluster_AtftCameraModule\n\n\n\ncluster_AtftCameraModule_declarations\n\n\n\ncluster_AtftCameraModule_exports\n\n\n\ncluster_AtftConnectorModule\n\n\n\ncluster_AtftConnectorModule_declarations\n\n\n\ncluster_AtftConnectorModule_exports\n\n\n\ncluster_AtftControlModule\n\n\n\ncluster_AtftControlModule_declarations\n\n\n\ncluster_AtftControlModule_exports\n\n\n\ncluster_AtftDataCenterActorModule\n\n\n\ncluster_AtftDataCenterActorModule_declarations\n\n\n\ncluster_AtftDataCenterActorModule_imports\n\n\n\ncluster_AtftDataCenterActorModule_exports\n\n\n\ncluster_AtftEffectModule\n\n\n\ncluster_AtftEffectModule_declarations\n\n\n\ncluster_AtftEffectModule_exports\n\n\n\ncluster_AtftHelperModule\n\n\n\ncluster_AtftHelperModule_declarations\n\n\n\ncluster_AtftHelperModule_exports\n\n\n\ncluster_AtftLightModule\n\n\n\ncluster_AtftLightModule_declarations\n\n\n\ncluster_AtftLightModule_exports\n\n\n\ncluster_AtftLoaderModule\n\n\n\ncluster_AtftLoaderModule_declarations\n\n\n\ncluster_AtftLoaderModule_exports\n\n\n\ncluster_AtftMeshModule\n\n\n\ncluster_AtftMeshModule_declarations\n\n\n\ncluster_AtftMeshModule_exports\n\n\n\ncluster_AtftModule\n\n\n\ncluster_AtftModule_imports\n\n\n\ncluster_AtftModule_exports\n\n\n\ncluster_AtftObjectModule\n\n\n\ncluster_AtftObjectModule_declarations\n\n\n\ncluster_AtftObjectModule_imports\n\n\n\ncluster_AtftObjectModule_exports\n\n\n\ncluster_AtftPipeModule\n\n\n\ncluster_AtftPipeModule_declarations\n\n\n\ncluster_AtftPipeModule_exports\n\n\n\ncluster_AtftRaycasterModule\n\n\n\ncluster_AtftRaycasterModule_declarations\n\n\n\ncluster_AtftRaycasterModule_exports\n\n\n\ncluster_AtftRaycasterModule_providers\n\n\n\ncluster_AtftRendererModule\n\n\n\ncluster_AtftRendererModule_declarations\n\n\n\ncluster_AtftRendererModule_exports\n\n\n\ncluster_AtftRendererModule_providers\n\n\n\ncluster_AtftStatsModule\n\n\n\ncluster_AtftStatsModule_declarations\n\n\n\ncluster_AtftStatsModule_exports\n\n\n\ncluster_AtftStatsModule_providers\n\n\n\ncluster_AtftTextModule\n\n\n\ncluster_AtftTextModule_declarations\n\n\n\ncluster_AtftTextModule_exports\n\n\n\n\nAnimationService\n\nAnimationService\n\n\n\nAtftAnimationModule\n\nAtftAnimationModule\n\nAtftAnimationModule -->\n\nAnimationService->AtftAnimationModule\n\n\n\n\n\nAtftModule\n\nAtftModule\n\nAtftModule -->\n\nAtftAnimationModule->AtftModule\n\n\n\n\n\nPerspectiveCameraComponent\n\nPerspectiveCameraComponent\n\n\n\nAtftCameraModule\n\nAtftCameraModule\n\nAtftCameraModule -->\n\nPerspectiveCameraComponent->AtftCameraModule\n\n\n\n\n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent \n\nPerspectiveCameraComponent  -->\n\nAtftCameraModule->PerspectiveCameraComponent \n\n\n\nAtftModule -->\n\nAtftCameraModule->AtftModule\n\n\n\n\n\nLineConnectorComponent\n\nLineConnectorComponent\n\n\n\nAtftConnectorModule\n\nAtftConnectorModule\n\nAtftConnectorModule -->\n\nLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nMeshLineConnectorComponent\n\nMeshLineConnectorComponent\n\nAtftConnectorModule -->\n\nMeshLineConnectorComponent->AtftConnectorModule\n\n\n\n\n\nLineConnectorComponent \n\nLineConnectorComponent \n\nLineConnectorComponent  -->\n\nAtftConnectorModule->LineConnectorComponent \n\n\n\n\n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent \n\nMeshLineConnectorComponent  -->\n\nAtftConnectorModule->MeshLineConnectorComponent \n\n\n\n\n\nAtftObjectModule\n\nAtftObjectModule\n\nAtftObjectModule -->\n\nAtftConnectorModule->AtftObjectModule\n\n\n\n\n\nMapControlsComponent\n\nMapControlsComponent\n\n\n\nAtftControlModule\n\nAtftControlModule\n\nAtftControlModule -->\n\nMapControlsComponent->AtftControlModule\n\n\n\n\n\nOrbitControlsComponent\n\nOrbitControlsComponent\n\nAtftControlModule -->\n\nOrbitControlsComponent->AtftControlModule\n\n\n\n\n\nMapControlsComponent \n\nMapControlsComponent \n\nMapControlsComponent  -->\n\nAtftControlModule->MapControlsComponent \n\n\n\n\n\nOrbitControlsComponent \n\nOrbitControlsComponent \n\nOrbitControlsComponent  -->\n\nAtftControlModule->OrbitControlsComponent \n\n\n\nAtftModule -->\n\nAtftControlModule->AtftModule\n\n\n\n\n\nLayerActorComponent\n\nLayerActorComponent\n\n\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule\n\nAtftDataCenterActorModule -->\n\nLayerActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerBarrelActorComponent\n\nServerBarrelActorComponent\n\nAtftDataCenterActorModule -->\n\nServerBarrelActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerCompactActorComponent\n\nServerCompactActorComponent\n\nAtftDataCenterActorModule -->\n\nServerCompactActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerIconActorComponent\n\nServerIconActorComponent\n\nAtftDataCenterActorModule -->\n\nServerIconActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nServerStandActorComponent\n\nServerStandActorComponent\n\nAtftDataCenterActorModule -->\n\nServerStandActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nWorkstationActorComponent\n\nWorkstationActorComponent\n\nAtftDataCenterActorModule -->\n\nWorkstationActorComponent->AtftDataCenterActorModule\n\n\n\n\n\nLayerActorComponent \n\nLayerActorComponent \n\nLayerActorComponent  -->\n\nAtftDataCenterActorModule->LayerActorComponent \n\n\n\n\n\nServerBarrelActorComponent \n\nServerBarrelActorComponent \n\nServerBarrelActorComponent  -->\n\nAtftDataCenterActorModule->ServerBarrelActorComponent \n\n\n\n\n\nServerCompactActorComponent \n\nServerCompactActorComponent \n\nServerCompactActorComponent  -->\n\nAtftDataCenterActorModule->ServerCompactActorComponent \n\n\n\n\n\nServerIconActorComponent \n\nServerIconActorComponent \n\nServerIconActorComponent  -->\n\nAtftDataCenterActorModule->ServerIconActorComponent \n\n\n\n\n\nServerStandActorComponent \n\nServerStandActorComponent \n\nServerStandActorComponent  -->\n\nAtftDataCenterActorModule->ServerStandActorComponent \n\n\n\n\n\nWorkstationActorComponent \n\nWorkstationActorComponent \n\nWorkstationActorComponent  -->\n\nAtftDataCenterActorModule->WorkstationActorComponent \n\n\n\nAtftDataCenterActorModule -->\n\nAtftModule->AtftDataCenterActorModule\n\n\n\n\n\nAtftAnimationModule \n\nAtftAnimationModule \n\nAtftAnimationModule  -->\n\nAtftModule->AtftAnimationModule \n\n\n\n\n\nAtftCameraModule \n\nAtftCameraModule \n\nAtftCameraModule  -->\n\nAtftModule->AtftCameraModule \n\n\n\n\n\nAtftControlModule \n\nAtftControlModule \n\nAtftControlModule  -->\n\nAtftModule->AtftControlModule \n\n\n\n\n\nAtftEffectModule \n\nAtftEffectModule \n\nAtftEffectModule  -->\n\nAtftModule->AtftEffectModule \n\n\n\n\n\nAtftObjectModule \n\nAtftObjectModule \n\nAtftObjectModule  -->\n\nAtftModule->AtftObjectModule \n\n\n\n\n\nAtftRaycasterModule \n\nAtftRaycasterModule \n\nAtftRaycasterModule  -->\n\nAtftModule->AtftRaycasterModule \n\n\n\n\n\nAtftRendererModule \n\nAtftRendererModule \n\nAtftRendererModule  -->\n\nAtftModule->AtftRendererModule \n\n\n\n\n\nAtftStatsModule \n\nAtftStatsModule \n\nAtftStatsModule  -->\n\nAtftModule->AtftStatsModule \n\n\n\n\n\nDashedDrawDirective\n\nDashedDrawDirective\n\n\n\nAtftEffectModule\n\nAtftEffectModule\n\nAtftEffectModule -->\n\nDashedDrawDirective->AtftEffectModule\n\n\n\nAtftModule -->\n\nAtftEffectModule->AtftModule\n\n\n\n\n\nDashedDrawDirective \n\nDashedDrawDirective \n\nDashedDrawDirective  -->\n\nAtftEffectModule->DashedDrawDirective \n\n\n\n\n\nAxesHelperComponent\n\nAxesHelperComponent\n\n\n\nAtftHelperModule\n\nAtftHelperModule\n\nAtftHelperModule -->\n\nAxesHelperComponent->AtftHelperModule\n\n\n\n\n\nEmptyComponent\n\nEmptyComponent\n\nAtftHelperModule -->\n\nEmptyComponent->AtftHelperModule\n\n\n\n\n\nGridHelperComponent\n\nGridHelperComponent\n\nAtftHelperModule -->\n\nGridHelperComponent->AtftHelperModule\n\n\n\n\n\nAxesHelperComponent \n\nAxesHelperComponent \n\nAxesHelperComponent  -->\n\nAtftHelperModule->AxesHelperComponent \n\n\n\n\n\nEmptyComponent \n\nEmptyComponent \n\nEmptyComponent  -->\n\nAtftHelperModule->EmptyComponent \n\n\n\n\n\nGridHelperComponent \n\nGridHelperComponent \n\nGridHelperComponent  -->\n\nAtftHelperModule->GridHelperComponent \n\n\n\nAtftObjectModule -->\n\nAtftHelperModule->AtftObjectModule\n\n\n\n\n\nDirectionalLightComponent\n\nDirectionalLightComponent\n\n\n\nAtftLightModule\n\nAtftLightModule\n\nAtftLightModule -->\n\nDirectionalLightComponent->AtftLightModule\n\n\n\n\n\nHemisphereLightComponent\n\nHemisphereLightComponent\n\nAtftLightModule -->\n\nHemisphereLightComponent->AtftLightModule\n\n\n\n\n\nPointLightComponent\n\nPointLightComponent\n\nAtftLightModule -->\n\nPointLightComponent->AtftLightModule\n\n\n\n\n\nDirectionalLightComponent \n\nDirectionalLightComponent \n\nDirectionalLightComponent  -->\n\nAtftLightModule->DirectionalLightComponent \n\n\n\n\n\nHemisphereLightComponent \n\nHemisphereLightComponent \n\nHemisphereLightComponent  -->\n\nAtftLightModule->HemisphereLightComponent \n\n\n\n\n\nPointLightComponent \n\nPointLightComponent \n\nPointLightComponent  -->\n\nAtftLightModule->PointLightComponent \n\n\n\nAtftObjectModule -->\n\nAtftLightModule->AtftObjectModule\n\n\n\n\n\nObjLoaderComponent\n\nObjLoaderComponent\n\n\n\nAtftLoaderModule\n\nAtftLoaderModule\n\nAtftLoaderModule -->\n\nObjLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjectLoaderComponent\n\nObjectLoaderComponent\n\nAtftLoaderModule -->\n\nObjectLoaderComponent->AtftLoaderModule\n\n\n\n\n\nSVGLoaderComponent\n\nSVGLoaderComponent\n\nAtftLoaderModule -->\n\nSVGLoaderComponent->AtftLoaderModule\n\n\n\n\n\nObjLoaderComponent \n\nObjLoaderComponent \n\nObjLoaderComponent  -->\n\nAtftLoaderModule->ObjLoaderComponent \n\n\n\n\n\nObjectLoaderComponent \n\nObjectLoaderComponent \n\nObjectLoaderComponent  -->\n\nAtftLoaderModule->ObjectLoaderComponent \n\n\n\n\n\nSVGLoaderComponent \n\nSVGLoaderComponent \n\nSVGLoaderComponent  -->\n\nAtftLoaderModule->SVGLoaderComponent \n\n\n\nAtftObjectModule -->\n\nAtftLoaderModule->AtftObjectModule\n\n\n\n\n\nBoxMeshComponent\n\nBoxMeshComponent\n\n\n\nAtftMeshModule\n\nAtftMeshModule\n\nAtftMeshModule -->\n\nBoxMeshComponent->AtftMeshModule\n\n\n\n\n\nCss3dVideoMeshComponent\n\nCss3dVideoMeshComponent\n\nAtftMeshModule -->\n\nCss3dVideoMeshComponent->AtftMeshModule\n\n\n\n\n\nCylinderMeshComponent\n\nCylinderMeshComponent\n\nAtftMeshModule -->\n\nCylinderMeshComponent->AtftMeshModule\n\n\n\n\n\nFrameMeshComponent\n\nFrameMeshComponent\n\nAtftMeshModule -->\n\nFrameMeshComponent->AtftMeshModule\n\n\n\n\n\nGridMeshComponent\n\nGridMeshComponent\n\nAtftMeshModule -->\n\nGridMeshComponent->AtftMeshModule\n\n\n\n\n\nPlaneMeshComponent\n\nPlaneMeshComponent\n\nAtftMeshModule -->\n\nPlaneMeshComponent->AtftMeshModule\n\n\n\n\n\nSphereMeshComponent\n\nSphereMeshComponent\n\nAtftMeshModule -->\n\nSphereMeshComponent->AtftMeshModule\n\n\n\n\n\nTorusMeshComponent\n\nTorusMeshComponent\n\nAtftMeshModule -->\n\nTorusMeshComponent->AtftMeshModule\n\n\n\n\n\nBoxMeshComponent \n\nBoxMeshComponent \n\nBoxMeshComponent  -->\n\nAtftMeshModule->BoxMeshComponent \n\n\n\n\n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent \n\nCss3dVideoMeshComponent  -->\n\nAtftMeshModule->Css3dVideoMeshComponent \n\n\n\n\n\nCylinderMeshComponent \n\nCylinderMeshComponent \n\nCylinderMeshComponent  -->\n\nAtftMeshModule->CylinderMeshComponent \n\n\n\n\n\nFrameMeshComponent \n\nFrameMeshComponent \n\nFrameMeshComponent  -->\n\nAtftMeshModule->FrameMeshComponent \n\n\n\n\n\nGridMeshComponent \n\nGridMeshComponent \n\nGridMeshComponent  -->\n\nAtftMeshModule->GridMeshComponent \n\n\n\n\n\nPlaneMeshComponent \n\nPlaneMeshComponent \n\nPlaneMeshComponent  -->\n\nAtftMeshModule->PlaneMeshComponent \n\n\n\n\n\nSphereMeshComponent \n\nSphereMeshComponent \n\nSphereMeshComponent  -->\n\nAtftMeshModule->SphereMeshComponent \n\n\n\n\n\nTorusMeshComponent \n\nTorusMeshComponent \n\nTorusMeshComponent  -->\n\nAtftMeshModule->TorusMeshComponent \n\n\n\nAtftObjectModule -->\n\nAtftMeshModule->AtftObjectModule\n\n\n\nAtftModule -->\n\nAtftObjectModule->AtftModule\n\n\n\n\n\nAtftConnectorModule \n\nAtftConnectorModule \n\nAtftConnectorModule  -->\n\nAtftObjectModule->AtftConnectorModule \n\n\n\n\n\nAtftHelperModule \n\nAtftHelperModule \n\nAtftHelperModule  -->\n\nAtftObjectModule->AtftHelperModule \n\n\n\n\n\nAtftLightModule \n\nAtftLightModule \n\nAtftLightModule  -->\n\nAtftObjectModule->AtftLightModule \n\n\n\n\n\nAtftLoaderModule \n\nAtftLoaderModule \n\nAtftLoaderModule  -->\n\nAtftObjectModule->AtftLoaderModule \n\n\n\n\n\nAtftMeshModule \n\nAtftMeshModule \n\nAtftMeshModule  -->\n\nAtftObjectModule->AtftMeshModule \n\n\n\n\n\nAtftTextModule \n\nAtftTextModule \n\nAtftTextModule  -->\n\nAtftObjectModule->AtftTextModule \n\n\n\n\n\nSceneComponent \n\nSceneComponent \n\nSceneComponent  -->\n\nAtftObjectModule->SceneComponent \n\n\n\n\n\nAtftRaycasterModule\n\nAtftRaycasterModule\n\nAtftModule -->\n\nAtftRaycasterModule->AtftModule\n\n\n\n\n\nRaycasterCameraDirective \n\nRaycasterCameraDirective \n\nRaycasterCameraDirective  -->\n\nAtftRaycasterModule->RaycasterCameraDirective \n\n\n\n\n\nRaycasterEnableDirective \n\nRaycasterEnableDirective \n\nRaycasterEnableDirective  -->\n\nAtftRaycasterModule->RaycasterEnableDirective \n\n\n\n\n\nRaycasterGroupDirective \n\nRaycasterGroupDirective \n\nRaycasterGroupDirective  -->\n\nAtftRaycasterModule->RaycasterGroupDirective \n\n\n\n\n\nAtftRendererModule\n\nAtftRendererModule\n\nAtftModule -->\n\nAtftRendererModule->AtftModule\n\n\n\n\n\nRendererCanvasComponent \n\nRendererCanvasComponent \n\nRendererCanvasComponent  -->\n\nAtftRendererModule->RendererCanvasComponent \n\n\n\n\n\nAtftStatsModule\n\nAtftStatsModule\n\nAtftModule -->\n\nAtftStatsModule->AtftModule\n\n\n\n\n\nStatsAutoShowDirective \n\nStatsAutoShowDirective \n\nStatsAutoShowDirective  -->\n\nAtftStatsModule->StatsAutoShowDirective \n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAtftObjectModule -->\n\nSceneComponent->AtftObjectModule\n\n\n\n\n\nAtftTextModule\n\nAtftTextModule\n\nAtftObjectModule -->\n\nAtftTextModule->AtftObjectModule\n\n\n\n\n\nTextMeshComponent \n\nTextMeshComponent \n\nTextMeshComponent  -->\n\nAtftTextModule->TextMeshComponent \n\n\n\n\n\nDeg2RadPipe\n\nDeg2RadPipe\n\n\n\nAtftPipeModule\n\nAtftPipeModule\n\nAtftPipeModule -->\n\nDeg2RadPipe->AtftPipeModule\n\n\n\n\n\nRad2DegPipe\n\nRad2DegPipe\n\nAtftPipeModule -->\n\nRad2DegPipe->AtftPipeModule\n\n\n\n\n\nDeg2RadPipe \n\nDeg2RadPipe \n\nDeg2RadPipe  -->\n\nAtftPipeModule->Deg2RadPipe \n\n\n\n\n\nRad2DegPipe \n\nRad2DegPipe \n\nRad2DegPipe  -->\n\nAtftPipeModule->Rad2DegPipe \n\n\n\n\n\nRaycasterCameraDirective\n\nRaycasterCameraDirective\n\nAtftRaycasterModule -->\n\nRaycasterCameraDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterEnableDirective\n\nRaycasterEnableDirective\n\nAtftRaycasterModule -->\n\nRaycasterEnableDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterGroupDirective\n\nRaycasterGroupDirective\n\nAtftRaycasterModule -->\n\nRaycasterGroupDirective->AtftRaycasterModule\n\n\n\n\n\nRaycasterService\n\nRaycasterService\n\nAtftRaycasterModule -->\n\nRaycasterService->AtftRaycasterModule\n\n\n\n\n\nRendererCanvasComponent\n\nRendererCanvasComponent\n\nAtftRendererModule -->\n\nRendererCanvasComponent->AtftRendererModule\n\n\n\n\n\nRendererService\n\nRendererService\n\nAtftRendererModule -->\n\nRendererService->AtftRendererModule\n\n\n\n\n\nStatsAutoShowDirective\n\nStatsAutoShowDirective\n\nAtftStatsModule -->\n\nStatsAutoShowDirective->AtftStatsModule\n\n\n\n\n\nStatsService\n\nStatsService\n\nAtftStatsModule -->\n\nStatsService->AtftStatsModule\n\n\n\n\n\nTextMeshComponent\n\nTextMeshComponent\n\nAtftTextModule -->\n\nTextMeshComponent->AtftTextModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
